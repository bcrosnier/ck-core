{
  "index.html": {
    "href": "index.html",
    "title": "CK-Core components | CK.Core documentation",
    "keywords": "Improve this Doc CK-Core components This documentation is in pre-release and is subject to change. This repository is home to common tools, used in most of our software, split in multiple components and packages on NuGet : CK.Core ( NuGet package ), a common core of utilities used in the other components (such as CKTrait , CKException or TemporaryFile ) CK.ActivityMonitor ( NuGet package ), containing the ActivityMonitor logging component logic (formerly part of CK.Core ) CK.ActivityMonitor.StandardSender ( NuGet package ), standard extensions like IActivityMonitor.Trace().Send() used for easier logging at development time (formerly part of CK.Core ) CK.Text ( NuGet package ), home to text-related utilities like StringMatcher , end-of-line normalizers and string.Concatenate() (formerly part of CK.Core ) CK.Monitoring ( NuGet package ), with ActivityMonitor -related utilities for writing and reading text and/or binary log sinks with the GrandOutput CK.Reflection ( NuGet package ), containing various reflection-related utilities"
  },
  "api/CK.Core.ActivityMonitorLogData.html": {
    "href": "api/CK.Core.ActivityMonitorLogData.html",
    "title": "Class ActivityMonitorLogData | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorLogData Data required by UnfilteredLog(ActivityMonitorLogData) . This is also the base class for ActivityMonitorGroupData . Inheritance Object ActivityMonitorLogData Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorLogData Constructors | Improve this Doc View Source ActivityMonitorLogData(LogLevel, Exception, CKTrait, String, DateTimeStamp, String, Int32) Initializes a new ActivityMonitorLogData . Declaration public ActivityMonitorLogData(LogLevel level, Exception exception, CKTrait tags, string text, DateTimeStamp logTime, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . Exception exception Exception of the log. Can be null. CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . String text Text of the log. Can be null or empty only if exception is not null: the Exception.Message is the text. DateTimeStamp logTime Time of the log. You can use UtcNow or NextLogTime(IActivityMonitor) extension method. String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Can be null. | Improve this Doc View Source ActivityMonitorLogData(LogLevel, String, Int32) Preinitializes a new ActivityMonitorLogData : Initialize(String, Exception, CKTrait, DateTimeStamp) has yet to be called. Declaration public ActivityMonitorLogData(LogLevel level, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Can be null. Fields | Improve this Doc View Source FileName Name of the source file that emitted the log. Can be null. Declaration public readonly string FileName Field Value Type Description String | Improve this Doc View Source Level Log level. Can not be None . If the log has been successfully filtered, the IsFiltered bit flag is set. Declaration public readonly LogLevel Level Field Value Type Description LogLevel | Improve this Doc View Source LineNumber Line number in the source file that emitted the log. Can be null. Declaration public readonly int LineNumber Field Value Type Description Int32 | Improve this Doc View Source MaskedLevel The actual level ( Trace to Fatal ) associated to this group without IsFiltered bit flag. Declaration public readonly LogLevel MaskedLevel Field Value Type Description LogLevel Properties | Improve this Doc View Source Exception Exception of the log. Can be null. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source ExceptionData Gets the CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration public CKExceptionData ExceptionData { get; } Property Value Type Description CKExceptionData | Improve this Doc View Source IsFilteredLog Gets whether this log data has been successfully filtered (otherwise it is an unfiltered log). Declaration public bool IsFilteredLog { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTextTheExceptionMessage Gets whether the Text is actually the Exception message. Declaration public bool IsTextTheExceptionMessage { get; } Property Value Type Description Boolean | Improve this Doc View Source LogTime Gets the time of the log. Declaration public DateTimeStamp LogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source Tags Tags (from ActivityMonitor.Tags ) associated to the log. It will be union-ed with the current AutoTags . Declaration public CKTrait Tags { get; } Property Value Type Description CKTrait | Improve this Doc View Source Text Text of the log. Can not be null. Declaration public string Text { get; } Property Value Type Description String Methods | Improve this Doc View Source EnsureExceptionData() Gets or creates the CKExceptionData that captures exception information. If Exception is null, this returns null. Declaration public CKExceptionData EnsureExceptionData() Returns Type Description CKExceptionData A data representation of the exception or null. | Improve this Doc View Source Initialize(String, Exception, CKTrait, DateTimeStamp) Initializes this data. Declaration public void Initialize(string text, Exception exception, CKTrait tags, DateTimeStamp logTime) Parameters Type Name Description String text Text of the log. Can be null or empty: if exception is not null, the System.Exception.Message becomes the text otherwise NoLogText is used. Exception exception Exception of the log. Can be null. CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . DateTimeStamp logTime Time of the log. You can use UtcNow or NextLogTime(IActivityMonitor) extension method."
  },
  "api/CK.Core.ActivityMonitorGroupData.html": {
    "href": "api/CK.Core.ActivityMonitorGroupData.html",
    "title": "Class ActivityMonitorGroupData | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorGroupData Data required by UnfilteredOpenGroup(ActivityMonitorGroupData) . Inheritance Object ActivityMonitorLogData ActivityMonitorGroupData Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorGroupData : ActivityMonitorLogData Constructors | Improve this Doc View Source ActivityMonitorGroupData() Initializes a mere new ActivityMonitorGroupData without any actual data. Should be unsed only for rejected opened group. Declaration public ActivityMonitorGroupData() | Improve this Doc View Source ActivityMonitorGroupData(LogLevel, CKTrait, String, DateTimeStamp, Exception, Func<String>, String, Int32) Initializes a new ActivityMonitorGroupData . Declaration public ActivityMonitorGroupData(LogLevel level, CKTrait tags, string text, DateTimeStamp logTime, Exception exception, Func<string> getConclusionText, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . String text Text of the log. Can be null or empty only if exception is not null: the System.Exception.Message is the text. DateTimeStamp logTime Time of the log. You may use UtcNow or NextLogTime(IActivityMonitor) extension method. Exception exception Exception of the log. Can be null. Func < String > getConclusionText Optional function that provides delayed obtention of the group conclusion: will be called on group closing. String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Can be null. | Improve this Doc View Source ActivityMonitorGroupData(LogLevel, String, Int32) Preinitializes a new ActivityMonitorLogData : Initialize(String, Exception, CKTrait, DateTimeStamp, Func<String>) has yet to be called. Declaration public ActivityMonitorGroupData(LogLevel level, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Can be null. Methods | Improve this Doc View Source Initialize(String, Exception, CKTrait, DateTimeStamp, Func<String>) Initializes this group data. Declaration public void Initialize(string text, Exception exception, CKTrait tags, DateTimeStamp logTime, Func<string> getConclusionText) Parameters Type Name Description String text Text of the log. Can be null or empty only if exception is not null: the System.Exception.Message is the text. Exception exception Exception of the log. Can be null. CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . DateTimeStamp logTime Time of the log. You may use UtcNow or NextLogTime(IActivityMonitor) extension method. Func < String > getConclusionText Optional function that provides delayed obtention of the group conclusion: will be called on group closing."
  },
  "api/CK.Core.ActivityMonitorExtension.html": {
    "href": "api/CK.Core.ActivityMonitorExtension.html",
    "title": "Class ActivityMonitorExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorExtension Provides extension methods for IActivityMonitor and other types from the Activity monitor framework. Inheritance Object ActivityMonitorExtension Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorExtension Methods | Improve this Doc View Source CloseGroup(IActivityMonitor, Object) Closes the current Group. Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a System.Collections.Generic.List`1 or an System.Collections.Generic.IEnumerable`1 of ActivityLogGroupConclusion, or any object with an overridden System.Object.ToString method. See remarks (especially for List ). Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. Declaration public static void CloseGroup(IActivityMonitor this, object userConclusion = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Object userConclusion Optional string, ActivityLogGroupConclusion object, enumerable of ActivityLogGroupConclusion or object to conclude the group. See remarks. | Improve this Doc View Source CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) Enables simple \"using\" syntax to easily collect any LogLevel (or above) entries (defaults to Error ) around operations. The callback is called when the the returned IDisposable is disposed and there are at least one collected entry. Declaration public static IDisposable CollectEntries(IActivityMonitor this, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>> errorHandler, LogLevelFilter level = LogLevelFilter.Error) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action < IReadOnlyList < ActivityMonitorSimpleCollector.Entry >> errorHandler An action that accepts a list of fatal or error ActivityMonitorSimpleCollector.Entry . LogLevelFilter level Defines the level of the collected entries (by default fatal or error entries). Returns Type Description IDisposable A System.IDisposable object used to manage the scope of this handler. | Improve this Doc View Source CreateBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Creates a bridge to another monitor's ActivityMonitorBridgeTarget . Only one bridge to the same monitor can exist at a time: if FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) is not null, this throws a System.InvalidOperationException . This bridge does not synchronize AutoTags and Topic (see CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ). Declaration public static IDisposable CreateBridgeTo(IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will receive our logs. Returns Type Description IDisposable A System.IDisposable object that can be disposed to automatically call UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) . | Improve this Doc View Source CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Creates a strong bridge to another monitor's ActivityMonitorBridgeTarget . Only one bridge to the same monitor can exist at a time: if FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) is not null, this throws a System.InvalidOperationException . A strong bridge synchronizes AutoTags and Topic between the two monitors. When created, the 2 properties of the local monitor are set to the ones of the target monitor. Declaration public static IDisposable CreateStrongBridgeTo(IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will receive our logs. Returns Type Description IDisposable A System.IDisposable object that can be disposed to automatically call UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) . | Improve this Doc View Source DependentActivity(IActivityMonitor, String, Int32) Enables dependent activities token creation and activities launch. Use StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32) to declare the start of a dependent activity on the target monitor. Declaration public static ActivityMonitorExtension.DependentSender DependentActivity(IActivityMonitor this, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description ActivityMonitorExtension.DependentSender Sender object. | Improve this Doc View Source FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Finds an existing bridge to another monitor. Declaration public static ActivityMonitorBridge FindBridgeTo(IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that receives our logs. Returns Type Description ActivityMonitorBridge The existing ActivityMonitorBridge or null if no such bridge exists. | Improve this Doc View Source NextLogTime(IActivityMonitor) Returns a valid DateTimeStamp that will be used for a log: it is based on System.DateTime.UtcNow and has a Uniquifier that will not be changed when emitting the next log. Declaration public static DateTimeStamp NextLogTime(IActivityMonitor this) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Returns Type Description DateTimeStamp The next log time for the monitor. | Improve this Doc View Source OnError(IActivityMonitor, Action) Enables simple \"using\" syntax to easily detect Fatal or Error . Declaration public static IDisposable OnError(IActivityMonitor this, Action onFatalOrError) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action onFatalOrError An action that is called whenever an Error or Fatal error occurs. Returns Type Description IDisposable A System.IDisposable object used to manage the scope of this handler. | Improve this Doc View Source OnError(IActivityMonitor, Action, Action) Enables simple \"using\" syntax to easily detect Fatal or Error . Declaration public static IDisposable OnError(IActivityMonitor this, Action onFatal, Action onError) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action onFatal An action that is called whenever a Fatal error occurs. Action onError An action that is called whenever an Error occurs. Returns Type Description IDisposable A System.IDisposable object used to manage the scope of this handler. | Improve this Doc View Source RegisterClient(IActivityMonitorOutput, IActivityMonitorClient) Registers an IActivityMonitorClient to the Clients list. Duplicates IActivityMonitorClient are silently ignored. Declaration public static IActivityMonitorClient RegisterClient(IActivityMonitorOutput this, IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The registered client. | Improve this Doc View Source RegisterClient<T>(IActivityMonitorOutput, T) Registers a typed IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static T RegisterClient<T>(IActivityMonitorOutput this, T client)where T : IActivityMonitorClient Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. T client Client to register. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . | Improve this Doc View Source RegisterClients(IActivityMonitorOutput, IActivityMonitorClient[]) Registers multiple IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static IActivityMonitorOutput RegisterClients(IActivityMonitorOutput this, params IActivityMonitorClient[] clients) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IActivityMonitorClient [] clients Multiple clients to register. Returns Type Description IActivityMonitorOutput This registrar to enable fluent syntax. | Improve this Doc View Source RegisterClients(IActivityMonitorOutput, IEnumerable<IActivityMonitorClient>) Registers multiple IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static IActivityMonitorOutput RegisterClients(IActivityMonitorOutput this, IEnumerable<IActivityMonitorClient> clients) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IEnumerable < IActivityMonitorClient > clients Multiple clients to register. Returns Type Description IActivityMonitorOutput This registrar to enable fluent syntax. | Improve this Doc View Source RegisterUniqueClient<T>(IActivityMonitorOutput) Registers a unique client for a type that must have a public default constructor. System.Activator.CreateInstance``1 is called if necessary. Declaration public static T RegisterUniqueClient<T>(IActivityMonitorOutput this)where T : IActivityMonitorClient, new () Parameters Type Name Description IActivityMonitorOutput this Returns Type Description T The found or newly created client. Type Parameters Name Description T | Improve this Doc View Source SetAutoTags(IActivityMonitor, CKTrait, SetOperation) Alter tags of this IActivityMonitor . Current AutoTags will be automatically restored when the returned System.IDisposable will be disposed. Even if when a Group is closed, the IActivityMonitor.AutoTags is automatically restored to its original value (captured when the Group was opened), this may be useful to locally change the tags level without bothering to restore the initial value (this is close to what OpenGroup/CloseGroup do with both the Filter and the AutoTags). Declaration public static IDisposable SetAutoTags(IActivityMonitor this, CKTrait tags, SetOperation operation = SetOperation.Union) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. CKTrait tags Tags to combine with the current one. SetOperation operation Defines the way the new tags must be combined with current ones. Returns Type Description IDisposable A System.IDisposable object that will restore the current tag when disposed. | Improve this Doc View Source SetMinimalFilter(IActivityMonitor, LogFilter) Sets a filter level on this IActivityMonitor . The current MinimalFilter will be automatically restored when the returned System.IDisposable will be disposed. Even if when a Group is closed, the IActivityMonitor.Filter is automatically restored to its original value (captured when the Group was opened), this may be useful to locally change the filter level without bothering to restore the initial value (this is what OpenGroup/CloseGroup do with both the Filter and the AutoTags). Declaration public static IDisposable SetMinimalFilter(IActivityMonitor this, LogFilter f) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. LogFilter f The new filter. Returns Type Description IDisposable A System.IDisposable object that will restore the current level. | Improve this Doc View Source SetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) Sets filter levels on this IActivityMonitor . The current MinimalFilter will be automatically restored when the returned System.IDisposable will be disposed. Even if when a Group is closed, the IActivityMonitor.Filter is automatically restored to its original value (captured when the Group was opened), this may be useful to locally change the filter level without bothering to restore the initial value (this is what OpenGroup/CloseGroup do with both the Filter and the AutoTags). Declaration public static IDisposable SetMinimalFilter(IActivityMonitor this, LogLevelFilter group, LogLevelFilter line) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. LogLevelFilter group The new filter level for group. LogLevelFilter line The new filter level for log line. Returns Type Description IDisposable A System.IDisposable object that will restore the current level. | Improve this Doc View Source ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) Challenges source filters based on FileName/LineNumber, ActualFilter and application domain's DefaultFilter filters to test whether a log group should actually be emitted. Declaration public static bool ShouldLogGroup(IActivityMonitor this, LogLevel level, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level Log level. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description Boolean True if the log should be emitted. | Improve this Doc View Source ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) Challenges source filters based on FileName/LineNumber, ActualFilter and application domain's DefaultFilter filters to test whether a log line should actually be emitted. Declaration public static bool ShouldLogLine(IActivityMonitor this, LogLevel level, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level Log level. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description Boolean True if the log should be emitted. | Improve this Doc View Source StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32) Starts a dependent activity. This sets the Topic if it is not null and opens a group tagged with StartDependentActivity with a message that can be parsed back thanks to TryParseStartMessage(String, out Guid, out DateTimeStamp) . Declaration public static IDisposable StartDependentActivity(IActivityMonitor this, ActivityMonitor.DependentToken token, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . ActivityMonitor.DependentToken token Token that describes the origin of the activity. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description IDisposable A disposable object. It must be disposed at the end of the activity. | Improve this Doc View Source ToStringGroupConclusion(IEnumerable<ActivityLogGroupConclusion>, String) Gets this Group conclusions as a readable string. Declaration public static string ToStringGroupConclusion(IEnumerable<ActivityLogGroupConclusion> this, string conclusionSeparator = \" - \") Parameters Type Name Description IEnumerable < ActivityLogGroupConclusion > this This group conclusion. Can be null. String conclusionSeparator Conclusion separator. Returns Type Description String A lovely concatenated string of conclusions. | Improve this Doc View Source ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String) Gets the path as a readable string. Declaration public static string ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement> this, string elementSeparator = \"> \", string withoutConclusionFormat = \"{0}{1} \", string withConclusionFormat = \"{0}{1} -{{ {2} }}\", string conclusionSeparator = \" - \", string fatal = \"[Fatal]- \", string error = \"[Error]- \", string warn = \"[Warning]- \", string info = \"[Info]- \", string trace = \"\") Parameters Type Name Description IEnumerable < ActivityMonitorPathCatcher.PathElement > this This path. Can be null. String elementSeparator Between elements. String withoutConclusionFormat There must be 3 placeholders {0} for the level, {1} for the text and {2} for the conclusion. String withConclusionFormat There must be 2 placeholders {0} for the level and {1} for the text. String conclusionSeparator Conclusion separator. String fatal For Fatal errors. String error For Errors. String warn For Warnings. String info For Infos. String trace For Traces. Returns Type Description String A lovely path. | Improve this Doc View Source UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Removes an existing ActivityMonitorBridge to another monitor if it exists (silently ignores it if not found). Declaration public static ActivityMonitorBridge UnbridgeTo(IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will no more receive our logs. Returns Type Description ActivityMonitorBridge The unregistered ActivityMonitorBridge if found, null otherwise. | Improve this Doc View Source UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) Logs a text regardless of ActualFilter level. Remarks The text can not be null or empty. Each call to log is considered as a unit of text: depending on the rendering engine, a line or a paragraph separator (or any appropriate separator) should be appended between each text if the level is the same as the previous one. If needed, the special text ParkLevel (\"PARK-LEVEL\") can be used as a convention to break the current LogLevel and resets it: the next log, even with the same LogLevel, should be treated as if a different LogLevel is used. Declaration public static void UnfilteredLog(IActivityMonitor this, CKTrait tags, LogLevel level, string text, DateTimeStamp logTime, Exception ex, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. These tags will be union-ed with the current AutoTags . LogLevel level Log level. Must not be None . String text Text to log. Must not be null or empty. DateTimeStamp logTime Time-stamp of the log entry. You can use UtcNow or NextLogTime(IActivityMonitor) extension method. Exception ex Optional exception associated to the log. When not null, a Group is automatically created. String fileName The source code file name from which the log is emitted. Int32 lineNumber The line number in the source from which the log is emitted. | Improve this Doc View Source UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) Opens a group regardless of ActualFilter level. CloseGroup(IActivityMonitor, Object) must be called in order to close the group, and/or the returned object must be disposed (both safely can be called: the group is closed on the first action, the second one is ignored). Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the Filter is automatically sets to Debug to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group is filtered (when the level is None). Declaration public static IDisposable UnfilteredOpenGroup(IActivityMonitor this, CKTrait tags, LogLevel level, Func<string> getConclusionText, string text, DateTimeStamp logTime, Exception ex, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with current AutoTags . LogLevel level Log level. The None level is used to open a filtered group. See remarks. Func < String > getConclusionText Optional function that will be called on group closing. String text Text to log (the title of the group). Null text is valid and considered as System.String.Empty or assigned to the System.Exception.Message if it exists. DateTimeStamp logTime Time of the log entry. You can use UtcNow or NextLogTime(IActivityMonitor) extension method. Exception ex Optional exception associated to the group. String fileName The source code file name from which the group is opened. Int32 lineNumber The line number in the source from which the group is opened. Returns Type Description IDisposable A disposable object that can be used to close the group. | Improve this Doc View Source UnregisterClient<T>(IActivityMonitorOutput, Func<T, Boolean>) Unregisters the first IActivityMonitorClient from the Clients list that satisfies the predicate. Declaration public static T UnregisterClient<T>(IActivityMonitorOutput this, Func<T, bool> predicate)where T : IActivityMonitorClient Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . Func <T, Boolean > predicate A predicate that will be used to determine the first client to unregister. Returns Type Description T The unregistered client, or null if no client has been found. Type Parameters Name Description T"
  },
  "api/CK.Core.ActivityMonitorExtension.DependentSender.html": {
    "href": "api/CK.Core.ActivityMonitorExtension.DependentSender.html",
    "title": "Struct ActivityMonitorExtension.DependentSender | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct ActivityMonitorExtension.DependentSender Offers dependent token creation and launching. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public struct DependentSender Methods | Improve this Doc View Source CreateToken(Boolean) Creates a token for a dependent activity that will use the current monitor's topic. By default, a line with CreateDependentActivity is logged that describes the creation of the token. If delayedLaunch is true, the actual launch of the dependent activity must be signaled thanks to Launch(ActivityMonitor.DependentToken) (otherwise there will be no way to bind the two activities). Declaration public ActivityMonitor.DependentToken CreateToken(bool delayedLaunch = false) Parameters Type Name Description Boolean delayedLaunch True to use Launch(ActivityMonitor.DependentToken) later to indicate the actual launch of the dependent activity. Returns Type Description ActivityMonitor.DependentToken A dependent token. | Improve this Doc View Source CreateTokenWithTopic(String, Boolean) Creates a token for a dependent activity that will be bound to a specified topic (or that will not change the dependent monitor's topic if null is specified). Declaration public ActivityMonitor.DependentToken CreateTokenWithTopic(string dependentTopic, bool delayedLaunch = false) Parameters Type Name Description String dependentTopic Topic for the dependent activity. Use null to not change the dependent monitor's topic. Boolean delayedLaunch True to use Launch(ActivityMonitor.DependentToken) later to indicate the actual launch of the dependent activity. Returns Type Description ActivityMonitor.DependentToken A dependent token. | Improve this Doc View Source Launch(ActivityMonitor.DependentToken) Signals the launch of one or more dependent activities by emitting a log line that describes the token. The token must have been created by CreateToken(Boolean) or CreateTokenWithTopic(String, Boolean) with a true delayedLaunch parameter otherwise an System.InvalidOperationException is thrown. Declaration public void Launch(ActivityMonitor.DependentToken token) Parameters Type Name Description ActivityMonitor.DependentToken token Dependent token. | Improve this Doc View Source Launch(Action<ActivityMonitor.DependentToken>) Launches one or more dependent activities (thanks to a delegate) that will use the current monitor's topic. This creates a new ActivityMonitor.DependentToken and opens a group that wraps the execution of the dependentLauncher . Declaration public void Launch(Action<ActivityMonitor.DependentToken> dependentLauncher) Parameters Type Name Description Action < ActivityMonitor.DependentToken > dependentLauncher Must create and launch dependent activities that should use the created token. | Improve this Doc View Source LaunchWithTopic(Action<ActivityMonitor.DependentToken>, String) Launches one or more dependent activities (thanks to a delegate) that will be bound to a specified topic (or that will not change the dependent monitor's topic if null is specified). This creates a new ActivityMonitor.DependentToken and opens a group that wraps the execution of the dependentLauncher . Declaration public void LaunchWithTopic(Action<ActivityMonitor.DependentToken> dependentLauncher, string dependentTopic) Parameters Type Name Description Action < ActivityMonitor.DependentToken > dependentLauncher Must create and launch dependent activities that should use the created token. String dependentTopic Topic for the dependent activity. When null, the dependent monitor's topic is not changed. | Improve this Doc View Source StartDependentActivity(ActivityMonitor.DependentToken) Declaration [Obsolete(\"Use the IActivityMonitor.StartDependentActivity( token ) extension method instead.\", false)] public IDisposable StartDependentActivity(ActivityMonitor.DependentToken token) Parameters Type Name Description ActivityMonitor.DependentToken token Returns Type Description IDisposable"
  },
  "api/CK.Core.ActivityMonitorErrorCounter.html": {
    "href": "api/CK.Core.ActivityMonitorErrorCounter.html",
    "title": "Class ActivityMonitorErrorCounter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorErrorCounter Count fatal, error or warn that occurred. It can also automatically adds a conclusion to closed groups that summarizes the number of fatals, errors and warnings. Inheritance Object ActivityMonitorClient ActivityMonitorErrorCounter Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorErrorCounter : ActivityMonitorClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorErrorCounter(Boolean) Initializes a new error counter with GenerateConclusion sets to false. Declaration public ActivityMonitorErrorCounter(bool generateConclusion = false) Parameters Type Name Description Boolean generateConclusion True to generate a conclusion. See GenerateConclusion . Fields | Improve this Doc View Source TagErrorCounter Gets the tag used for generated error conclusions (\"c:ErrorCounter\") when GenerateConclusion is true. Declaration public static readonly CKTrait TagErrorCounter Field Value Type Description CKTrait Properties | Improve this Doc View Source Current Gets the current ActivityMonitorErrorCounter.State . Declaration public ActivityMonitorErrorCounter.State Current { get; } Property Value Type Description ActivityMonitorErrorCounter.State | Improve this Doc View Source GenerateConclusion Gets or sets whether the Group conclusion must be generated. Defaults to false. Declaration public bool GenerateConclusion { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Root Gets the root ActivityMonitorErrorCounter.State . Declaration public ActivityMonitorErrorCounter.State Root { get; } Property Value Type Description ActivityMonitorErrorCounter.State Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Restores current to the previous one (or keep it on the root if no opened group exist). Declaration protected override void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The log group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Handles group conclusion. Declaration protected override void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Updates error counters. Declaration protected override void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Updates error counters. Declaration protected override void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null."
  },
  "api/CK.Core.ActivityMonitorErrorCounter.State.html": {
    "href": "api/CK.Core.ActivityMonitorErrorCounter.State.html",
    "title": "Class ActivityMonitorErrorCounter.State | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorErrorCounter.State Encapsulates error information. The ToString() method displays the conclusion in a default text format. Inheritance Object ActivityMonitorErrorCounter.State Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class State Properties | Improve this Doc View Source ErrorCount Gets the current number of errors. Declaration public int ErrorCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FatalCount Gets the current number of fatal errors. Declaration public int FatalCount { get; } Property Value Type Description Int32 | Improve this Doc View Source HasError Gets whether an error or a fatal occurred. Declaration public bool HasError { get; } Property Value Type Description Boolean | Improve this Doc View Source HasWarnOrError Gets whether a fatal, an error or a warn occurred. Declaration public bool HasWarnOrError { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxLogLevel Gets the current maximum LogLevel . Declaration public LogLevel MaxLogLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source WarnCount Gets the current number of warnings. Declaration public int WarnCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ClearError() Resets FatalCount and ErrorCount . Declaration public void ClearError() | Improve this Doc View Source ClearWarn(Boolean) Resets current WarnCount , and optionnaly FatalCount and ErrorCount . Declaration public void ClearWarn(bool clearError = false) Parameters Type Name Description Boolean clearError | Improve this Doc View Source ToString() Gets the current message if HasWarnOrError is true, otherwise null. Declaration public override string ToString() Returns Type Description String Formatted message or null if no error nor warning occurred."
  },
  "api/CK.Core.ActivityMonitorConsoleClient.html": {
    "href": "api/CK.Core.ActivityMonitorConsoleClient.html",
    "title": "Class ActivityMonitorConsoleClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorConsoleClient Displays the activity to the console. Inheritance Object ActivityMonitorTextHelperClient ActivityMonitorTextWriterClient ActivityMonitorConsoleClient Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorConsoleClient : ActivityMonitorTextWriterClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorConsoleClient() Initializes a new ActivityMonitorConsoleClient . Declaration public ActivityMonitorConsoleClient()"
  },
  "api/CK.Core.ActivityMonitorClient.html": {
    "href": "api/CK.Core.ActivityMonitorClient.html",
    "title": "Class ActivityMonitorClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorClient Base class that explicitly implements IActivityMonitorClient (to hide it from public interface, except its MinimalFilter ). Inheritance Object ActivityMonitorClient Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax [ExcludeFromCodeCoverage] public class ActivityMonitorClient : IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorClient() Initialize a new ActivityMonitorClient that does nothing. Declaration public ActivityMonitorClient() Fields | Improve this Doc View Source Empty Empty IActivityMonitorClient (null object design pattern). Declaration public static readonly ActivityMonitorClient Empty Field Value Type Description ActivityMonitorClient Properties | Improve this Doc View Source MinimalFilter Gets the minimal log level that this Client expects: defaults to Undefined . Declaration public virtual LogFilter MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CKTrait newTags | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient) Creates a standardized exception that can be thrown by SetMonitor(IActivityMonitorImpl, Boolean) . Declaration public static InvalidOperationException CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient boundClient) Parameters Type Name Description IActivityMonitorBoundClient boundClient The bound client. Returns Type Description InvalidOperationException An exception with an explicit message. | Improve this Doc View Source OnAutoTagsChanged(CKTrait) Called when AutoTags changed. Does nothing by default. Declaration protected virtual void OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CKTrait newTags The new auto tags. | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Does nothing by default. Declaration protected virtual void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Text that conclude the group. Never null but can be empty. | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Called once the user conclusions are known at the group level but before the group is actually closed: clients can update the conclusions for the group. Does nothing by default. Declaration protected virtual void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Called for each UnfilteredOpenGroup(ActivityMonitorGroupData) . Does nothing by default. Declaration protected virtual void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnTopicChanged(String, String, Int32) Called when Topic changed. Does nothing by default. Declaration protected virtual void OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic The new topic. String fileName Source file name where SetTopic(String, String, Int32) has been called. Int32 lineNumber Source line number where IActivityMonitor.SetTopic has been called. | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Called for each UnfilteredLog(ActivityMonitorLogData) . Does nothing by default. The Exception is always null since exceptions are carried by groups. Declaration protected virtual void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null."
  },
  "api/CK.Core.ActivityMonitorBridgeTarget.html": {
    "href": "api/CK.Core.ActivityMonitorBridgeTarget.html",
    "title": "Class ActivityMonitorBridgeTarget | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorBridgeTarget This class used with ActivityMonitorBridge , enables IActivityMonitor to relay logs. Each activity monitor exposes such a bridge target on its output thanks to BridgeTarget . Inheritance Object ActivityMonitorBridgeTarget Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorBridgeTarget Constructors | Improve this Doc View Source ActivityMonitorBridgeTarget(IActivityMonitorImpl, Boolean) Initializes a new ActivityMonitorBridgeTarget bound to a IActivityMonitor . Declaration public ActivityMonitorBridgeTarget(IActivityMonitorImpl targetMonitor, bool honorMonitorFilter = true) Parameters Type Name Description IActivityMonitorImpl targetMonitor Monitor that will receive the logs. Boolean honorMonitorFilter False to ignore the actual filter ActualFilter value: logs coming from the bridge (ie. the remote Application Domain) will always be added to this target monitor. Properties | Improve this Doc View Source HonorMonitorFilter Gets or sets whether the ActualFilter of the target monitor should be honored or not. Defaults to true. Declaration public bool HonorMonitorFilter { get; set; } Property Value Type Description Boolean"
  },
  "api/CK.Core.ActivityMonitorBridge.html": {
    "href": "api/CK.Core.ActivityMonitorBridge.html",
    "title": "Class ActivityMonitorBridge | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorBridge A IActivityMonitorClient that relays what happens in a monitor to another monitor. In Net55, automatically supports logs crossing Application Domains. See ActivityMonitorBridgeTarget . Inheritance Object ActivityMonitorBridge Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorBridge : IActivityMonitorBoundClient, IActivityMonitorClient, IActivityMonitorBridgeCallback Constructors | Improve this Doc View Source ActivityMonitorBridge(ActivityMonitorBridgeTarget, Boolean, Boolean, Boolean) Initialize a new ActivityMonitorBridge bound to an existing ActivityMonitorBridgeTarget This Client should be registered in the Output of a local monitor. Declaration public ActivityMonitorBridge(ActivityMonitorBridgeTarget bridge, bool pullTargetTopicAndAutoTagsFromTarget, bool pushTopicAndAutoTagsToTarget, bool applyTargetFilterToUnfilteredLogs = false) Parameters Type Name Description ActivityMonitorBridgeTarget bridge The target bridge. Boolean pullTargetTopicAndAutoTagsFromTarget When true, the Topic and AutoTags are automaticaly updated whenever they change on the target monitor. Boolean pushTopicAndAutoTagsToTarget When true, any change to Topic or AutoTags are applied to the target monitor. Boolean applyTargetFilterToUnfilteredLogs True to avoid sending logs with level below the target MinimalFilter (when HonorMonitorFilter is true and it is an unfiltered line or group log). This is an optimization that can be used to send less data to the target monitor but breaks the UnfilteredLog/UnfilteredOpenGroup contract. Fields | Improve this Doc View Source TagBridgePrematureClose Tags group conclusions emitted because of premature (unbalanced) removing of a bridge from a source monitor. Declaration public static readonly CKTrait TagBridgePrematureClose Field Value Type Description CKTrait Properties | Improve this Doc View Source BridgeTarget Gets the target bridge of the TargetMonitor . Declaration public ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget | Improve this Doc View Source IActivityMonitorBoundClient.MinimalFilter Declaration LogFilter IActivityMonitorBoundClient.MinimalFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source PullTopicAndAutoTagsFromTarget Gets whether this bridge updates the Topic and AutoTags of its monitor whenever they change on the target monitor. Declaration public bool PullTopicAndAutoTagsFromTarget { get; } Property Value Type Description Boolean | Improve this Doc View Source TargetMonitor Gets the target monitor. Declaration public IActivityMonitor TargetMonitor { get; } Property Value Type Description IActivityMonitor Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) forceBuggyRemove is not used here since this client is not lockable. Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CKTrait newTags | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data"
  },
  "api/CK.Core.ActivityMonitor.html": {
    "href": "api/CK.Core.ActivityMonitor.html",
    "title": "Class ActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitor Concrete implementation of IActivityMonitor . Inheritance Object ActivityMonitor Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitor : IActivityMonitorImpl, IActivityMonitor, IUniqueId Constructors | Improve this Doc View Source ActivityMonitor() Initializes a new ActivityMonitor that applies all AutoConfiguration and has no Topic initially set. Declaration public ActivityMonitor() | Improve this Doc View Source ActivityMonitor(ActivityMonitorOutput, CKTrait, Boolean) Initializes a new ActivityMonitor with a specific Output or null to postpone the setting of Output by using SetOutput(ActivityMonitorOutput) . Declaration protected ActivityMonitor(ActivityMonitorOutput output, CKTrait tags = null, bool applyAutoConfigurations = true) Parameters Type Name Description ActivityMonitorOutput output The output to use. Can be null. CKTrait tags Initial tags. Boolean applyAutoConfigurations Whether AutoConfiguration should be applied. | Improve this Doc View Source ActivityMonitor(Boolean, String) Initializes a new ActivityMonitor that optionally applies AutoConfiguration and with an initial topic. Declaration public ActivityMonitor(bool applyAutoConfigurations, string topic = null) Parameters Type Name Description Boolean applyAutoConfigurations Whether AutoConfiguration should be applied. String topic Optional initial topic (can be null). | Improve this Doc View Source ActivityMonitor(String) Initializes a new ActivityMonitor that applies all AutoConfiguration and has an initial Topic set. Declaration public ActivityMonitor(string topic) Parameters Type Name Description String topic Initial topic (can be null). Fields | Improve this Doc View Source AutoConfiguration The automatic configuration actions. Registers actions via += (or if you like pain), unregister with -= operator (or System.Delegate.Remove(System.Delegate,System.Delegate) ). Simply sets it to null to clear all currently registered actions (this, of course, only from tests and not in real code). Declaration public static Action<IActivityMonitor> AutoConfiguration Field Value Type Description Action < IActivityMonitor > | Improve this Doc View Source CriticalErrorCollector The monitoring error collector. Any error that occurs while dispatching logs to IActivityMonitorClient are collected and the culprit is removed from Output . See CriticalErrorCollector . Declaration public static readonly CriticalErrorCollector CriticalErrorCollector Field Value Type Description CriticalErrorCollector | Improve this Doc View Source NoLogText The no-log text replaces any null or empty log text. Declaration public static readonly string NoLogText Field Value Type Description String | Improve this Doc View Source ParkLevel String to use to break the current LogLevel (as if a different LogLevel was used). Declaration public static readonly string ParkLevel Field Value Type Description String | Improve this Doc View Source SetTopicPrefix Prefix used by SetTopic(String, String, Int32) is \"Topic: \". Declaration public static readonly string SetTopicPrefix Field Value Type Description String Properties | Improve this Doc View Source ActualFilter Gets the actual filter level for logs: this combines the configured MinimalFilter and the minimal requirements of any IActivityMonitorBoundClient that specifies such a minimal filter level. Remarks This does NOT take into account the static (application-domain) DefaultFilter . This global default must be used if this ActualFilter is None for Line or Group : the ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) extension method takes it into account. Declaration public LogFilter ActualFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source AutoTags Gets or sets the tags of this monitor: any subsequent logs will be tagged by these tags. The CKTrait must be registered in ActivityMonitor.Tags . Modifications to this property are scoped to the current Group since when a Group is closed, this property (like MinimalFilter ) is automatically restored to its original value (captured when the Group was opened). Declaration public CKTrait AutoTags { get; set; } Property Value Type Description CKTrait | Improve this Doc View Source IActivityMonitorImpl.CurrentGroup Declaration IActivityLogGroup IActivityMonitorImpl.CurrentGroup { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source IUniqueId.UniqueId Declaration Guid IUniqueId.UniqueId { get; } Property Value Type Description Guid | Improve this Doc View Source CurrentGroup Gets the currently opened group. Null when no group is currently opened. Declaration protected IActivityLogGroup CurrentGroup { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source DefaultFilter Gets or sets the default filter that should be used when the ActualFilter is Undefined . This configuration is per application domain (the backing field is static). It defaults to Undefined : it has the same effect as setting it to Debug (i.e. sending everything) when no other configuration exists. Declaration public static LogFilter DefaultFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source LastLogTime Gets the last DateTimeStamp for this monitor. Declaration public DateTimeStamp LastLogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source MinimalFilter Gets or sets a filter based for the log level. Modifications to this property are scoped to the current Group since when a Group is closed, this property (like AutoTags ) is automatically restored to its original value (captured when the Group was opened). Declaration public LogFilter MinimalFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source Output Gets the IActivityMonitorOutput for this monitor. Declaration public IActivityMonitorOutput Output { get; } Property Value Type Description IActivityMonitorOutput | Improve this Doc View Source Topic Gets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. It must be set with SetTopic(String, String, Int32) and unlike MinimalFilter and AutoTags , the topic is not reseted when groups are closed. Declaration public string Topic { get; } Property Value Type Description String | Improve this Doc View Source UniqueId Gets the unique identifier for this monitor. It is a System.Guid.NewGuid by default but specialized implementations can set it via the protected SetUniqueId(Guid) if a unique identifier exists in the context that can more easily identify this activity. Declaration protected Guid UniqueId { get; } Property Value Type Description Guid Methods | Improve this Doc View Source IActivityMonitorImpl.InitializeTopicAndAutoTags(String, CKTrait, String, Int32) Called by IActivityMonitorBoundClient clients to initialize Topic and AutoTag from inside their SetMonitor or any other methods provided that a reentrant and concurrent lock has been obtained (otherwise an InvalidOperationException is thrown). Declaration void IActivityMonitorImpl.InitializeTopicAndAutoTags(string newTopic, CKTrait newTags, string fileName, int lineNumber) Parameters Type Name Description String newTopic CKTrait newTags String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter, LogFilter) Declaration void IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter oldLevel, LogFilter newLevel) Parameters Type Name Description LogFilter oldLevel LogFilter newLevel | Improve this Doc View Source IActivityMonitorImpl.ReentrancyAndConcurrencyLock() Declaration IDisposable IActivityMonitorImpl.ReentrancyAndConcurrencyLock() Returns Type Description IDisposable | Improve this Doc View Source IActivityMonitorImpl.SetClientMinimalFilterDirty() Declaration void IActivityMonitorImpl.SetClientMinimalFilterDirty() | Improve this Doc View Source CloseGroup(DateTimeStamp, Object) Closes the current ActivityMonitor.Group . Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a System.Collections.Generic.List`1 or an System.Collections.Generic.IEnumerable`1 of ActivityLogGroupConclusion, or any object with an overridden System.Object.ToString method. See remarks (especially for List ). Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. Declaration public virtual void CloseGroup(DateTimeStamp logTime, object userConclusion = null) Parameters Type Name Description DateTimeStamp logTime Times-tamp of the group closing. Object userConclusion Optional string, enumerable of ActivityLogGroupConclusion ) or object to conclude the group. See remarks. | Improve this Doc View Source ReentrancyAndConcurrencyLock() Gets a disposable object that checks for reentrant and concurrent calls. Declaration protected IDisposable ReentrancyAndConcurrencyLock() Returns Type Description IDisposable A disposable object (that must be disposed). | Improve this Doc View Source SetOutput(ActivityMonitorOutput) Sets the Output . Declaration protected void SetOutput(ActivityMonitorOutput output) Parameters Type Name Description ActivityMonitorOutput output Can not be null. | Improve this Doc View Source SetTopic(String, String, Int32) Sets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. Declaration public void SetTopic(string newTopic, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source SetUniqueId(Guid) Sets the unique identifier of this activity monitor. This must be used only during monitor construction or initialization, before the monitor is actually used. Declaration protected void SetUniqueId(Guid uniqueId) Parameters Type Name Description Guid uniqueId New unique identifier. | Improve this Doc View Source UnfilteredLog(ActivityMonitorLogData) Logs a text regardless of MinimalFilter level (except for Off ). Each call to log is considered as a unit of text: depending on the rendering engine, a line or a paragraph separator (or any appropriate separator) should be appended between each text if the level is the same as the previous one. See remarks. Remarks A null or empty Text is not logged. If needed, the special text ParkLevel (\"PARK-LEVEL\") breaks the current LogLevel and resets it: the next log, even with the same LogLevel, will be treated as if a different LogLevel is used. Declaration public void UnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Data that describes the log. Can not be null. | Improve this Doc View Source UnfilteredOpenGroup(ActivityMonitorGroupData) Opens a group regardless of ActualFilter level (except for Off ). CloseGroup(DateTimeStamp, Object) must be called in order to close the group, and/or the returned object must be disposed (both safely can be called: the group is closed on the first action, the second one is ignored). Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the MinimalFilter is automatically sets to Debug to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group has been filtered. Declaration public virtual IDisposableGroup UnfilteredOpenGroup(ActivityMonitorGroupData data) Parameters Type Name Description ActivityMonitorGroupData data Data that describes the log. Can not be null. Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group."
  },
  "api/CK.Core.ActivityMonitor.Tags.html": {
    "href": "api/CK.Core.ActivityMonitor.Tags.html",
    "title": "Class ActivityMonitor.Tags | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitor.Tags Thread-safe context for tags used to categorize log entries (and group conclusions). All tags used in monitoring must be Register(String) ed here. Inheritance Object ActivityMonitor.Tags Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class Tags Remarks Tags used for conclusions should start with \"c:\". Fields | Improve this Doc View Source Context The central, unique, context of all monitoring related tags used in the application domain. Declaration public static readonly CKTraitContext Context Field Value Type Description CKTraitContext | Improve this Doc View Source CreateDependentActivity Creation of dependent activities are marked with \"dep:CreateActivity\". Declaration public static readonly CKTrait CreateDependentActivity Field Value Type Description CKTrait | Improve this Doc View Source Empty Shortcut to EmptyTrait . Declaration public static readonly CKTrait Empty Field Value Type Description CKTrait | Improve this Doc View Source GetTextConclusion Conclusions returned by the optional function when a group is opened (see UnfilteredOpenGroup(ActivityMonitorGroupData) ) are marked with \"c:GetText\". Declaration public static readonly CKTrait GetTextConclusion Field Value Type Description CKTrait | Improve this Doc View Source MonitorTopicChanged Whenever Topic changed, a Info is emitted marked with \"MonitorTopicChanged\". Declaration public static readonly CKTrait MonitorTopicChanged Field Value Type Description CKTrait | Improve this Doc View Source StartDependentActivity Start of dependent activities are marked with \"dep:StartActivity\". Declaration public static readonly CKTrait StartDependentActivity Field Value Type Description CKTrait | Improve this Doc View Source UserConclusion Conclusions provided to IActivityMonitor.Close(string) are marked with \"c:User\". Declaration public static readonly CKTrait UserConclusion Field Value Type Description CKTrait Methods | Improve this Doc View Source Register(String) Simple shortcut to FindOrCreate(String) . Declaration public static CKTrait Register(string tags) Parameters Type Name Description String tags Atomic tag or multiple tags separated by pipes (|). Returns Type Description CKTrait Registered tags."
  },
  "api/CK.Core.ActivityMonitor.SourceFilter.html": {
    "href": "api/CK.Core.ActivityMonitor.SourceFilter.html",
    "title": "Class ActivityMonitor.SourceFilter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitor.SourceFilter Manages source filtering. Inheritance Object ActivityMonitor.SourceFilter Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class SourceFilter Fields | Improve this Doc View Source FilterSource Holds a ActivityMonitor.SourceFilter.FilterSourceDelegate that can override filter configuration and/or alter source file name. It can be changed at any time and application is immediate. It is set by default to DefaultFilter(ref String, ref Int32) . Declaration public static ActivityMonitor.SourceFilter.FilterSourceDelegate FilterSource Field Value Type Description ActivityMonitor.SourceFilter.FilterSourceDelegate Methods | Improve this Doc View Source ClearAll() Clears all existing filters. Declaration public static void ClearAll() | Improve this Doc View Source ClearMinimals() Clears all existing Minimal filters. Declaration public static void ClearMinimals() | Improve this Doc View Source ClearOverrides() Clears all existing Override filters. Declaration public static void ClearOverrides() | Improve this Doc View Source DefaultFilter(ref String, ref Int32) Default filter, challenging file names added by SetFilter(SourceLogFilter, String) method. Declaration public static SourceLogFilter DefaultFilter(ref string fileName, ref int lineNumber) Parameters Type Name Description String fileName The file name. Int32 lineNumber The line number. Returns Type Description SourceLogFilter Defaults to Undefined . | Improve this Doc View Source SetFilter(SourceLogFilter, String) Sets a SourceLogFilter for a given file. Use Undefined to clear any existing configuration for the file. Declaration public static void SetFilter(SourceLogFilter filter, [CallerFilePath] string fileName = null) Parameters Type Name Description SourceLogFilter filter The filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source SetMinimalFilter(LogFilter, String) Sets a minimal LogFilter for a given file. Use Undefined to clear it. Declaration public static void SetMinimalFilter(LogFilter minimalFilter, [CallerFilePath] string fileName = null) Parameters Type Name Description LogFilter minimalFilter The minimal filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source SetOverrideFilter(LogFilter, String) Sets an override LogFilter for a given file: when not Undefined this takes precedence over ActualFilter . Use Undefined to clear it. Declaration public static void SetOverrideFilter(LogFilter overrideFilter, [CallerFilePath] string fileName = null) Parameters Type Name Description LogFilter overrideFilter The override filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source Update(Func<String, SourceLogFilter, SourceLogFilter>) Updates (or simply scans) all existing filters. Remarks When the mapper returns Undefined , the file configuration is removed. Declaration public static void Update(Func<string, SourceLogFilter, SourceLogFilter> mapper) Parameters Type Name Description Func < String , SourceLogFilter , SourceLogFilter > mapper Function that takes the file name, the existing filter and maps it to a new filter."
  },
  "api/CK.Core.ActivityMonitor.SourceFilter.FilterSourceDelegate.html": {
    "href": "api/CK.Core.ActivityMonitor.SourceFilter.FilterSourceDelegate.html",
    "title": "Delegate ActivityMonitor.SourceFilter.FilterSourceDelegate | CK.Core documentation",
    "keywords": "Improve this Doc View Source Delegate ActivityMonitor.SourceFilter.FilterSourceDelegate Delegate type that can be assigned to FilterSource static property to enable filter override based on the caller source location. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public delegate SourceLogFilter FilterSourceDelegate(ref string fileName, ref int lineNumber); Parameters Type Name Description String fileName FileName of the source file (that can be changed, typically by removing a common path prefix). Int32 lineNumber The line number in the source file. Returns Type Description SourceLogFilter The SourceLogFilter to apply. Must default to Undefined ."
  },
  "api/CK.Core.ActivityMonitor.Group.html": {
    "href": "api/CK.Core.ActivityMonitor.Group.html",
    "title": "Class ActivityMonitor.Group | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitor.Group Groups are bound to an ActivityMonitor and are linked together from the current one to the very first one (a kind of stack). Inheritance Object ActivityMonitor.Group Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax protected sealed class Group : IActivityLogGroup, IDisposableGroup, IDisposable Fields | Improve this Doc View Source Index The raw index of the group. Declaration public readonly int Index Field Value Type Description Int32 | Improve this Doc View Source Monitor The monitor that owns this group. Declaration public readonly ActivityMonitor Monitor Field Value Type Description ActivityMonitor Properties | Improve this Doc View Source CloseLogTime Gets the log time of the group closing. It is MinValue when the group is not closed yet. Declaration public DateTimeStamp CloseLogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source Depth Gets the depth of this group in its origin monitor (1 for top level groups). Declaration public int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source Exception Gets the associated Exception if it exists. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source ExceptionData Gets the CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration public CKExceptionData ExceptionData { get; } Property Value Type Description CKExceptionData | Improve this Doc View Source FileName Gets the file name of the source code that issued the log. Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source GroupLevel Gets the level associated to this group. The IsFiltered can be set here: use MaskedGroupLevel to get the actual level from Trace to Fatal . Declaration public LogLevel GroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source GroupTags Gets the tags for the log group. Declaration public CKTrait GroupTags { get; } Property Value Type Description CKTrait | Improve this Doc View Source GroupText Gets the text with which this group has been opened. Null if and only if the group is closed. Declaration public string GroupText { get; } Property Value Type Description String | Improve this Doc View Source IsGroupTextTheExceptionMessage Gets whether the GroupText is actually the Exception message. Declaration public bool IsGroupTextTheExceptionMessage { get; } Property Value Type Description Boolean | Improve this Doc View Source LineNumber Gets the line number of the FileName that issued the log. Declaration public int LineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source LogTime Gets the log time for the log. Declaration public DateTimeStamp LogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source MaskedGroupLevel Gets the actual level (from Trace to Fatal ) associated to this group without IsFiltered bit. Declaration public LogLevel MaskedGroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Parent Get the previous group in its origin monitor. Null if this group is a top level group. Declaration public IActivityLogGroup Parent { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source PreviousTopic Gets the previous topic it it must be restored. Null otherwise. Declaration public string PreviousTopic { get; } Property Value Type Description String | Improve this Doc View Source SavedMonitorFilter Gets or sets the MinimalFilter that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Filter when the group has been opened. Declaration public LogFilter SavedMonitorFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source SavedMonitorTags Gets or sets the AutoTags that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Tags when the group has been opened. Declaration public CKTrait SavedMonitorTags { get; } Property Value Type Description CKTrait Methods | Improve this Doc View Source IDisposableGroup.ConcludeWith(Func<String>) Declaration IDisposable IDisposableGroup.ConcludeWith(Func<string> getConclusionText) Parameters Type Name Description Func < String > getConclusionText Returns Type Description IDisposable | Improve this Doc View Source IDisposableGroup.SetTopic(String) Declaration IDisposableGroup IDisposableGroup.SetTopic(string topicOtherThanGroupText) Parameters Type Name Description String topicOtherThanGroupText Returns Type Description IDisposableGroup | Improve this Doc View Source EnsureExceptionData() Gets or creates the CKExceptionData that captures exception information. If Exception is null, this returns null. Declaration public CKExceptionData EnsureExceptionData() Returns Type Description CKExceptionData | Improve this Doc View Source IDisposable.Dispose() Ensures that any groups opened after this one are closed before closing this one. Declaration void IDisposable.Dispose()"
  },
  "api/CK.Core.ActivityMonitor.DependentToken.html": {
    "href": "api/CK.Core.ActivityMonitor.DependentToken.html",
    "title": "Class ActivityMonitor.DependentToken | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitor.DependentToken Describes the origin of a dependent activity: it is created by DependentActivity(IActivityMonitor, String, Int32) (extension methods). Inheritance Object ActivityMonitor.DependentToken Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax [Serializable] public class DependentToken Properties | Improve this Doc View Source CreationDate Gets the creation date. This is the log time of the unfiltered Info log that has been emitted in the originator monitor. Declaration public DateTimeStamp CreationDate { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source OriginatorId Unique identifier of the activity that created this dependent token. Declaration public Guid OriginatorId { get; } Property Value Type Description Guid | Improve this Doc View Source Topic Gets the topic that must be set on the dependent activity. When null, the current Topic of the dependent monitor is not changed. Declaration public string Topic { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateDependentMonitor(Action<IActivityMonitor>, String, Int32) Creates a monitor and executes StartDependentActivity(ActivityMonitor.DependentToken) on it that opens a root info group with the token information. Declaration public IDisposableActivityMonitor CreateDependentMonitor(Action<IActivityMonitor> configurator = null, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description Action < IActivityMonitor > configurator Optionally applies any configuration on the created monitor before opening the root activity group. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description IDisposableActivityMonitor An activity monitor that must be disposed when the activity ends (to close any opened groups). | Improve this Doc View Source ToString() Overridden to give a readable description (without Topic: this is the same as what appears in the start message info). It can be parsed with TryParseStartMessage(String, out Guid, out DateTimeStamp) . Declaration public override string ToString() Returns Type Description String A readable string (the start message). | Improve this Doc View Source TryParseLaunchOrCreateMessage(String, out Boolean, out Boolean, out String) Tries to parse a launch message. Declaration public static bool TryParseLaunchOrCreateMessage(string message, out bool launched, out bool withTopic, out string dependentTopic) Parameters Type Name Description String message The message to parse. Boolean launched True if the activity has been launched or the token has only be created. Boolean withTopic True if an explicit topic has been associated to the dependent activity. String dependentTopic When withTopic is true, this contains the explicitly set topic. Returns Type Description Boolean True on success. | Improve this Doc View Source TryParseStartMessage(String, out Guid, out DateTimeStamp) Attempts to parse the start message of a dependent activity (tagged with StartDependentActivity ). Declaration public static bool TryParseStartMessage(string startMessage, out Guid id, out DateTimeStamp time) Parameters Type Name Description String startMessage The start message to parse. Guid id The originator monitor identifier. DateTimeStamp time The creation time of the dependent activity. Returns Type Description Boolean True on success."
  },
  "api/CK.Core.ActivityLogGroupConclusion.html": {
    "href": "api/CK.Core.ActivityLogGroupConclusion.html",
    "title": "Struct ActivityLogGroupConclusion | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct ActivityLogGroupConclusion Describes the conclusion of a group. Conclusions are simply Text Tag ged with a CKTrait . Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public struct ActivityLogGroupConclusion Constructors | Improve this Doc View Source ActivityLogGroupConclusion(String, CKTrait) Initializes a new conclusion for a group. Declaration public ActivityLogGroupConclusion(string conclusion, CKTrait tag = null) Parameters Type Name Description String conclusion Must not be null (may be empty). CKTrait tag Must be null or be registered in ActivityMonitor.Tags . Fields | Improve this Doc View Source Tag The tag (never null). It may be combined but is often atomic like UserConclusion , or GetTextConclusion . Declaration public readonly CKTrait Tag Field Value Type Description CKTrait | Improve this Doc View Source Text The conclusion (never null). Declaration public readonly string Text Field Value Type Description String Methods | Improve this Doc View Source Equals(Object) Explicit test for Text and Tag equality. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to test. Returns Type Description Boolean True when equal. | Improve this Doc View Source GetHashCode() Computes the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code. | Improve this Doc View Source ToString() Overriden to return Text . Declaration public override string ToString() Returns Type Description String Text field. Operators | Improve this Doc View Source Equality(ActivityLogGroupConclusion, ActivityLogGroupConclusion) Equality operator definition. Declaration public static bool operator ==(ActivityLogGroupConclusion x, ActivityLogGroupConclusion y) Parameters Type Name Description ActivityLogGroupConclusion x First value type. ActivityLogGroupConclusion y Second value type. Returns Type Description Boolean True if and only if Tag and Text are equals. | Improve this Doc View Source Inequality(ActivityLogGroupConclusion, ActivityLogGroupConclusion) Inequality operator definition. Declaration public static bool operator !=(ActivityLogGroupConclusion x, ActivityLogGroupConclusion y) Parameters Type Name Description ActivityLogGroupConclusion x First value type. ActivityLogGroupConclusion y Second value type. Returns Type Description Boolean True if Tag or Text differ."
  },
  "articles/toc.html": {
    "href": "articles/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "toc.html": {
    "href": "toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "api/toc.html": {
    "href": "api/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "CK-Core components | CK.Core documentation",
    "keywords": "Improve this Doc CK-Core components This documentation is in pre-release and is subject to change. This repository is home to common tools, used in most of our software, split in multiple components and packages on NuGet : CK.Core ( NuGet package ), a common core of utilities used in the other components (such as CKTrait , CKException or TemporaryFile ) CK.ActivityMonitor ( NuGet package ), containing the ActivityMonitor logging component logic (formerly part of CK.Core ) CK.ActivityMonitor.StandardSender ( NuGet package ), standard extensions like IActivityMonitor.Trace().Send() used for easier logging at development time (formerly part of CK.Core ) CK.Text ( NuGet package ), home to text-related utilities like StringMatcher , end-of-line normalizers and string.Concatenate() (formerly part of CK.Core ) CK.Monitoring ( NuGet package ), with ActivityMonitor -related utilities for writing and reading text and/or binary log sinks with the GrandOutput CK.Reflection ( NuGet package ), containing various reflection-related utilities"
  },
  "articles/ck-text.html": {
    "href": "articles/ck-text.html",
    "title": "CK.Text | CK.Core documentation",
    "keywords": "Improve this Doc CK.Text This documentation is not written yet. Help us by submitting your own!"
  },
  "articles/ck-reflection.html": {
    "href": "articles/ck-reflection.html",
    "title": "CK.Reflection | CK.Core documentation",
    "keywords": "Improve this Doc CK.Reflection This documentation is not written yet. Help us by submitting your own!"
  },
  "articles/ck-monitoring.html": {
    "href": "articles/ck-monitoring.html",
    "title": "CK.Monitoring | CK.Core documentation",
    "keywords": "Improve this Doc CK.Monitoring This documentation is not written yet. Help us by submitting your own!"
  },
  "articles/ck-core.html": {
    "href": "articles/ck-core.html",
    "title": "CK.Core | CK.Core documentation",
    "keywords": "Improve this Doc CK.Core This documentation is not written yet. Help us by submitting your own!"
  },
  "articles/ck-activitymonitor.html": {
    "href": "articles/ck-activitymonitor.html",
    "title": "CK.ActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc CK.ActivityMonitor This documentation is not written yet. Help us by submitting your own!"
  },
  "articles/ck-activitymonitor-standardsender.html": {
    "href": "articles/ck-activitymonitor-standardsender.html",
    "title": "CK.ActivityMonitor.StandardSender | CK.Core documentation",
    "keywords": "Improve this Doc CK.ActivityMonitor.StandardSender This documentation is not written yet. Help us by submitting your own!"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "CK.Core API documentation | CK.Core documentation",
    "keywords": "Improve this Doc CK.Core API documentation This documentation is in pre-release and is subject to change."
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.H.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.H.html",
    "title": "Class AutoImplementorTests.H | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.H Inheritance Object AutoImplementorTests.H Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class H Methods | Improve this Doc View Source M(ref Guid) Declaration public abstract byte M(ref Guid i) Parameters Type Name Description Guid i Returns Type Description Byte"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.G.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.G.html",
    "title": "Class AutoImplementorTests.G | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.G Inheritance Object AutoImplementorTests.G Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class G Methods | Improve this Doc View Source M(out Guid) Declaration public abstract byte M(out Guid i) Parameters Type Name Description Guid i Returns Type Description Byte"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.F.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.F.html",
    "title": "Class AutoImplementorTests.F | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.F Inheritance Object AutoImplementorTests.F Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class F Methods | Improve this Doc View Source M(out Int32) Declaration public abstract byte M(out int i) Parameters Type Name Description Int32 i Returns Type Description Byte"
  },
  "api/CK.Core.IMergeable.html": {
    "href": "api/CK.Core.IMergeable.html",
    "title": "Interface IMergeable | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IMergeable Simple interface to support merging of information from external objects. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface IMergeable Methods | Improve this Doc View Source Merge(Object, IServiceProvider) Attempts to merge this object with the given one. This method should not raise any exception. Instead, false should be returned. If an exception is raised, callers should handle the exception and behaves as if the method returned false. Declaration bool Merge(object source, IServiceProvider services = null) Parameters Type Name Description Object source Source object to merge into this one. IServiceProvider services Optional services (can be null) that can be injected into the merge process. Returns Type Description Boolean True if the merge succeeded, false if the merge failed or is not possible."
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.BaseThree.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.BaseThree.html",
    "title": "Class AutoImplementorTests.BaseThree | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.BaseThree Inheritance Object AutoImplementorTests.BaseThree Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class BaseThree Constructors | Improve this Doc View Source BaseThree(String, String, String) Declaration [AutoImplementorTests.CustAttr(\"OnCtorByParam\")] [AutoImplementorTests.CustAttr(Name = \"OnCtorByProperty\")] [AutoImplementorTests.CustAttr(FieldName = \"OnCtorByField\")] public BaseThree([AutoImplementorTests.CustAttr(\"OnParamByParam\")] string s0, [AutoImplementorTests.CustAttr(Name = \"OnParamByProperty\")] string s1, [AutoImplementorTests.CustAttr(FieldName = \"OnParamByField\")] string s2) Parameters Type Name Description String s0 String s1 String s2 Fields | Improve this Doc View Source CtorMessage Declaration public readonly string CtorMessage Field Value Type Description String"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.BaseOne.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.BaseOne.html",
    "title": "Class AutoImplementorTests.BaseOne | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.BaseOne Inheritance Object AutoImplementorTests.BaseOne Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class BaseOne Constructors | Improve this Doc View Source BaseOne(Int32) Declaration protected BaseOne(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source BaseOne(String) Declaration public BaseOne(string s) Parameters Type Name Description String s Fields | Improve this Doc View Source CtorMessage Declaration public readonly string CtorMessage Field Value Type Description String"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.B.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.B.html",
    "title": "Class AutoImplementorTests.B | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.B Inheritance Object AutoImplementorTests.B Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class B Methods | Improve this Doc View Source M(Int32) Declaration public abstract int M(int i) Parameters Type Name Description Int32 i Returns Type Description Int32"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.A.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.A.html",
    "title": "Class AutoImplementorTests.A | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.A Inheritance Object AutoImplementorTests.A Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class A Methods | Improve this Doc View Source CallFirstMethod(Int32) Declaration public AutoImplementorTests.A CallFirstMethod(int i) Parameters Type Name Description Int32 i Returns Type Description AutoImplementorTests.A | Improve this Doc View Source FirstMethod(Int32) Declaration protected abstract AutoImplementorTests.A FirstMethod(int i) Parameters Type Name Description Int32 i Returns Type Description AutoImplementorTests.A"
  },
  "api/CK.Reflection.Tests.A.html": {
    "href": "api/CK.Reflection.Tests.A.html",
    "title": "Class A | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class A Inheritance Object A Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class A"
  },
  "api/CK.Reflection.ReflectionHelper.html": {
    "href": "api/CK.Reflection.ReflectionHelper.html",
    "title": "Class ReflectionHelper | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ReflectionHelper Reflection related helpers methods that can not (really) be defined as extension methods. Inheritance Object ReflectionHelper Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public class ReflectionHelper Methods | Improve this Doc View Source CovariantMatch(Type, Type) Checks whether a type is \"above\" (or \"more general than\") another one. This check uses System.Type.IsAssignableFrom(System.Type) when the main type is not generic. For generics (be it an interface or a class), inheritance relations are used recursively on generic parameters: the \"is assignable from\" semantics is lost in favor of a more relaxed relation, for instance IEnumerable[ICollection[ValueType]] \"Covariant matches\" with IEnumerable[IList[int]] . Declaration public static bool CovariantMatch(Type mainType, Type toMatch) Parameters Type Name Description Type mainType The \"main type\" (the one that must be \"more general than\" toMatch ). Type toMatch The type to match. Returns Type Description Boolean True if mainType is \"above\" toMatch . | Improve this Doc View Source CreateParametersType(ParameterInfo[]) Creates an array of type of a method parameters. Remarks Implementation is faster (and more simple?) than using a linq select... Declaration public static Type[] CreateParametersType(ParameterInfo[] parametersInfo) Parameters Type Name Description ParameterInfo [] parametersInfo Parameters from which type must be extracted. Returns Type Description Type [] Parameters' types. | Improve this Doc View Source CreateParametersType(ParameterInfo[], Int32) Creates an array of type of a method parameters. Declaration public static Type[] CreateParametersType(ParameterInfo[] parametersInfo, int startIndex) Parameters Type Name Description ParameterInfo [] parametersInfo Parameters from which type must be extracted. Int32 startIndex The zero-based starting parameter position. Returns Type Description Type [] Parameters' types. | Improve this Doc View Source CreateParametersType(ParameterInfo[], Type) Creates an array of type of a method parameters. Remarks Implementation is faster (and more simple?) than using a linq select... Declaration public static Type[] CreateParametersType(ParameterInfo[] parametersInfo, Type typeToPrepend) Parameters Type Name Description ParameterInfo [] parametersInfo The parameter info. Type typeToPrepend Extra type that must be injected as the fist type in the resulting array (typically the System.Reflection.MemberInfo.DeclaringType - the 'this' parameter). Returns Type Description Type [] Parameters' types. | Improve this Doc View Source GenerateCustomAttributeBuilder(IEnumerable<CustomAttributeData>, Action<CustomAttributeBuilder>, Func<CustomAttributeData, Boolean>) Generates System.Reflection.Emit.CustomAttributeBuilder from an enumerable of System.Reflection.CustomAttributeData . Declaration public static void GenerateCustomAttributeBuilder(IEnumerable<CustomAttributeData> customAttributes, Action<CustomAttributeBuilder> collector, Func<CustomAttributeData, bool> filter = null) Parameters Type Name Description IEnumerable < CustomAttributeData > customAttributes Existing custom attribute data (can be obtained through System.Reflection.MemberInfo.GetCustomAttributesData ). Action < CustomAttributeBuilder > collector Action that receives builders that reproduce the original custom attributes. Func < CustomAttributeData , Boolean > filter Optional filter for attributes. When null, all attributes are collected. | Improve this Doc View Source GetFlattenEvents(Type) Gets all events (including inherited events) of the given interface type. Declaration public static IEnumerable<EventInfo> GetFlattenEvents(Type interfaceType) Parameters Type Name Description Type interfaceType Type to process, must be an interface. Returns Type Description IEnumerable < EventInfo > An System.Collections.Generic.IEnumerable`1 of System.Reflection.EventInfo . | Improve this Doc View Source GetFlattenMembers<T>(Type, Func<Type, IEnumerable<T>>) Gets an System.Collections.Generic.IEnumerable`1 that contains elements returned by the getFunction . Declaration public static IEnumerable<T> GetFlattenMembers<T>(Type interfaceType, Func<Type, IEnumerable<T>> getFunction) Parameters Type Name Description Type interfaceType Type to process, it must be an interface. Func < Type , IEnumerable <T>> getFunction Function that takes a type and return an System.Collections.Generic.IEnumerable`1 , a possible implementation can be the lambda t => t.GetMethods() . Returns Type Description IEnumerable <T> An System.Collections.Generic.IEnumerable`1 that contains elements returned by the getFunction . Type Parameters Name Description T Type of the element that you're looking for. System.Reflection.MethodInfo for example. | Improve this Doc View Source GetFlattenMethods(Type) Gets all methods (including inherited methods and methods with special names like get_XXX and others add_XXX) of the given interface type. Declaration public static IEnumerable<MethodInfo> GetFlattenMethods(Type interfaceType) Parameters Type Name Description Type interfaceType Type to process, must be an interface. Returns Type Description IEnumerable < MethodInfo > An System.Collections.Generic.IEnumerable`1 of System.Reflection.MethodInfo . | Improve this Doc View Source GetFlattenProperties(Type) Gets all properties (including inherited properties) of the given interface type ( System.Type.GetProperties does not flatten the properties). Declaration public static IEnumerable<PropertyInfo> GetFlattenProperties(Type interfaceType) Parameters Type Name Description Type interfaceType Type to process, must be an interface. Returns Type Description IEnumerable < PropertyInfo > An System.Collections.Generic.IEnumerable`1 of System.Reflection.PropertyInfo . | Improve this Doc View Source GetPropertyInfo<THolder>(Expression<Func<THolder, Object>>) Retrieves a System.Reflection.PropertyInfo from a lambda function without requiring an instance of the holder object and without any constraint for the type of the property. Declaration public static PropertyInfo GetPropertyInfo<THolder>(Expression<Func<THolder, object>> propertyLambda) Parameters Type Name Description Expression < Func <THolder, Object >> propertyLambda A lambda function that selects the property as an object. Returns Type Description PropertyInfo Corresponding property information. Type Parameters Name Description THolder Property holder type. | Improve this Doc View Source GetPropertyInfo<TProperty>(Expression<Func<TProperty>>) Retrieves a System.Reflection.PropertyInfo from a parameterless lambda function: a closure is actually required and the compiler generates one automatically. Declaration public static PropertyInfo GetPropertyInfo<TProperty>(Expression<Func<TProperty>> propertyLambda) Parameters Type Name Description Expression < Func <TProperty>> propertyLambda A lambda function that selects a property (from the current syntactic context). Returns Type Description PropertyInfo Corresponding property information. Type Parameters Name Description TProperty Property type. | Improve this Doc View Source GetPropertyInfo<THolder, TProperty>(THolder, Expression<Func<THolder, TProperty>>) Retrieves a System.Reflection.PropertyInfo from a lambda function based on an instance of the holder. Declaration public static PropertyInfo GetPropertyInfo<THolder, TProperty>(THolder source, Expression<Func<THolder, TProperty>> propertyLambda) Parameters Type Name Description THolder source An instance of the THolder . Expression < Func <THolder, TProperty>> propertyLambda A lambda function that selects the property. Returns Type Description PropertyInfo Corresponding property information. Type Parameters Name Description THolder Property holder type (will be inferred by the compiler). TProperty Property type (will be inferred by the compiler). | Improve this Doc View Source GetPropertyInfo<THolder, TProperty>(Expression<Func<THolder, TProperty>>) Retrieves a System.Reflection.PropertyInfo from a lambda function. Declaration public static PropertyInfo GetPropertyInfo<THolder, TProperty>(Expression<Func<THolder, TProperty>> propertyLambda) Parameters Type Name Description Expression < Func <THolder, TProperty>> propertyLambda A lambda function that selects the property. Returns Type Description PropertyInfo Corresponding property information. Type Parameters Name Description THolder Property holder type. TProperty Property type."
  },
  "api/CK.Reflection.MemberInfoEqualityComparer.html": {
    "href": "api/CK.Reflection.MemberInfoEqualityComparer.html",
    "title": "Class MemberInfoEqualityComparer | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MemberInfoEqualityComparer Provides actual comparison of System.Reflection.MemberInfo without considering the System.Reflection.MemberInfo.ReflectedType . Inheritance Object MemberInfoEqualityComparer Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public sealed class MemberInfoEqualityComparer : IEqualityComparer<MemberInfo> Remarks This code comes from re-motion Core Framework (LGPL). It has been slightly modified, but the credits is for them. Copyright (c) rubicon IT GmbH, www.rubicon.eu Fields | Improve this Doc View Source Default Gets the comparer instance that should be always used. Declaration public static readonly MemberInfoEqualityComparer Default Field Value Type Description MemberInfoEqualityComparer Methods | Improve this Doc View Source Equals(MemberInfo, MemberInfo) Checks two System.Reflection.MemberInfo instances for logical equality, without considering the System.Reflection.MemberInfo.ReflectedType . Declaration public bool Equals(MemberInfo x, MemberInfo y) Parameters Type Name Description MemberInfo x First System.Reflection.MemberInfo to compare. MemberInfo y Second System.Reflection.MemberInfo to compare. Returns Type Description Boolean True if the two System.Reflection.MemberInfo objects are logically equivalent, ie., if they represent the same System.Reflection.MemberInfo . This is very similar to the System.Object.Equals(System.Object) implementation of System.Reflection.MemberInfo objects, but it ignores the System.Reflection.MemberInfo.ReflectedType property. In effect, two members compare equal if they are declared by the same type and denote the same member on that type. For generic System.Reflection.MethodInfo objects, the generic arguments must be the same. The idea for this method, but not the code, was taken from http://blogs.msdn.com/b/kingces/archive/2005/08/17/452774.aspx . | Improve this Doc View Source GetHashCode(MemberInfo) Returns the hash code for the given System.Reflection.MemberInfo . To calculate the hash code, the hash codes of the declaring type, metadata token and module of the System.Reflection.MemberInfo are combined. If the declaring type is an array, the name of the System.Reflection.MemberInfo is used instead of the metadata token. Declaration public int GetHashCode(MemberInfo m) Parameters Type Name Description MemberInfo m The System.Reflection.MemberInfo for which the hash code should be calculated. Returns Type Description Int32 The calculated hash code of the System.Reflection.MemberInfo ."
  },
  "api/CK.Reflection.ILGeneratorExtension.html": {
    "href": "api/CK.Reflection.ILGeneratorExtension.html",
    "title": "Class ILGeneratorExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ILGeneratorExtension Provides extension methods on System.Reflection.Emit.ILGenerator class. Inheritance Object ILGeneratorExtension Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public class ILGeneratorExtension Methods | Improve this Doc View Source CreateObjectArrayFromInstanceParameters(ILGenerator, LocalBuilder, Type[]) Emits the IL to create a new array ( System.Reflection.Emit.OpCodes.Newarr ) of objects and fills it with the actual arguments of the method (parameters are boxed if needed) skipping the very first one: this must be used only inside a method with System.Reflection.CallingConventions.HasThis set. Declaration public static void CreateObjectArrayFromInstanceParameters(ILGenerator g, LocalBuilder array, Type[] parameters) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. LocalBuilder array The local variable. Type [] parameters Type of the method parameters. | Improve this Doc View Source LdArg(ILGenerator, Int32) Emits the IL to push ( System.Reflection.Emit.OpCodes.Ldarg ) the actual argument at the given index onto the stack. Declaration public static void LdArg(ILGenerator g, int i) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. Int32 i Parameter index (0 being the 'this' for instance method). | Improve this Doc View Source LdArgBox(ILGenerator, Int32, Type) Emits a LdArg(ILGenerator, Int32) with a System.Reflection.Emit.OpCodes.Box if parameterType is a value type or a generic parameter (after a System.Reflection.Emit.OpCodes.Ldobj if the parameter is by ref). Declaration public static void LdArgBox(ILGenerator g, int idxParameter, Type parameterType) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. Int32 idxParameter Index of the parameter to load on the stack. Type parameterType Type of the parameter. | Improve this Doc View Source LdArgBox(ILGenerator, ParameterInfo) Emits a LdArg(ILGenerator, Int32) with an optional System.Reflection.Emit.OpCodes.Box if p 's type is a value type or a generic parameter (after a System.Reflection.Emit.OpCodes.Ldobj if the parameter is by ref). Handles static or instance methods (takes care of System.Reflection.CallingConventions.HasThis bit of the method's CallingConvention). Declaration public static void LdArgBox(ILGenerator g, ParameterInfo p) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. ParameterInfo p Parameter of the current method. | Improve this Doc View Source LdInt32(ILGenerator, Int32) Emits the IL to push the integer (emits the best opcode depending on the value: System.Reflection.Emit.OpCodes.Ldc_I4_0 or System.Reflection.Emit.OpCodes.Ldc_I4_M1 for instance) value onto the stack. Declaration public static void LdInt32(ILGenerator g, int i) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. Int32 i The integer value to push. | Improve this Doc View Source LdLoc(ILGenerator, LocalBuilder) Emits the IL to push ( System.Reflection.Emit.OpCodes.Ldloc ) the given local on top of the stack. Declaration public static void LdLoc(ILGenerator g, LocalBuilder local) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. LocalBuilder local The local variable to push. | Improve this Doc View Source RepushActualParameters(ILGenerator, Boolean, Int32) Emits the optimal IL to push the actual parameter values on the stack ( System.Reflection.Emit.OpCodes.Ldarg_0 ... System.Reflection.Emit.OpCodes.Ldarg ). Declaration public static void RepushActualParameters(ILGenerator g, bool startAtArgument0, int count) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. Boolean startAtArgument0 False to skip the very first argument: for a method instance Arg0 is the 'this' object (see System.Reflection.CallingConventions ) HasThis and ExplicitThis). Int32 count Number of parameters to push. | Improve this Doc View Source StArg(ILGenerator, Int32) Emits the IL to pop ( System.Reflection.Emit.OpCodes.Starg ) the top of the stack into the actual argument at the given index. Declaration public static void StArg(ILGenerator g, int i) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. Int32 i Parameter index (0 being the 'this' for instance method). | Improve this Doc View Source StLoc(ILGenerator, LocalBuilder) Emits the IL to pop ( System.Reflection.Emit.OpCodes.Stloc ) the top of the stack into a local variable. Declaration public static void StLoc(ILGenerator g, LocalBuilder local) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. LocalBuilder local The local variable to pop. | Improve this Doc View Source StoreDefaultValueForOutParameter(ILGenerator, ParameterInfo) Emits code that sets the parameter (that must be a 'ref' or 'out' parameter) to the default of its type. Handles static or instance methods and value or reference type. Declaration public static void StoreDefaultValueForOutParameter(ILGenerator g, ParameterInfo byRefParameter) Parameters Type Name Description ILGenerator g This System.Reflection.Emit.ILGenerator object. ParameterInfo byRefParameter The 'by ref' parameter."
  },
  "api/CK.Reflection.EmitHelper.html": {
    "href": "api/CK.Reflection.EmitHelper.html",
    "title": "Class EmitHelper | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EmitHelper Collection of helpers to emit dynamic code. Inheritance Object EmitHelper Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public class EmitHelper Methods | Improve this Doc View Source ImplementEmptyStubMethod(TypeBuilder, MethodInfo, Boolean) Implements a method as a no operation method. Method can be virtual, abstract or not. Declaration public static MethodBuilder ImplementEmptyStubMethod(TypeBuilder tB, MethodInfo method, bool isVirtual = false) Parameters Type Name Description TypeBuilder tB The System.Reflection.Emit.TypeBuilder for the new type. MethodInfo method The method to implement. Boolean isVirtual Defaults to false: the method is sealed. True to keep the method virtual. Returns Type Description MethodBuilder The System.Reflection.Emit.MethodBuilder to enable, for instance, creation of custom attributes on the method. | Improve this Doc View Source ImplementStubProperty(TypeBuilder, PropertyInfo, Boolean) Implement a property with getter/setter that relies on a private backup field. This is useful only to provide a temporary implementation of abstract properties that would be generated in a second time (this does not provide more than auto implemented properties available in C# 3.0 and later. Declaration public static PropertyBuilder ImplementStubProperty(TypeBuilder tB, PropertyInfo property, bool isVirtual = false) Parameters Type Name Description TypeBuilder tB The System.Reflection.Emit.TypeBuilder for the new type. PropertyInfo property The property to implement. Boolean isVirtual Defaults to false: the method is sealed. True to keep the method virtual. Returns Type Description PropertyBuilder The System.Reflection.Emit.PropertyBuilder to enable, for instance, creation of custom attributes on the property."
  },
  "api/CK.Reflection.DelegateHelper.html": {
    "href": "api/CK.Reflection.DelegateHelper.html",
    "title": "Class DelegateHelper | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DelegateHelper Utility methods for common reflection tasks. Adapted from http://kennethxublogsource.googlecode.com/svn/trunk/CommonReflection/src/Common.Reflection/Reflections.cs by Kenneth Xu. Inheritance Object DelegateHelper Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public class DelegateHelper Methods | Improve this Doc View Source CreateSetter<THolder, TProperty>(THolder, Expression<Func<THolder, TProperty>>, DelegateHelper.CreateInvalidSetterOption) Creates a setter for a property. Declaration public static Action<THolder, TProperty> CreateSetter<THolder, TProperty>(THolder source, Expression<Func<THolder, TProperty>> propertyLambda, DelegateHelper.CreateInvalidSetterOption o = DelegateHelper.CreateInvalidSetterOption.ThrowException) Parameters Type Name Description THolder source An instance of the THolder . Expression < Func <THolder, TProperty>> propertyLambda A lambda function that selects the property. DelegateHelper.CreateInvalidSetterOption o Error handling options. Defaults to ThrowException . Returns Type Description Action <THolder, TProperty> An action that takes an holder instance and the value to set. Type Parameters Name Description THolder Property holder type (will be inferred by the compiler). TProperty Property type (will be inferred by the compiler). | Improve this Doc View Source CreateSetter<THolder, TProperty>(Expression<Func<THolder, TProperty>>, DelegateHelper.CreateInvalidSetterOption) Creates a setter fo a property. Declaration public static Action<THolder, TProperty> CreateSetter<THolder, TProperty>(Expression<Func<THolder, TProperty>> propertyLambda, DelegateHelper.CreateInvalidSetterOption o = DelegateHelper.CreateInvalidSetterOption.ThrowException) Parameters Type Name Description Expression < Func <THolder, TProperty>> propertyLambda A lambda function that selects the property. DelegateHelper.CreateInvalidSetterOption o Error handling options. Defaults to ThrowException . Returns Type Description Action <THolder, TProperty> An action that takes an holder instance and the value to set. Type Parameters Name Description THolder Property holder type. TProperty Property type. | Improve this Doc View Source GetInstanceInvoker<TDelegate>(Object, String) Extension method to obtain a delegate of type TDelegate that can be used to call the instance method with given method name on specific obj . The method signature must be compatible with the signature of TDelegate . Declaration public static TDelegate GetInstanceInvoker<TDelegate>(object obj, string name)where TDelegate : class Parameters Type Name Description Object obj The object instance to find the method. String name The name of the method. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetInstanceInvoker<TDelegate>(Object, String, Boolean) Extension method to obtain a delegate of type TDelegate that can be used to call the instance method with given method name on specific obj . The method signature must be compatible with the signature of TDelegate . Declaration public static TDelegate GetInstanceInvoker<TDelegate>(object obj, string name, bool throwOnError)where TDelegate : class Parameters Type Name Description Object obj The object instance to find the method. String name The name of the method. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found and throwOnError is false. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetInstanceInvoker<TDelegate>(Type, String) Extension method to obtain a delegate of type TDelegate that can be used to call the instance method with given method name from given type . The first parameter type of TDelegate must be assignable to the given type . The rest parameters and return type of TDelegate must be compatible with the signature of the method. Declaration public static TDelegate GetInstanceInvoker<TDelegate>(Type type, string name)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetInstanceInvoker<TDelegate>(Type, String, Boolean) Extension method to obtain a delegate of type TDelegate that can be used to call the instance method with given method name from given type . The first parameter type of TDelegate must be assignable to the given type . The rest parameters and return type of TDelegate must be compatible with the signature of the method. Declaration public static TDelegate GetInstanceInvoker<TDelegate>(Type type, string name, bool throwOnError)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found and throwOnError is false. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetInvoker<TDelegate>(Object, Type, String, BindingFlags, Func<MethodInfo, Boolean>, String, Boolean) This is a more general purpose method to obtain a delegate of type specified by parameter TDelegate that can be used to call on the specific obj to the method of given name defined in the given type or its ancestor. The method signature must be compatible with the signature of TDelegate . Declaration public static TDelegate GetInvoker<TDelegate>(object obj, Type type, string name, BindingFlags bindingAttr, Func<MethodInfo, bool> filter, string filterMessage, bool throwOnError)where TDelegate : class Parameters Type Name Description Object obj The object instance to invoke the method or null for static methods and open instance methods. Type type The type to find the method. String name The name of the method. BindingFlags bindingAttr A bitmask comprised of one or more System.Reflection.BindingFlags that specify how the search is conducted. -or- Zero, to return null. Func < MethodInfo , Boolean > filter The additional filter to include/exclude methods. String filterMessage The description of the additional filter criteria that will be included in the exception message when no matching method found. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate . Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetNonVirtualInvoker<TDelegate>(Object, Type, String) Extension method to obtain a delegate of type specified by parameter TDelegate that can be used to make non virtual call on the specific obj to the instance method of given name defined in the given type or its ancestor. The method signature must be compatible with the signature of TDelegate . Declaration public static TDelegate GetNonVirtualInvoker<TDelegate>(object obj, Type type, string name)where TDelegate : class Parameters Type Name Description Object obj The object instance to invoke the method. Type type The type to find the method. String name The name of the method. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetNonVirtualInvoker<TDelegate>(Object, Type, String, Boolean) Extension method to obtain a delegate of type specified by parameter TDelegate that can be used to make non virtual call on the specific obj to the instance method of given name defined in the given type or its ancestor. The method signature must be compatible with the signature of TDelegate . Declaration public static TDelegate GetNonVirtualInvoker<TDelegate>(object obj, Type type, string name, bool throwOnError)where TDelegate : class Parameters Type Name Description Object obj The object instance to invoke the method. Type type The type to find the method. String name The name of the method. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found and throwOnError is false. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetNonVirtualInvoker<TDelegate>(Type, String) Extension method to obtain a delegate of type specified by parameter TDelegate that can be used to make non virtual call to instance method with given method name on given type . The first parameter type of TDelegate must be assignable to the given type . Remaining parameters and return type of TDelegate must be compatible with the signature of the method. Declaration public static TDelegate GetNonVirtualInvoker<TDelegate>(Type type, string name)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetNonVirtualInvoker<TDelegate>(Type, String, Boolean) Extension method to obtain a delegate of type specified by parameter TDelegate that can be used to make non virtual call to instance method with given method name on given type . The first parameter type of TDelegate must be assignable to the given type . Remaining parameters and return type of TDelegate must be compatible with the signature of the method. Declaration public static TDelegate GetNonVirtualInvoker<TDelegate>(Type type, string name, bool throwOnError)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found and throwOnError is false. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetStaticInvoker<TDelegate>(Type, String) Extension method to obtain a delegate of type TDelegate that can be used to call the static method with given method name from given type . The method signature must be compatible with the parameter and return type of TDelegate . Declaration public static TDelegate GetStaticInvoker<TDelegate>(Type type, string name)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Returns Type Description TDelegate A delegate of type TDelegate or null when no matching method if found. Type Parameters Name Description TDelegate Type of a .Net delegate. | Improve this Doc View Source GetStaticInvoker<TDelegate>(Type, String, Boolean) Extension method to obtain a delegate of type TDelegate that can be used to call the static method with given method name from given type . The method signature must be compatible with the parameter and return type of TDelegate . Declaration public static TDelegate GetStaticInvoker<TDelegate>(Type type, string name, bool throwOnError)where TDelegate : class Parameters Type Name Description Type type The type to locate the compatible method. String name The name of the method. Boolean throwOnError True to raise a System.MissingMethodException when not found. Returns Type Description TDelegate A delegate of type TDelegate or null if the method has not been found and throwOnError is false. Type Parameters Name Description TDelegate Type of a .Net delegate."
  },
  "api/CK.Reflection.DelegateHelper.CreateInvalidSetterOption.html": {
    "href": "api/CK.Reflection.DelegateHelper.CreateInvalidSetterOption.html",
    "title": "Enum DelegateHelper.CreateInvalidSetterOption | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum DelegateHelper.CreateInvalidSetterOption Describes the behavior of CreateSetter methods when no setter exists on the property. Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public enum CreateInvalidSetterOption Fields | Improve this Doc View Source NullAction Returns a null action delegate. Declaration NullAction = 1 Field Value Type Description DelegateHelper.CreateInvalidSetterOption | Improve this Doc View Source ThrowException Throws an System.InvalidOperationException . This is the default. Declaration ThrowException = 0 Field Value Type Description DelegateHelper.CreateInvalidSetterOption | Improve this Doc View Source VoidAction Returns a void action (an action that does nothing). Declaration VoidAction = 2 Field Value Type Description DelegateHelper.CreateInvalidSetterOption"
  },
  "api/CK.Monitoring.html": {
    "href": "api/CK.Monitoring.html",
    "title": "Namespace CK.Monitoring | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring Classes CKMonWriterClient This client writes .ckmon files for one monitor. To close output file, simply UnregisterClient(IActivityMonitorClient) this client. GrandOutput A GrandOutput collects activity of multiple IActivityMonitor . It routes log events to multiple channels based on Topic . It is usually useless to explicitly create an instance of GrandOutput: the Default one is available as soon as EnsureActiveDefault(Action<GrandOutput>) (or EnsureActiveDefaultWithDefaultSettings(IActivityMonitor) ) is called and will be automatically used by new ActivityMonitor . GrandOutputChannelConfigData Configuration for a channel. A channel is a route that receive outputs from monitors: this configuration is associated to a RouteConfiguration or a SubRouteConfiguration object. Currently, the only configuration is the MinimalFilter of the channel. GrandOutputClient A GrandOutputClient is a IActivityMonitorClient that can only be obtained and registered through Register(IActivityMonitor) . GrandOutputConfiguration Defines configuration for GrandOutput . This object is not thread safe. New GrandOutputConfiguration can be created when needed (and method LoadFromFile(String, IActivityMonitor) or Load(XElement, IActivityMonitor) called). LogEntry Encapsulates ILogEntry concrete objects manipulation. LogReader A log reader acts as an enumerator of ILogEntry that are stored in a System.IO.Stream . LogReader.MulticastFilter Enables filtering of a multi-cast stream: only entries from the specified monitor will be read. MonitorBinaryFileOutput Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). MonitorFileOutputBase Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). MonitorTextFileOutput Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). MultiLogReader This reader process multiples .ckmon files (possibly in different steps: it internally aggregates the result) and can create MultiLogReader.ActivityMap objects on demand. It is a thread safe object (the ActivityMap is immutable). MultiLogReader.ActivityMap Immutable snapshot of a MultiLogReader 's content. MultiLogReader.Monitor Immutable information that describes one monitor's content. MultiLogReader.Monitor.LivePage A page gives access to Entries by unifying all the raw log files and removing duplicates from them. Pages are sequentially accessed from a first page (obtained by ) and the by calling ForwardPage() . MultiLogReader.RawLogFile Immutable object that contains a description of the content of a raw log file. MultiLogReader.RawLogFileMonitorOccurence Immutable object that describes the occurrence of a Monitor in a MultiLogReader.RawLogFile . ParentedLogEntry Parented log entry binds an entry to its parent group and can be a missing entry (a line or group opening or closing that we know it exists but have no data for it or only their LogTime ). XmlMonitoringExtensions Helpers to read XML configurations. Structs GrandOutputEventInfo Captures a log data with the current Topic . MulticastLogEntryWithOffset Immutable capture of a log Entry and its Offset . Interfaces IGrandOutputBridgeTarget External entry point for cross application domain bridge. IGrandOutputDispatcherStrategy Defines a strategy to manage dispatching log events overload and idle time management. IGrandOutputSink Defines a sink that can be registered onto a GrandOutput to intercept any log event. It is also supported by HandlerBase . ILogEntry Unified interface for log entries whatever their LogType is. All log entries can be exposed through this \"rich\" interface. IMulticastLogEntry Unified interface for multi-cast log entries whatever their LogType or their source MonitorId is. All log entries can be exposed through this \"rich\" interface. IMulticastLogInfo Information required by a IMulticastLogEntry . Enums LogEntryType Type of a ILogEntry . SourceFilterApplyMode Defines how the GrandOutputConfiguration applies its SourceOverrideFilter to the application domain's global FilterSource ."
  },
  "api/CK.Monitoring.XmlMonitoringExtensions.html": {
    "href": "api/CK.Monitoring.XmlMonitoringExtensions.html",
    "title": "Class XmlMonitoringExtensions | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class XmlMonitoringExtensions Helpers to read XML configurations. Inheritance Object XmlMonitoringExtensions Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class XmlMonitoringExtensions Methods | Improve this Doc View Source GetAttributeLogFilter(XElement, String, Boolean) Reads a LogFilter . Declaration public static LogFilter? GetAttributeLogFilter(XElement this, string name, bool fallbackToUndefined) Parameters Type Name Description XElement this This System.Xml.Linq.XElement . String name Name of the attribute. Boolean fallbackToUndefined True to return Undefined instead of null when not found. Returns Type Description Nullable < LogFilter > A nullable LogFilter. | Improve this Doc View Source GetRequiredAttributeLogFilter(XElement, String) Reads a LogFilter that must exist. Declaration public static LogFilter GetRequiredAttributeLogFilter(XElement this, string name) Parameters Type Name Description XElement this This System.Xml.Linq.XElement . String name Name of the attribute. Returns Type Description LogFilter A LogFilter."
  },
  "api/CK.Monitoring.Tests.html": {
    "href": "api/CK.Monitoring.Tests.html",
    "title": "Namespace CK.Monitoring.Tests | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.Tests Classes ChannelAndSourceFilterTests ConfigHostTests DocumentationCodeSnippets GrandOutputTests StressTests StupidStringClient StupidStringClient.Entry TextFileTests"
  },
  "api/CK.Monitoring.Tests.TextFileTests.html": {
    "href": "api/CK.Monitoring.Tests.TextFileTests.html",
    "title": "Class TextFileTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TextFileTests Inheritance Object TextFileTests Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class TextFileTests Methods | Improve this Doc View Source dumping_text_file() Declaration [Test] public void dumping_text_file() | Improve this Doc View Source dumping_text_file_with_multiple_monitors() Declaration [Explicit] [Test] public void dumping_text_file_with_multiple_monitors() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.StupidStringClient.html": {
    "href": "api/CK.Monitoring.Tests.StupidStringClient.html",
    "title": "Class StupidStringClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StupidStringClient Inheritance Object ActivityMonitorTextHelperClient StupidStringClient Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax public class StupidStringClient : ActivityMonitorTextHelperClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source StupidStringClient(Boolean, Boolean) Declaration public StupidStringClient(bool writeTags = false, bool writeConclusionTraits = false) Parameters Type Name Description Boolean writeTags Boolean writeConclusionTraits Fields | Improve this Doc View Source Entries Declaration public readonly List<StupidStringClient.Entry> Entries Field Value Type Description List < StupidStringClient.Entry > Properties | Improve this Doc View Source WriteConclusionTraits Declaration public bool WriteConclusionTraits { get; } Property Value Type Description Boolean | Improve this Doc View Source Writer Declaration public StringWriter Writer { get; } Property Value Type Description StringWriter | Improve this Doc View Source WriteTags Declaration public bool WriteTags { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Declaration protected override void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Declaration protected override void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration protected override void OnGroupClose(IActivityLogGroup g, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup g IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Declaration protected override void OnGroupOpen(IActivityLogGroup g) Parameters Type Name Description IActivityLogGroup g | Improve this Doc View Source OnLeaveLevel(LogLevel) Declaration protected override void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String | Improve this Doc View Source ToStringFromWriter() Declaration public string ToStringFromWriter() Returns Type Description String"
  },
  "api/CK.Monitoring.Tests.StupidStringClient.Entry.html": {
    "href": "api/CK.Monitoring.Tests.StupidStringClient.Entry.html",
    "title": "Class StupidStringClient.Entry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StupidStringClient.Entry Inheritance Object StupidStringClient.Entry Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax public class Entry Constructors | Improve this Doc View Source Entry(ActivityMonitorLogData) Declaration public Entry(ActivityMonitorLogData d) Parameters Type Name Description ActivityMonitorLogData d | Improve this Doc View Source Entry(IActivityLogGroup) Declaration public Entry(IActivityLogGroup d) Parameters Type Name Description IActivityLogGroup d Fields | Improve this Doc View Source Exception Declaration public readonly Exception Exception Field Value Type Description Exception | Improve this Doc View Source Level Declaration public readonly LogLevel Level Field Value Type Description LogLevel | Improve this Doc View Source LogTime Declaration public readonly DateTimeStamp LogTime Field Value Type Description DateTimeStamp | Improve this Doc View Source Tags Declaration public readonly CKTrait Tags Field Value Type Description CKTrait | Improve this Doc View Source Text Declaration public readonly string Text Field Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Monitoring.Tests.StressTests.html": {
    "href": "api/CK.Monitoring.Tests.StressTests.html",
    "title": "Class StressTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StressTests Inheritance Object StressTests Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class StressTests Methods | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup() | Improve this Doc View Source ThroughputHypothesisAndBlockInputs() This is more a laboratory than a test... Declaration [Test] public void ThroughputHypothesisAndBlockInputs()"
  },
  "api/CK.Monitoring.Tests.Persistence.html": {
    "href": "api/CK.Monitoring.Tests.Persistence.html",
    "title": "Namespace CK.Monitoring.Tests.Persistence | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.Tests.Persistence Classes CKMonPreviousVersionSupportTests MultiFileReaderTests ReadWriteTests"
  },
  "api/CK.Monitoring.Tests.Persistence.ReadWriteTests.html": {
    "href": "api/CK.Monitoring.Tests.Persistence.ReadWriteTests.html",
    "title": "Class ReadWriteTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ReadWriteTests Inheritance Object ReadWriteTests Namespace :CK.Monitoring.Tests.Persistence Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class ReadWriteTests Methods | Improve this Doc View Source CKMonWriterClientTest() Declaration [Test] public void CKMonWriterClientTest() | Improve this Doc View Source LogEntryReadWrite() Declaration [Test] public void LogEntryReadWrite() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.Persistence.MultiFileReaderTests.html": {
    "href": "api/CK.Monitoring.Tests.Persistence.MultiFileReaderTests.html",
    "title": "Class MultiFileReaderTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiFileReaderTests Inheritance Object MultiFileReaderTests Namespace :CK.Monitoring.Tests.Persistence Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class MultiFileReaderTests Methods | Improve this Doc View Source ReadDuplicates() Declaration [Test] public void ReadDuplicates() | Improve this Doc View Source ReadDuplicatesWithGZip() Declaration [Test] public void ReadDuplicatesWithGZip() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.Persistence.CKMonPreviousVersionSupportTests.html": {
    "href": "api/CK.Monitoring.Tests.Persistence.CKMonPreviousVersionSupportTests.html",
    "title": "Class CKMonPreviousVersionSupportTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKMonPreviousVersionSupportTests Inheritance Object CKMonPreviousVersionSupportTests Namespace :CK.Monitoring.Tests.Persistence Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class CKMonPreviousVersionSupportTests Methods | Improve this Doc View Source reading_old_ckmon_V0_files() Declaration [Test] public void reading_old_ckmon_V0_files() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.Performance.html": {
    "href": "api/CK.Monitoring.Tests.Performance.html",
    "title": "Namespace CK.Monitoring.Tests.Performance | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.Tests.Performance Classes GzipFileTests"
  },
  "api/CK.Monitoring.Tests.Performance.GzipFileTests.html": {
    "href": "api/CK.Monitoring.Tests.Performance.GzipFileTests.html",
    "title": "Class GzipFileTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GzipFileTests Inheritance Object GzipFileTests Namespace :CK.Monitoring.Tests.Performance Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class GzipFileTests Methods | Improve this Doc View Source CompressedReadWriteTests() Declaration [Test] [Timeout(30000)] public void CompressedReadWriteTests()"
  },
  "api/CK.Monitoring.Tests.GrandOutputTests.html": {
    "href": "api/CK.Monitoring.Tests.GrandOutputTests.html",
    "title": "Class GrandOutputTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutputTests Inheritance Object GrandOutputTests Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class GrandOutputTests Methods | Improve this Doc View Source ApplyEmptyAndDefaultConfig() Declaration [Test] public void ApplyEmptyAndDefaultConfig() | Improve this Doc View Source GrandOutputHasSameCompressedAndUncompressedLogs() Declaration [Test] public void GrandOutputHasSameCompressedAndUncompressedLogs() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup() | Improve this Doc View Source Teardown() Declaration [TearDown] public void Teardown()"
  },
  "api/CK.Monitoring.Tests.DocumentationCodeSnippets.html": {
    "href": "api/CK.Monitoring.Tests.DocumentationCodeSnippets.html",
    "title": "Class DocumentationCodeSnippets | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DocumentationCodeSnippets Inheritance Object DocumentationCodeSnippets Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax public class DocumentationCodeSnippets Methods | Improve this Doc View Source CodeConfiguration() Declaration public void CodeConfiguration()"
  },
  "api/CK.Monitoring.Tests.Configuration.html": {
    "href": "api/CK.Monitoring.Tests.Configuration.html",
    "title": "Namespace CK.Monitoring.Tests.Configuration | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.Tests.Configuration Classes GrandOutputConfigTests RouteConfigurationTests"
  },
  "api/CK.Monitoring.Tests.Configuration.RouteConfigurationTests.html": {
    "href": "api/CK.Monitoring.Tests.Configuration.RouteConfigurationTests.html",
    "title": "Class RouteConfigurationTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class RouteConfigurationTests Inheritance Object RouteConfigurationTests Namespace :CK.Monitoring.Tests.Configuration Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] [Category(\"ConsoleMonitor\")] public class RouteConfigurationTests Methods | Improve this Doc View Source ActionNamesConflict() Declaration [Test] public void ActionNamesConflict() | Improve this Doc View Source InvalidNames() Declaration [Test] public void InvalidNames() | Improve this Doc View Source RouteNamesConflict() Declaration [Test] public void RouteNamesConflict() | Improve this Doc View Source RoutesAndActions() Declaration [Test] public void RoutesAndActions() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.Configuration.GrandOutputConfigTests.html": {
    "href": "api/CK.Monitoring.Tests.Configuration.GrandOutputConfigTests.html",
    "title": "Class GrandOutputConfigTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutputConfigTests Inheritance Object GrandOutputConfigTests Namespace :CK.Monitoring.Tests.Configuration Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class GrandOutputConfigTests Methods | Improve this Doc View Source ApplyConfigSimple() Declaration [Test] public void ApplyConfigSimple() | Improve this Doc View Source ApplyConfigWithError() Declaration [Test] public void ApplyConfigWithError() | Improve this Doc View Source ConfigObjectAttributeRequired() Declaration [Test] public void ConfigObjectAttributeRequired() | Improve this Doc View Source InvalidRootNode() Declaration [Test] public void InvalidRootNode() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.Monitoring.Tests.ConfigHostTests.html": {
    "href": "api/CK.Monitoring.Tests.ConfigHostTests.html",
    "title": "Class ConfigHostTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ConfigHostTests Inheritance Object ConfigHostTests Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax public class ConfigHostTests Methods | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup() | Improve this Doc View Source SetupContext() Declaration [SetUp] public void SetupContext() | Improve this Doc View Source SimpleLogConfigAndDump() Declaration [Test] public void SimpleLogConfigAndDump() | Improve this Doc View Source TearDownContext() Declaration [TearDown] public void TearDownContext()"
  },
  "api/CK.Monitoring.Tests.ChannelAndSourceFilterTests.html": {
    "href": "api/CK.Monitoring.Tests.ChannelAndSourceFilterTests.html",
    "title": "Class ChannelAndSourceFilterTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ChannelAndSourceFilterTests Inheritance Object ChannelAndSourceFilterTests Namespace :CK.Monitoring.Tests Assembly :CK.Monitoring.Tests.dll Syntax [TestFixture] public class ChannelAndSourceFilterTests Methods | Improve this Doc View Source FilteringBySource() Declaration [Test] public void FilteringBySource() | Improve this Doc View Source FilteringByTopic() Declaration [Test] public void FilteringByTopic() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup()"
  },
  "api/CK.RouteConfig.Impl.IProtoRoute.html": {
    "href": "api/CK.RouteConfig.Impl.IProtoRoute.html",
    "title": "Interface IProtoRoute | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IProtoRoute Intermediate objects that captures the first step of configuration resolution. At this step we manipulate MetaConfiguration objects. Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public interface IProtoRoute Properties | Improve this Doc View Source Configuration Gets the associated RouteConfiguration object. Declaration RouteConfiguration Configuration { get; } Property Value Type Description RouteConfiguration | Improve this Doc View Source FullName Gets the full name of this route. Declaration string FullName { get; } Property Value Type Description String | Improve this Doc View Source MetaConfigurations Gets the list of MetaConfiguration objects such as MetaAddActionConfiguration or MetaRemoveActionConfiguration . Declaration IReadOnlyList<MetaConfiguration> MetaConfigurations { get; } Property Value Type Description IReadOnlyList < MetaConfiguration > | Improve this Doc View Source Namespace Gets the namespace of this route. Declaration string Namespace { get; } Property Value Type Description String | Improve this Doc View Source SubRoutes Gets the list of subordinated route. Declaration IReadOnlyList<IProtoSubRoute> SubRoutes { get; } Property Value Type Description IReadOnlyList < IProtoSubRoute > Methods | Improve this Doc View Source FindDeclaredAction(String) Finds a previously declared action. The action can exist in the parent routes if ImportParentDeclaredActionsAbove is true (which is the default). Declaration ActionConfiguration FindDeclaredAction(string name) Parameters Type Name Description String name Name of an existing action. Returns Type Description ActionConfiguration Null or the action with the name."
  },
  "api/CK.Core.ICKReadOnlyCollection`1.html": {
    "href": "api/CK.Core.ICKReadOnlyCollection`1.html",
    "title": "Interface ICKReadOnlyCollection<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKReadOnlyCollection<T> Represents a generic read only collections of objects with a contravariant Contains(Object) method. This enables collection implementing this interface to support better lookup complexity than O(n) if possible. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKReadOnlyCollection<out T> : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of the elements in the collection. Methods | Improve this Doc View Source Contains(Object) Determines whether collection contains a specific value. Declaration bool Contains(object item) Parameters Type Name Description Object item The object to find in the collecion. Returns Type Description Boolean True if item is found in the collection; otherwise, false."
  },
  "api/CK.Core.IActivityMonitorOutput.html": {
    "href": "api/CK.Core.IActivityMonitorOutput.html",
    "title": "Interface IActivityMonitorOutput | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorOutput Offers IActivityMonitorClient registration/unregistration and exposes a BridgeTarget (an ActivityMonitorBridgeTarget ) that can be used to accept logs from other monitors. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityMonitorOutput Properties | Improve this Doc View Source BridgeTarget Gets an entry point for other monitors: by registering ActivityMonitorBridge in other Output bound to this ActivityMonitorBridgeTarget , log streams can easily be merged. Declaration ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget | Improve this Doc View Source Clients Gets the list of registered IActivityMonitorClient . Declaration IReadOnlyList<IActivityMonitorClient> Clients { get; } Property Value Type Description IReadOnlyList < IActivityMonitorClient > Methods | Improve this Doc View Source RegisterClient(IActivityMonitorClient, out Boolean) Registers an IActivityMonitorClient to the Clients list. Duplicate IActivityMonitorClient instances are ignored. Declaration IActivityMonitorClient RegisterClient(IActivityMonitorClient client, out bool added) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Boolean added True if the client has been added, false if it was already registered. Returns Type Description IActivityMonitorClient The registered client. | Improve this Doc View Source RegisterClient<T>(T, out Boolean) Registers a typed IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration T RegisterClient<T>(T client, out bool added)where T : IActivityMonitorClient Parameters Type Name Description T client Client to register. Boolean added True if the client has been added, false if it was already registered. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . | Improve this Doc View Source RegisterUniqueClient<T>(Func<T, Boolean>, Func<T>) Registers a IActivityMonitorClient that must be unique in a sense. Remarks The factory function MUST return a client that satisfies the tester function otherwise a System.InvalidOperationException is thrown. The factory is called only when the no client satisfies the tester function: this makes the 'added' out parameter useless. Declaration T RegisterUniqueClient<T>(Func<T, bool> tester, Func<T> factory)where T : IActivityMonitorClient Parameters Type Name Description Func <T, Boolean > tester Predicate that must be satisfied for at least one registered client. Func <T> factory Factory that will be called if no existing client satisfies tester . Returns Type Description T The found or newly created client. Type Parameters Name Description T | Improve this Doc View Source UnregisterClient(IActivityMonitorClient) Unregisters the given IActivityMonitorClient from the Clients list. Silently ignores an unregistered client. Declaration IActivityMonitorClient UnregisterClient(IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The unregistered client or null if it has not been found."
  },
  "api/CK.Core.IActivityMonitorLineSender.html": {
    "href": "api/CK.Core.IActivityMonitorLineSender.html",
    "title": "Interface IActivityMonitorLineSender | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorLineSender The interface that carries Send extension methods. Namespace :CK.Core Assembly :CK.ActivityMonitor.StandardSender.dll Syntax public interface IActivityMonitorLineSender Properties | Improve this Doc View Source IsRejected Gets whether the log has been rejected. Declaration bool IsRejected { get; } Property Value Type Description Boolean"
  },
  "api/CK.Core.IActivityMonitorGroupSender.html": {
    "href": "api/CK.Core.IActivityMonitorGroupSender.html",
    "title": "Interface IActivityMonitorGroupSender | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorGroupSender The interface that carries Send extension methods for groups. Namespace :CK.Core Assembly :CK.ActivityMonitor.StandardSender.dll Syntax public interface IActivityMonitorGroupSender Properties | Improve this Doc View Source IsRejected Gets whether the log has been rejected. Declaration bool IsRejected { get; } Property Value Type Description Boolean"
  },
  "api/CK.Core.IActivityMonitorClient.html": {
    "href": "api/CK.Core.IActivityMonitorClient.html",
    "title": "Interface IActivityMonitorClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorClient Listener for IActivityMonitor registered in a IActivityMonitorOutput . Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityMonitorClient Methods | Improve this Doc View Source OnAutoTagsChanged(CKTrait) Called when AutoTags changed. Declaration void OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait The new tags (never null but can be empty). | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Declaration void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. Never null but can be empty. | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Called once the user conclusions are known at the group level but before the group is actually closed: clients can update the conclusions for the group. Does nothing by default. Declaration void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Called for each UnfilteredOpenGroup(ActivityMonitorGroupData) . Declaration void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnTopicChanged(String, String, Int32) Called when a new Topic is set. Declaration void OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic The new topic string (never null but can be empty). String fileName Source file name where SetTopic(String, String, Int32) has been called. Int32 lineNumber Source line number where IActivityMonitor.SetTopic has been called. | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Called for each UnfilteredLog(ActivityMonitorLogData) . The Exception is always null since exceptions are carried by groups. Declaration void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null."
  },
  "api/CK.Core.IActivityMonitorBoundClient.html": {
    "href": "api/CK.Core.IActivityMonitorBoundClient.html",
    "title": "Interface IActivityMonitorBoundClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorBoundClient Specialized IActivityMonitorClient that is bound to one IActivityMonitor . Clients that can not be registered into multiple outputs (and receive logs from multiple monitors at the same time) should implement this interface in order to control their registration/un-registration. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityMonitorBoundClient : IActivityMonitorClient Properties | Improve this Doc View Source MinimalFilter Gets the minimal log level that this Client expects. Should default to None . Declaration LogFilter MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source SetMonitor(IActivityMonitorImpl, Boolean) Called by IActivityMonitorOutput when registering or unregistering this client. Declaration void SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source The monitor that will send log. Boolean forceBuggyRemove True if this client must be removed because one of its method thrown an exception. The source is null."
  },
  "api/CK.Core.IActivityMonitor.html": {
    "href": "api/CK.Core.IActivityMonitor.html",
    "title": "Interface IActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitor Defines the core Activity Monitor interface. Small is beautiful. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityMonitor Remarks This is not the same as a classical logging framework: the \"activity\" captures by an activity monitor is structured. It can be seen as a \"Story Writer\": its output can be displayed to an end user (even if some structured information can easily be injected). Furthermore, activities can be tracked (with the help of the developer of course) across threads, tasks or application domain. Properties | Improve this Doc View Source ActualFilter Gets the actual filter level for logs: this combines the configured MinimalFilter and the minimal requirements of any IActivityMonitorBoundClient that specifies such a minimal filter level. Remarks This does NOT take into account the static (application-domain) DefaultFilter . This global default must be used if this ActualFilter is None for Line or Group : the ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) extension method takes it into account. Declaration LogFilter ActualFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source AutoTags Gets or sets the tags of this monitor: any subsequent logs will be tagged by these tags. The CKTrait must be registered in ActivityMonitor.Tags . Modifications to this property are scoped to the current Group since when a Group is closed, this property (and MinimalFilter ) is automatically restored to its original value (captured when the Group was opened). Declaration CKTrait AutoTags { get; set; } Property Value Type Description CKTrait | Improve this Doc View Source LastLogTime Gets the last DateTimeStamp for this monitor. Declaration DateTimeStamp LastLogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source MinimalFilter Gets or sets a filter for the log level. Modifications to this property are scoped to the current Group since when a Group is closed, this property (and AutoTags ) is automatically restored to its original value (captured when the Group was opened). Defaults to Undefined . Declaration LogFilter MinimalFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source Output Gets the IActivityMonitorOutput for this monitor. Declaration IActivityMonitorOutput Output { get; } Property Value Type Description IActivityMonitorOutput | Improve this Doc View Source Topic Gets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. It must be set with SetTopic(String, String, Int32) and unlike MinimalFilter and AutoTags , the topic is not reseted when groups are closed. Remarks Clients are warned of the change thanks to OnTopicChanged(String, String, Int32) and an unfiltered Info log with the new topic prefixed with \"Topic:\" and tagged with MonitorTopicChanged is emitted. Declaration string Topic { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseGroup(DateTimeStamp, Object) Closes the current Group. Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a System.Collections.Generic.List`1 or an System.Collections.Generic.IEnumerable`1 of ActivityLogGroupConclusion, or any object with an overridden System.Object.ToString method. See remarks (especially for List ). Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. Declaration void CloseGroup(DateTimeStamp logTime, object userConclusion = null) Parameters Type Name Description DateTimeStamp logTime Log time of the closing of the group. You can use UtcNow or NextLogTime(IActivityMonitor) extension method. Object userConclusion Optional string, ActivityLogGroupConclusion object, enumerable of ActivityLogGroupConclusion or object to conclude the group. See remarks. | Improve this Doc View Source SetTopic(String, String, Int32) Sets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. Declaration void SetTopic(string newTopic, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description String newTopic The new topic string to associate to this monitor. String fileName The source code file name from which the topic is set. Int32 lineNumber The line number in the source from which the topic is set. | Improve this Doc View Source UnfilteredLog(ActivityMonitorLogData) Logs a line regardless of ActualFilter level (except for Off ). Declaration void UnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Data that describes the log. Can not be null. | Improve this Doc View Source UnfilteredOpenGroup(ActivityMonitorGroupData) Opens a group regardless of ActualFilter level (except for Off ). CloseGroup(DateTimeStamp, Object) must be called in order to close the group, and/or the returned object must be disposed (both safely can be called: the group is closed on the first action, the second one is ignored). Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the MinimalFilter is automatically sets to Debug to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group has been filtered. Declaration IDisposableGroup UnfilteredOpenGroup(ActivityMonitorGroupData data) Parameters Type Name Description ActivityMonitorGroupData data Data that describes the log. Can not be null. Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group."
  },
  "api/CK.Core.IActivityLogGroup.html": {
    "href": "api/CK.Core.IActivityLogGroup.html",
    "title": "Interface IActivityLogGroup | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityLogGroup Exposes all the relevant information for a currently opened group. Groups are linked together from the current one to the very first one thanks to the Parent property. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityLogGroup Properties | Improve this Doc View Source CloseLogTime Gets the log time of the group closing. It is MinValue when the group is not closed yet. Declaration DateTimeStamp CloseLogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source Depth Gets the depth of this group in its origin monitor. (1 for top level groups). Declaration int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source Exception Gets the associated Exception if it exists. Declaration Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source ExceptionData Gets the CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration CKExceptionData ExceptionData { get; } Property Value Type Description CKExceptionData | Improve this Doc View Source FileName Gets the file name of the source code that issued the log. Declaration string FileName { get; } Property Value Type Description String | Improve this Doc View Source GroupLevel Gets the level associated to this group. The IsFiltered can be set here: use MaskedGroupLevel to get the actual level from Trace to Fatal . Declaration LogLevel GroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source GroupTags Gets the tags for the log group. Declaration CKTrait GroupTags { get; } Property Value Type Description CKTrait | Improve this Doc View Source GroupText Gets the text associated to this group. Declaration string GroupText { get; } Property Value Type Description String | Improve this Doc View Source IsGroupTextTheExceptionMessage Gets whether the GroupText is actually the Exception message. Declaration bool IsGroupTextTheExceptionMessage { get; } Property Value Type Description Boolean | Improve this Doc View Source LineNumber Gets the line number of the FileName that issued the log. Declaration int LineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source LogTime Gets the log time for the log. Declaration DateTimeStamp LogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source MaskedGroupLevel Gets the actual level ( Trace to Fatal ) associated to this group without IsFiltered bit. Declaration LogLevel MaskedGroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Parent Get the previous group in its origin monitor. Null if this group is a top level group. Declaration IActivityLogGroup Parent { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source SavedMonitorFilter Gets the MinimalFilter that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Filter when the group has been opened. Declaration LogFilter SavedMonitorFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source SavedMonitorTags Gets the AutoTags that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Tags when the group has been opened. Declaration CKTrait SavedMonitorTags { get; } Property Value Type Description CKTrait Methods | Improve this Doc View Source EnsureExceptionData() Gets or creates the CKExceptionData that captures exception information. If Exception is null, this method returns null. Declaration CKExceptionData EnsureExceptionData() Returns Type Description CKExceptionData"
  },
  "api/CK.Core.GrantLevel.html": {
    "href": "api/CK.Core.GrantLevel.html",
    "title": "Enum GrantLevel | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum GrantLevel Standard grant level: this is a simple (but often enough) way to secure a resource. Among the different levels, depending on the actual resource, some (or most) of them are useless and can be ignored. But for some kind of resources all of them make sense: a \"service object\" (a kind of executable process) for instance can benefits of all these levels. Namespace :CK.Core Assembly :CK.Core.dll Syntax public enum GrantLevel : byte Fields | Improve this Doc View Source Administrator Actor has full control on the object including its destruction. It may create and configure an independent Acl for the object. Declaration Administrator = 127 Field Value Type Description GrantLevel | Improve this Doc View Source Blind Actor doesn't even know that object exists. Declaration Blind = 0 Field Value Type Description GrantLevel | Improve this Doc View Source Contributor Actor can contribute to the object but cannot modifiy the object itself. Declaration Contributor = 32 Field Value Type Description GrantLevel | Improve this Doc View Source Editor Actor can edit the standard properties of the object. He may not be able to change more sensitive aspects such as the different names of the object. Declaration Editor = 64 Field Value Type Description GrantLevel | Improve this Doc View Source SafeAdministrator Actor can edit all properties of the object and can change the security settings by choosing an acl among defined security contexts. The actor can not destroy the object. Declaration SafeAdministrator = 112 Field Value Type Description GrantLevel | Improve this Doc View Source SuperEditor Actor can edit the object, its names and any property, but can not change the security settings. Declaration SuperEditor = 80 Field Value Type Description GrantLevel | Improve this Doc View Source User Actor can see the object names and may use services provided by the object but cannot see the object itself. Declaration User = 8 Field Value Type Description GrantLevel | Improve this Doc View Source Viewer Actor can view the object but cannot interact with it. Declaration Viewer = 16 Field Value Type Description GrantLevel"
  },
  "api/CK.Core.FileUtil.html": {
    "href": "api/CK.Core.FileUtil.html",
    "title": "Class FileUtil | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class FileUtil Helper functions related to file system. Inheritance Object FileUtil Namespace :CK.Core Assembly :CK.Core.dll Syntax public class FileUtil Fields | Improve this Doc View Source AltDirectorySeparatorString Gets the System.IO.Path.AltDirectorySeparatorChar as a string. Declaration public static readonly string AltDirectorySeparatorString Field Value Type Description String | Improve this Doc View Source DirectorySeparatorString Gets the System.IO.Path.DirectorySeparatorChar as a string. Declaration public static readonly string DirectorySeparatorString Field Value Type Description String | Improve this Doc View Source FileNameUniqueTimeUtcFormat A display format for System.DateTime that supports round-trips, is readable and can be used in path or url (the DateTime should be in UTC since System.DateTime.Kind is ignored). Use MatchFileNameUniqueTimeUtcFormat(StringMatcher, out DateTime) or TryParseFileNameUniqueTimeUtcFormat(String, out DateTime, Boolean) to parse it (it uses the correct System.Globalization.DateTimeStyles ). It is: @\"yyyy-MM-dd HH\\hmm.ss.fffffff\" Declaration public static readonly string FileNameUniqueTimeUtcFormat Field Value Type Description String | Improve this Doc View Source GzipFileHeader The file header for gzipped files. Declaration public static readonly byte[] GzipFileHeader Field Value Type Description Byte [] | Improve this Doc View Source InexistingFile Combination of System.IO.FileAttributes that can not exist: it can be used to tag non existing files among other existing (i.e. valid) file attributes. Declaration public static readonly FileAttributes InexistingFile Field Value Type Description FileAttributes | Improve this Doc View Source MissingFileLastWriteTimeUtc The time returned by System.IO.File.GetLastWriteTimeUtc(System.String) when the file does not exist. From MSDN: If the file described in the path parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Declaration public static readonly DateTime MissingFileLastWriteTimeUtc Field Value Type Description DateTime Methods | Improve this Doc View Source CheckForWriteAccess(String, Int32) Waits for a file to be writable or does not exist (if it does not exist, it can be created!). The file is opened and close. Waits the number of nbMaxMilliSecond before leaving and returning false: when 0 (the default), there is no wai. A nbMaxMilliSecond below 20 ~ 30 milliseconds is not accurate: even with nbMaxMilliSecond = 1 this method will return true if the file becomes writable during the next 10 or 20 milliseconds. Declaration public static bool CheckForWriteAccess(string path, int nbMaxMilliSecond = 0) Parameters Type Name Description String path The path of the file to write to. Int32 nbMaxMilliSecond Maximum number of milliseconds to wait before returning false. Returns Type Description Boolean True if the file has been correctly opened (and closed) in write mode. | Improve this Doc View Source CompressFileToGzipFile(String, String, Boolean, CompressionLevel, Int32) Compresses a file to another file, using GZip at the given compression level. Declaration public static void CompressFileToGzipFile(string sourceFilePath, string destinationPath, bool deleteSourceFileOnSuccess, CompressionLevel level = CompressionLevel.Optimal, int bufferSize = 65536) Parameters Type Name Description String sourceFilePath The source file path. String destinationPath The destination path. If it doesn't exist, it will be created. If it exists, it will be replaced. Boolean deleteSourceFileOnSuccess if set to true , will delete source file if no errors occured during compression. CompressionLevel level Compression level to use. Int32 bufferSize Size of the buffer, in bytes. | Improve this Doc View Source CompressFileToGzipFileAsync(String, String, CancellationToken, Boolean, CompressionLevel, Int32) Compresses a file to another file asynchronously, using GZip at the given compression level. Declaration public static Task CompressFileToGzipFileAsync(string sourceFilePath, string destinationPath, CancellationToken cancellationToken = null, bool deleteSourceFileOnSuccess = true, CompressionLevel level = CompressionLevel.Optimal, int bufferSize = 65536) Parameters Type Name Description String sourceFilePath The source file path. String destinationPath The destination path. If it doesn't exist, it will be created. If it exists, it will be replaced. CancellationToken cancellationToken Optional cancellation token for the task. Boolean deleteSourceFileOnSuccess If set to true , will delete source file if no error occurred during compression. CompressionLevel level Compression level to use. Int32 bufferSize Size of the buffer, in bytes. Returns Type Description Task | Improve this Doc View Source CopyDirectory(DirectoryInfo, DirectoryInfo, Boolean, Boolean, Func<FileInfo, Boolean>, Func<DirectoryInfo, Boolean>) Recursively copy a directory, creates it if it does not already exists. Throws an IOException, if a same file exists in the target directory. Declaration public static void CopyDirectory(DirectoryInfo src, DirectoryInfo target, bool withHiddenFiles = true, bool withHiddenFolders = true, Func<FileInfo, bool> fileFilter = null, Func<DirectoryInfo, bool> dirFilter = null) Parameters Type Name Description DirectoryInfo src The source directory. DirectoryInfo target The target directory. Boolean withHiddenFiles False to skip hidden files. Boolean withHiddenFolders False to skip hidden folders. Func < FileInfo , Boolean > fileFilter Optional predicate for directories. Func < DirectoryInfo , Boolean > dirFilter Optional predicate for files. | Improve this Doc View Source CreateAndOpenUniqueTimedFile(String, String, DateTime, FileAccess, FileShare, Int32, FileOptions, Int32) Creates and opens a new necessarily unique file in a directory that must exist. The file name is based on a System.DateTime , with an eventual uniquifier if a file already exists with the same name. You can use System.IO.FileStream.Name to obtain the file name. Declaration public static FileStream CreateAndOpenUniqueTimedFile(string pathPrefix, string fileSuffix, DateTime time, FileAccess access, FileShare share, int bufferSize, FileOptions options, int maxTryBeforeGuid = 512) Parameters Type Name Description String pathPrefix The path prefix. Must not be null. Must be a valid path and may ends with a prefix for the file name itself. String fileSuffix Suffix for the file name. Must not be null. Typically an extension (like \".txt\"). DateTime time The time that will be used to create the file name. It must be an UTC time. FileAccess access A constant that determines how the file can be accessed by the FileStream object. It can only be System.IO.FileAccess.Write or System.IO.FileAccess.ReadWrite (when set to System.IO.FileAccess.Read a System.ArgumentException is thrown). This sets the CanRead and CanWrite properties of the FileStream object. CanSeek is true if path specifies a disk file. FileShare share A constant that determines how the file will be shared by processes. Int32 bufferSize A positive Int32 value greater than 0 indicating the buffer size. For bufferSize values between one and eight, the actual buffer size is set to eight bytes. FileOptions options Specifies additional file options. Int32 maxTryBeforeGuid Maximum value for short hexadecimal uniquifier before using a base 64 guid suffix. Must greater than 0. Returns Type Description FileStream An opened System.IO.FileStream . | Improve this Doc View Source EnsureUniqueTimedFile(String, String, DateTime, Int32) Gets a path to a necessarily unique named file. The file name is based on a System.DateTime , with an eventual uniquifier if a file already exists with the same name. Declaration public static string EnsureUniqueTimedFile(string pathPrefix, string fileSuffix, DateTime time, int maxTryBeforeGuid = 512) Parameters Type Name Description String pathPrefix The path prefix. Must not be null. Must be a valid path and may ends with a prefix for the file name itself. String fileSuffix Suffix for the file name. Must not be null. Typically an extension (like \".txt\"). DateTime time The time that will be used to create the file name. It must be an UTC time. Int32 maxTryBeforeGuid Maximum value for short hexadecimal uniquifier before using a base 64 guid suffix. Must greater than 0. Returns Type Description String A string to a necessarily unique named file path. | Improve this Doc View Source FormatTimedUniqueFilePart(DateTime) Formats a string that is file name compatible from the given time and a System.Guid.NewGuid where time uses FileNameUniqueTimeUtcFormat and the new Guid is encoded with http://en.wikipedia.org/wiki/Base64#URL_applications . Declaration public static string FormatTimedUniqueFilePart(DateTime time) Parameters Type Name Description DateTime time The date time to use. Returns Type Description String A string with the time and a new guid in a file system compatible format. | Improve this Doc View Source IndexOfInvalidFileNameChars(String) Finds the first character index of any characters that are invalid in a file name. This method (and IndexOfInvalidPathChars(String) ) avoid the allocation of the array each time System.IO.Path.GetInvalidFileNameChars is called. Declaration public static int IndexOfInvalidFileNameChars(string path) Parameters Type Name Description String path Path to check. Can not be null. Returns Type Description Int32 A negative value if not found. | Improve this Doc View Source IndexOfInvalidPathChars(String) Finds the first character index of any characters that are invalid in a path. This method (and IndexOfInvalidFileNameChars(String) ) avoid the allocation of the array each time System.IO.Path.GetInvalidPathChars is called. Declaration public static int IndexOfInvalidPathChars(string path) Parameters Type Name Description String path Path to check. Can not be null. Returns Type Description Int32 A negative value if not found. | Improve this Doc View Source MatchFileNameUniqueTimeUtcFormat(StringMatcher, out DateTime) Matches a DateTime in the FileNameUniqueTimeUtcFormat format. Declaration public static bool MatchFileNameUniqueTimeUtcFormat(StringMatcher this, out DateTime time) Parameters Type Name Description StringMatcher this This StringMatcher . DateTime time Result time on success; otherwise UtcMinValue . Returns Type Description Boolean True if the time has been matched. | Improve this Doc View Source MoveToUniqueTimedFile(String, String, String, DateTime, Int32) Moves (renames) a file to a necessarily unique named file. The file name is based on a System.DateTime , with an eventual uniquifier if a file already exists with the same name. Declaration public static string MoveToUniqueTimedFile(string sourceFilePath, string pathPrefix, string fileSuffix, DateTime time, int maxTryBeforeGuid = 512) Parameters Type Name Description String sourceFilePath Path of the file to move. String pathPrefix The path prefix. Must not be null. Must be a valid path and may ends with a prefix for the file name itself. String fileSuffix Suffix for the file name. Must not be null. Typically an extension (like \".txt\"). DateTime time The time that will be used to create the file name. It must be an UTC time. Int32 maxTryBeforeGuid Maximum value for short hexadecimal uniquifier before using a base 64 guid suffix. Must greater than 0. Returns Type Description String An opened System.IO.FileStream . | Improve this Doc View Source NormalizePathSeparator(String, Boolean) Canonicalizes the path: all '/' and '\\' are mapped to System.IO.Path.DirectorySeparatorChar (and System.IO.Path.AltDirectorySeparatorChar will also be transformed). Declaration public static string NormalizePathSeparator(string path, bool ensureTrailingBackslash) Parameters Type Name Description String path The path to standardize (must be not be null). It is trimmed and if the path is empty, the empty string is returned. Boolean ensureTrailingBackslash Ensures that the normalized path will end with a System.IO.Path.DirectorySeparatorChar . It should be true for path to directories because we consider that a directory path SHOULD end with the slash as often as possible. When path is empty, this is not applied to preserve the fact that the string is empty. Returns Type Description String A standardized path, whatever the actual Path.DirectorySeparatorChar is on the current platform. | Improve this Doc View Source TryParseFileNameUniqueTimeUtcFormat(String, out DateTime, Boolean) Tries to parse a string formatted with the FileNameUniqueTimeUtcFormat . The string must contain only the time unless allowSuffix is true. Declaration public static bool TryParseFileNameUniqueTimeUtcFormat(string s, out DateTime time, bool allowSuffix = false) Parameters Type Name Description String s The string to parse. DateTime time Result time on success. Boolean allowSuffix True to accept a string that starts with the time and contains more text. Returns Type Description Boolean True if the string has been successfully parsed. | Improve this Doc View Source WriteUniqueTimedFile(String, String, DateTime, Byte[], Boolean, Int32) Creates a new necessarily unique file and writes bytes content in a directory that must exist. The file name is based on a System.DateTime , with an eventual uniquifier if a file already exists with the same name. Declaration public static string WriteUniqueTimedFile(string pathPrefix, string fileSuffix, DateTime time, byte[] content, bool withUTF8Bom, int maxTryBeforeGuid = 3) Parameters Type Name Description String pathPrefix The path prefix. Must not be null. Must be a valid path and may ends with a prefix for the file name itself. String fileSuffix Suffix for the file name. Must not be null. Typically an extension (like \".txt\"). DateTime time The time that will be used to create the file name. It should be an UTC time. Byte [] content The bytes to write. Can be null or empty if the file must only be created. Boolean withUTF8Bom True to write the UTF8 Byte Order Mask (the preamble). Int32 maxTryBeforeGuid Maximum value for short hexa uniquifier before using a base 64 guid suffix. Must between 0 and 15 (included). Returns Type Description String The full path name of the created file."
  },
  "api/CK.Core.FIFOBuffer`1.html": {
    "href": "api/CK.Core.FIFOBuffer`1.html",
    "title": "Class FIFOBuffer<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class FIFOBuffer<T> Simple implementation of a fixed size FIFO stack based on a circular buffer. The .Net System.Collections.Generic.Queue`1 's size increase as needed whereas this FIFO automatically loses the oldest items. Note that when T is a reference type, null can be pushed and pop. This can easily be used as a LIFO stack thanks to PopLast() and PeekLast() methods. Inheritance Object FIFOBuffer<T> Namespace :CK.Core Assembly :CK.Core.dll Syntax [Serializable] [DebuggerTypeProxy(typeof (ReadOnlyCollectionDebuggerView<>))] public class FIFOBuffer<T> : ICKReadOnlyList<T>, ICKReadOnlyCollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, ICKWritableCollector<T>, ISerializable Type Parameters Name Description T Type of the items. Constructors | Improve this Doc View Source FIFOBuffer(Int32) Initializes a new FIFOBuffer<T> with an initial capacity. Declaration public FIFOBuffer(int capacity) Parameters Type Name Description Int32 capacity Initial capacity (can be 0). | Improve this Doc View Source FIFOBuffer(SerializationInfo, StreamingContext) Deserialization constructor. Declaration protected FIFOBuffer(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization information. StreamingContext context Serialization context. Properties | Improve this Doc View Source Capacity Gets or sets the capacity (internal buffer will be resized). Declaration public int Capacity { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Count Gets the actual count of element: it is necessary less than or equal to Capacity . Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Gets the element by index. Index 0 is the oldest item, the one returned by Peek() and Pop() . Declaration [SuppressMessage(\"Microsoft.Design\", \"CA1065:DoNotRaiseExceptionsInUnexpectedLocations\", Justification = \"This is the right location to raise this exception!\")] public T this[int index] { get; } Parameters Type Name Description Int32 index Index must be positive and less than Count . Property Value Type Description T The indexed element. Methods | Improve this Doc View Source ICKWritableCollector<T>.Add(T) Declaration bool ICKWritableCollector<T>.Add(T e) Parameters Type Name Description T e Returns Type Description Boolean | Improve this Doc View Source Clear() Clears the internal buffer. Declaration public void Clear() | Improve this Doc View Source Contains(Object) Tests whether the buffer actually contains the given object. Declaration public bool Contains(object item) Parameters Type Name Description Object item Object to test. Returns Type Description Boolean True if the object exists. | Improve this Doc View Source CopyTo(T[]) Copies as much possible items into the given array. Order is from oldest to newest. If the target array is too small to contain Count items, the newest ones are copied (the oldest, the ones that will Pop() first, are skipped). Declaration public int CopyTo(T[] array) Parameters Type Name Description T[] array Array that will contain the items. Returns Type Description Int32 Number of items copied. | Improve this Doc View Source CopyTo(T[], Int32) Copies as much possible items into the given array. Order is from oldest to newest. If the target array is too small to contain Count items, the newest ones are copied (the oldest, the ones that will Pop() first, are skipped). Declaration public int CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array Array that will contain the items. Int32 arrayIndex Index in array where copy must start. Returns Type Description Int32 Number of items copied. | Improve this Doc View Source CopyTo(T[], Int32, Int32) Copies as much possible items into the given array. Order is from oldest to newest. If count is less than Count , the newest ones are copied (the oldest, the ones that will Pop() first, are skipped). Declaration public int CopyTo(T[] array, int arrayIndex, int count) Parameters Type Name Description T[] array Array that will contain the items. Int32 arrayIndex Index in array where copy must start. Int32 count Number of items to copy. Returns Type Description Int32 Number of items copied. | Improve this Doc View Source GetEnumerator() Gets the enumerator (from oldest to newest item). Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> An enumerator. | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Serialization. Declaration protected virtual void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization information. StreamingContext context Serialization context. | Improve this Doc View Source IndexOf(T) Gets the index of the given object. Declaration public int IndexOf(T item) Parameters Type Name Description T item Object to find. Returns Type Description Int32 The index of the object or the bitwise complement of Count if not found (that is a negative value, see IndexOf(Object) ). | Improve this Doc View Source IndexOf(Object) Gets the index of the given object. Declaration public int IndexOf(object item) Parameters Type Name Description Object item Object to find. Returns Type Description Int32 The index of the object or -1 if not found. | Improve this Doc View Source Peek() Gets the first item (the one that has been Push(T) ed first). Count must be greater than 0 otherwise an exception is thrown. Declaration public T Peek() Returns Type Description T The first (oldest) item. | Improve this Doc View Source PeekLast() Gets the last item (the last one that has been Push(T) ). Count must be greater than 0 otherwise an exception is thrown. Declaration public T PeekLast() Returns Type Description T The last (newest) item. | Improve this Doc View Source Pop() Gets and removes the first item (the one that has been Push(T) ed first). Count must be greater than 0 otherwise an exception is thrown. Declaration public T Pop() Returns Type Description T The first (oldest) item. | Improve this Doc View Source PopLast() Gets and removes the last item (the last one that has been Push(T) ed). Count must be greater than 0 otherwise an exception is thrown. Declaration public T PopLast() Returns Type Description T The last (newest) item. | Improve this Doc View Source Push(T) Adds an item. Declaration public void Push(T item) Parameters Type Name Description T item Item to push. | Improve this Doc View Source RemoveAt(Int32) Removes the element by index. Index 0 is the oldest item, the one returned by Peek() and Pop() . Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Index must be positive and less than Count . | Improve this Doc View Source IEnumerable.GetEnumerator() Non-generic version of GetEnumerator() . Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ToArray() Creates an array that contains Count items from oldest to newest. Declaration public T[] ToArray() Returns Type Description T[] An array with the contained items. Never null. | Improve this Doc View Source ToString() Overridden to display the current count of items and capacity for this buffer. Declaration public override string ToString() Returns Type Description String Current count and capacity. | Improve this Doc View Source Truncate(Int32) Truncates the queue: only the newCount newest items are kept. Pops as many old items (the ones that have been pushed first) in order for Count to be equal to newCount. Declaration public void Truncate(int newCount) Parameters Type Name Description Int32 newCount The final number of items. If it is greater or equal to the current Count , nothing is done."
  },
  "api/CK.Core.EnumerableExtension.html": {
    "href": "api/CK.Core.EnumerableExtension.html",
    "title": "Class EnumerableExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EnumerableExtension Provides extension methods for System.Collections.Generic.IEnumerable`1 . Inheritance Object EnumerableExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class EnumerableExtension Methods | Improve this Doc View Source Append<TSource>(IEnumerable<TSource>, TSource) Creates an System.Collections.Generic.IEnumerable`1 that appends one item to an existing enumerable. Declaration public static IEnumerable<TSource> Append<TSource>(IEnumerable<TSource> this, TSource item) Parameters Type Name Description IEnumerable <TSource> this Source sequence. TSource item Item to append. Returns Type Description IEnumerable <TSource> An enumerable that appends the item to trhe sequence. Type Parameters Name Description TSource Type of source sequence. | Improve this Doc View Source IndexOf<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) Gets the first index in the enumerable where the predicate evaluates to true. Returns -1 when not found. Declaration public static int IndexOf<TSource>(IEnumerable<TSource> this, Func<TSource, bool> predicate) Parameters Type Name Description IEnumerable <TSource> this Source sequence. Func <TSource, Boolean > predicate Predicate function. Returns Type Description Int32 Index where predicate is true. -1 if not found. Type Parameters Name Description TSource Type of source sequence. | Improve this Doc View Source IndexOf<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) Gets the first index in the enumerable where the predicate evaluates to true, the index of the element is available to the predicate. Returns -1 when not found. Declaration public static int IndexOf<TSource>(IEnumerable<TSource> this, Func<TSource, int, bool> predicate) Parameters Type Name Description IEnumerable <TSource> this Source sequence. Func <TSource, Int32 , Boolean > predicate Predicate function that accepts the element and its index. Returns Type Description Int32 Index where predicate is true, or -1 if not found. Type Parameters Name Description TSource Type of source sequence. | Improve this Doc View Source IsSortedLarge<T>(IEnumerable<T>) Checks whether the enumerable is in large (duplicates allowed) ascending order (uses the System.Collections.Generic.Comparer`1.Default Compare method). Declaration public static bool IsSortedLarge<T>(IEnumerable<T> this) Parameters Type Name Description IEnumerable <T> this This enumerable. Returns Type Description Boolean True if the enumerable is empty or is in large ascending order. Type Parameters Name Description T Element type of the enumerable. | Improve this Doc View Source IsSortedLarge<T>(IEnumerable<T>, Comparison<T>) Checks whether the enumerable is in large (duplicates allowed) ascending order based on a comparison function. Declaration public static bool IsSortedLarge<T>(IEnumerable<T> this, Comparison<T> comparison) Parameters Type Name Description IEnumerable <T> this This enumerable. Comparison <T> comparison The delegate used to compare elements. Returns Type Description Boolean True if the enumerable is empty or is in large ascending order. Type Parameters Name Description T Element type of the enumerable. | Improve this Doc View Source IsSortedStrict<T>(IEnumerable<T>) Checks whether the enumerable is in strict (no duplicates) ascending order (uses the System.Collections.Generic.Comparer`1.Default Compare method). Declaration public static bool IsSortedStrict<T>(IEnumerable<T> this) Parameters Type Name Description IEnumerable <T> this This enumerable. Returns Type Description Boolean True if the enumerable is empty or is in strict ascending order. Type Parameters Name Description T Element type of the enumerable. | Improve this Doc View Source IsSortedStrict<T>(IEnumerable<T>, Comparison<T>) Checks whether the enumerable is in strict (no duplicates) ascending order based on a comparison function. Declaration public static bool IsSortedStrict<T>(IEnumerable<T> this, Comparison<T> comparison) Parameters Type Name Description IEnumerable <T> this This enumerable. Comparison <T> comparison The delegate used to compare elements. Returns Type Description Boolean True if the enumerable is empty or is in strict ascending order. Type Parameters Name Description T Element type of the enumerable. | Improve this Doc View Source MaxBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) Returns the maximal element of the given sequence based on a projection of comparable keys. The sequence MUST NOT be empty otherwise an System.InvalidOperationException is thrown. Remarks If more than one element has the maximal projected value, the first one encountered will be returned. This operator uses immediate execution, but only buffers a single result (the current maximal element). Declaration public static TSource MaxBy<TSource, TKey>(IEnumerable<TSource> this, Func<TSource, TKey> selector)where TKey : IComparable<TKey> Parameters Type Name Description IEnumerable <TSource> this Source sequence. Func <TSource, TKey> selector Selector to use to pick the results to compare Returns Type Description TSource The maximal element, according to the projection. Type Parameters Name Description TSource Type of the source sequence. TKey Type of the projected element. Must be System.IComparable`1 . Exceptions Type Condition System.ArgumentNullException this or selector is null InvalidOperationException this is empty | Improve this Doc View Source MaxBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, Comparison<TKey>) Returns the maximal element of the given sequence based on a projection and a System.Comparison`1 (that defaults to Comparer .Default.Compare . The sequence MUST NOT be empty otherwise an System.InvalidOperationException is thrown. Remarks If more than one element has the maximal projected value, the first one encountered will be returned. This operator uses immediate execution, but only buffers a single result (the current maximal element). Declaration public static TSource MaxBy<TSource, TKey>(IEnumerable<TSource> this, Func<TSource, TKey> selector, Comparison<TKey> comparison = null) Parameters Type Name Description IEnumerable <TSource> this Source sequence. Func <TSource, TKey> selector Selector to use to pick the results to compare. Comparison <TKey> comparison Comparison function to use to compare projected values. When null, Comparer .Default.Compare is used. Returns Type Description TSource The maximal element, according to the projection. Type Parameters Name Description TSource Type of the source sequence. TKey Type of the projected element. Exceptions Type Condition System.ArgumentNullException this or selector is null InvalidOperationException this is empty"
  },
  "api/CK.Core.DictionaryExtension.html": {
    "href": "api/CK.Core.DictionaryExtension.html",
    "title": "Class DictionaryExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DictionaryExtension Provides extension methods for System.Collections.Generic.IDictionary`2 . Inheritance Object DictionaryExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class DictionaryExtension Methods | Improve this Doc View Source AddRange<TKey, TValue>(IDictionary<TKey, TValue>, IEnumerable<KeyValuePair<TKey, TValue>>) Adds the content of a dictionary to this System.Collections.Generic.IDictionary`2 . Declaration public static void AddRange<TKey, TValue>(IDictionary<TKey, TValue> this, IEnumerable<KeyValuePair<TKey, TValue>> source) Parameters Type Name Description IDictionary <TKey, TValue> this This generic IDictionary. IEnumerable < KeyValuePair <TKey, TValue>> source The System.Collections.Generic.IEnumerable`1 of System.Collections.Generic.KeyValuePair`2 from which content will be copied. Type Parameters Name Description TKey The type of keys in the dictionary. TValue The type of values in the dictionary. | Improve this Doc View Source GetOrSet<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) Gets the value associated with the specified key if it exists otherwise calls the createValue function and adds the newly obtained value into the dictionary. Declaration public static TValue GetOrSet<TKey, TValue>(IDictionary<TKey, TValue> this, TKey key, Func<TKey, TValue> createValue) Parameters Type Name Description IDictionary <TKey, TValue> this This generic IDictionary. TKey key The key whose value to get. Func <TKey, TValue> createValue A delegate that will be called if the key does not exist. Returns Type Description TValue The value associated with the specified key, if the key is found; otherwise, the result of the createValue delegate (this result has been added to the dictionary). Type Parameters Name Description TKey TValue | Improve this Doc View Source GetValueWithDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue) Gets the value associated with the specified key if it exists otherwise returns the defaultValue . Declaration public static TValue GetValueWithDefault<TKey, TValue>(IDictionary<TKey, TValue> this, TKey key, TValue defaultValue) Parameters Type Name Description IDictionary <TKey, TValue> this This generic IDictionary. TKey key The key whose value to get. TValue defaultValue Default value to use if the key does not exist. Returns Type Description TValue The value associated with the specified key, if the key is found; otherwise, the defaultValue . Type Parameters Name Description TKey TValue | Improve this Doc View Source GetValueWithDefaultFunc<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) Gets the value associated with the specified key if it exists otherwise calls the defaultValue function. Declaration public static TValue GetValueWithDefaultFunc<TKey, TValue>(IDictionary<TKey, TValue> this, TKey key, Func<TKey, TValue> defaultValue) Parameters Type Name Description IDictionary <TKey, TValue> this This generic IDictionary. TKey key The key whose value to get. Func <TKey, TValue> defaultValue A delegate that will be called if the key does not exist. Returns Type Description TValue The value associated with the specified key, if the key is found; otherwise, the result of the defaultValue delegate. Type Parameters Name Description TKey TValue"
  },
  "api/CK.Core.DateTimeStampExtension.html": {
    "href": "api/CK.Core.DateTimeStampExtension.html",
    "title": "Class DateTimeStampExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DateTimeStampExtension Exposes extension methods on DateTimeStamp . Inheritance Object DateTimeStampExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class DateTimeStampExtension Methods | Improve this Doc View Source MatchDateTimeStamp(StringMatcher, out DateTimeStamp) Matches a DateTimeStamp . Declaration public static bool MatchDateTimeStamp(StringMatcher this, out DateTimeStamp time) Parameters Type Name Description StringMatcher this This StringMatcher . DateTimeStamp time Resulting time stamp on successful match; Unknown otherwise. Returns Type Description Boolean True if the time stamp has been matched."
  },
  "api/CK.Core.DateTimeStamp.html": {
    "href": "api/CK.Core.DateTimeStamp.html",
    "title": "Struct DateTimeStamp | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct DateTimeStamp A date and time stamp encapsulates a TimeUtc ( System.DateTime guaranteed to be in Utc) and a Uniquifier . Namespace :CK.Core Assembly :CK.Core.dll Syntax [Serializable] public struct DateTimeStamp : IComparable<DateTimeStamp>, IEquatable<DateTimeStamp> Constructors | Improve this Doc View Source DateTimeStamp(DateTimeStamp, DateTimeStamp) Initializes a new DateTimeStamp that is that is guaranteed to be unique and ascending regarding lastOne . Remarks The Uniquifier is optimized if possible (this simply calls CK.Core.DateTimeStamp. with ensureGreaterThanLastOne sets to true). Declaration public DateTimeStamp(DateTimeStamp lastOne, DateTimeStamp newTime) Parameters Type Name Description DateTimeStamp lastOne Last time stamp. DateTimeStamp newTime DateTimeStamp to combine. | Improve this Doc View Source DateTimeStamp(DateTimeStamp, DateTime, Boolean) Initializes a new DateTimeStamp that is that is guaranteed to be unique and ascending (unless ensureGreaterThanLastOne is false) regarding lastOne . Declaration public DateTimeStamp(DateTimeStamp lastOne, DateTime time, bool ensureGreaterThanLastOne = true) Parameters Type Name Description DateTimeStamp lastOne Last time stamp. DateTime time Time (generally current System.DateTime.UtcNow ). Boolean ensureGreaterThanLastOne False to only check for time equality collision instead of guarantying ascending log time. | Improve this Doc View Source DateTimeStamp(DateTime, Byte) Initializes a new DateTimeStamp . Declaration public DateTimeStamp(DateTime timeUtc, byte uniquifier = 0) Parameters Type Name Description DateTime timeUtc The log time. System.DateTime.Kind must be System.DateTimeKind.Utc . Byte uniquifier Optional non zero uniquifier. Fields | Improve this Doc View Source FormatWhenUniquifier @\"{0:yyyy-MM-dd HH\\hmm.ss.fffffff}({1})\" is the format that will be used to format log time when the Uniquifier is not zero. It is based on FileNameUniqueTimeUtcFormat (that is used as-is when the Uniquifier is zero) for the date time format. Declaration public static readonly string FormatWhenUniquifier Field Value Type Description String | Improve this Doc View Source Invalid Represents an invalid DateTimeStamp object. See IsInvalid . Declaration public static readonly DateTimeStamp Invalid Field Value Type Description DateTimeStamp | Improve this Doc View Source MaxValue Represents the largest possible value for a DateTimeStamp object. Declaration public static readonly DateTimeStamp MaxValue Field Value Type Description DateTimeStamp | Improve this Doc View Source MinValue Represents the smallest possible value for a DateTimeStamp object. Declaration public static readonly DateTimeStamp MinValue Field Value Type Description DateTimeStamp | Improve this Doc View Source TimeUtc DateTime in Utc. Declaration public readonly DateTime TimeUtc Field Value Type Description DateTime | Improve this Doc View Source Uniquifier Uniquifier: non zero when TimeUtc collides. Declaration public readonly byte Uniquifier Field Value Type Description Byte | Improve this Doc View Source Unknown Represents an unknown, default, DateTimeStamp object. This is available to have a more expressive code than new DateTimeStamp() . Declaration public static readonly DateTimeStamp Unknown Field Value Type Description DateTimeStamp Properties | Improve this Doc View Source IsInvalid Gets whether this DateTimeStamp is the Invalid one. TimeUtc has a System.DateTime.Kind set to System.DateTimeKind.Local . Declaration public bool IsInvalid { get; } Property Value Type Description Boolean | Improve this Doc View Source IsKnown Gets whether this DateTimeStamp is initialized. The default constructor of a structure can not be defined and it initializes the TimeUtc with a zero that is System.DateTime.MinValue with a System.DateTime.Kind set to System.DateTimeKind.Unspecified . Declaration public bool IsKnown { get; } Property Value Type Description Boolean | Improve this Doc View Source UtcNow Gets the current System.DateTime.UtcNow as a DateTimeStamp. Declaration public static DateTimeStamp UtcNow { get; } Property Value Type Description DateTimeStamp Methods | Improve this Doc View Source CompareTo(DateTimeStamp) Compares this DateTimeStamp to another one. Declaration public int CompareTo(DateTimeStamp other) Parameters Type Name Description DateTimeStamp other The other DateTimeStamp to compare. Returns Type Description Int32 Positive value when this is greater than other, 0 when they are equal, a negative value otherwise. | Improve this Doc View Source CompareTo(Object) Compares this DateTimeStamp to another object that must also be a stamp. Declaration public int CompareTo(object value) Parameters Type Name Description Object value The object to compare. Returns Type Description Int32 Positive value when this is greater than other, 0 when they are equal, a negative value otherwise. | Improve this Doc View Source Equals(DateTimeStamp) Checks equality. Declaration public bool Equals(DateTimeStamp other) Parameters Type Name Description DateTimeStamp other Other DateTimeStamp. Returns Type Description Boolean True when this is equal to other. | Improve this Doc View Source Equals(Object) Overridden to check equality. Declaration public override bool Equals(object other) Parameters Type Name Description Object other Other object. Returns Type Description Boolean True when this is equal to other. | Improve this Doc View Source GetHashCode() Overridden to match Equals(DateTimeStamp) . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code. | Improve this Doc View Source ToString() Overridden to return a string based on FormatWhenUniquifier or FileNameUniqueTimeUtcFormat . Declaration public override string ToString() Returns Type Description String A string that can be successfully matched. Operators | Improve this Doc View Source Equality(DateTimeStamp, DateTimeStamp) Checks equality. Declaration public static bool operator ==(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps are equals. | Improve this Doc View Source GreaterThan(DateTimeStamp, DateTimeStamp) Strict greater than operator. Declaration public static bool operator>(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps first is greater than second. | Improve this Doc View Source GreaterThanOrEqual(DateTimeStamp, DateTimeStamp) Large greater than operator. Declaration public static bool operator >=(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps first is greater than or equal to second. | Improve this Doc View Source Inequality(DateTimeStamp, DateTimeStamp) Checks inequality. Declaration public static bool operator !=(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps are different. | Improve this Doc View Source LessThan(DateTimeStamp, DateTimeStamp) Strict lower than operator. Declaration public static bool operator <(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps first is lower than second. | Improve this Doc View Source LessThanOrEqual(DateTimeStamp, DateTimeStamp) Large lower than operator. Declaration public static bool operator <=(DateTimeStamp t1, DateTimeStamp t2) Parameters Type Name Description DateTimeStamp t1 First stamp. DateTimeStamp t2 Second stamp. Returns Type Description Boolean True when stamps first is lower than or equal to second."
  },
  "api/CK.Core.CriticalErrorCollector.html": {
    "href": "api/CK.Core.CriticalErrorCollector.html",
    "title": "Class CriticalErrorCollector | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CriticalErrorCollector This collector keeps Capacity CriticalErrorCollector.Error s (and no more). It raises OnErrorFromBackgroundThreads event on each Add(Exception, String) . It is totally thread-safe and guaranties (as long as its Capacity is big enough) that no error can be lost (even errors raised while dispatching the event are themselves collected) and that errors are dispatched in sequence. This class is typically used as a static property or field by any object that must handle unexpected errors. (It can also be used per-instance if it makes sense.) Inheritance Object CriticalErrorCollector Namespace :CK.Core Assembly :CK.Core.dll Syntax public class CriticalErrorCollector Constructors | Improve this Doc View Source CriticalErrorCollector() Initializes a new CriticalErrorCollector with a default Capacity set to 128. Declaration public CriticalErrorCollector() Properties | Improve this Doc View Source Capacity Gets or sets the maximal number of errors kept by this collector. Defaults to 128 (which should be enough). It can be safely changed at any time. Declaration public int Capacity { get; set; } Property Value Type Description Int32 | Improve this Doc View Source DispatchQueuedWorkItemCount Gets the number of internally created queued work items since this collector exists. Declaration public int DispatchQueuedWorkItemCount { get; } Property Value Type Description Int32 | Improve this Doc View Source NextSequenceNumber Gets the next SequenceNumber . Getting this property makes sense only if this collector is not being solicited. Declaration public int NextSequenceNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source OnErrorFromBackgroundThreadsPending Gets whether any event is waiting to be raised by OnErrorFromBackgroundThreads or is being processed. When this is false, it is guaranteed that any existing errors have been handled: if no more Add(Exception, String) can be done it means that this collector has finished its job. Instead of pooling this property - with an horrible Thread.Sleep( 1 ), you should use WaitOnErrorFromBackgroundThreadsPending() to more efficiently and securely wait for the end of this collector's job. Declaration public bool OnErrorFromBackgroundThreadsPending { get; } Property Value Type Description Boolean | Improve this Doc View Source OptimizedDispatchQueuedWorkItemCount Gets the number of work items that have been saved since another one was ready to dispatch the events. This is a measure of an internal optimization that makes sense only under heavy loads (unit tests). Declaration public int OptimizedDispatchQueuedWorkItemCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Exception, String) Adds a critical, unexpected error. Declaration public void Add(Exception ex, string comment) Parameters Type Name Description Exception ex The unexpected exception. Must not be null. String comment Comment associated to the error (such as the name of the culprit). Can be null. | Improve this Doc View Source Clear() Clears the list. Only errors that have been already raised by OnErrorFromBackgroundThreads are removed from the internal buffer: it can be safely called at any time. Declaration public void Clear() | Improve this Doc View Source Clear(out Int32, out Int32) Clears the list. Only errors that have been already raised by OnErrorFromBackgroundThreads are removed from the internal buffer: it can be safely called at any time. Declaration public void Clear(out int cleared, out int waitingToBeRaisedErrors) Parameters Type Name Description Int32 cleared Number of suppressed errors. Int32 waitingToBeRaisedErrors The number of errors waiting to be raised. | Improve this Doc View Source ToArray() Obtains a copy of the last (up to) Capacity errors from oldest to newest. The newest may have not been raised by OnErrorFromBackgroundThreads yet. Declaration public CriticalErrorCollector.Error[] ToArray() Returns Type Description CriticalErrorCollector.Error [] An independent array. May be empty but never null. | Improve this Doc View Source WaitOnErrorFromBackgroundThreadsPending() Blocks the caller thread until no more event is waiting to be raised by OnErrorFromBackgroundThreads or is being processed. This is the right function to use instead of pooling OnErrorFromBackgroundThreadsPending . Declaration public void WaitOnErrorFromBackgroundThreadsPending() Events | Improve this Doc View Source OnErrorFromBackgroundThreads Fires when an error has been Add(Exception, String) ed (there cannot be more than one thread that raises this event at the same time). Raising this event is itself protected: if an exception is raised by one of the registered EventHandler, the culprit is removed from the OnErrorFromBackgroundThreads list of delegates, the exception is appended in the collector, and a new event will be raised (to the remaining handlers). Caution: the event always fire on a background thread (adding an error is not a blocking operation). Declaration public event EventHandler<CriticalErrorCollector.ErrorEventArgs> OnErrorFromBackgroundThreads Event Type Type Description EventHandler < CriticalErrorCollector.ErrorEventArgs >"
  },
  "api/CK.Core.CriticalErrorCollector.ErrorEventArgs.html": {
    "href": "api/CK.Core.CriticalErrorCollector.ErrorEventArgs.html",
    "title": "Class CriticalErrorCollector.ErrorEventArgs | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CriticalErrorCollector.ErrorEventArgs Event argument of OnErrorFromBackgroundThreads . Inheritance Object EventArgs CriticalErrorCollector.ErrorEventArgs Namespace :CK.Core Assembly :CK.Core.dll Syntax public class ErrorEventArgs : EventArgs Fields | Improve this Doc View Source LoggingErrors The CriticalErrorCollector.Error s. When more than one error exist, the oldest come first. Declaration public readonly IReadOnlyList<CriticalErrorCollector.Error> LoggingErrors Field Value Type Description IReadOnlyList < CriticalErrorCollector.Error >"
  },
  "api/CK.Core.CriticalErrorCollector.Error.html": {
    "href": "api/CK.Core.CriticalErrorCollector.Error.html",
    "title": "Struct CriticalErrorCollector.Error | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct CriticalErrorCollector.Error Encapsulates error information Add(Exception, String) ed by external code or raised by a OnErrorFromBackgroundThreads event itself. Namespace :CK.Core Assembly :CK.Core.dll Syntax public struct Error Fields | Improve this Doc View Source Comment The origin or a description of the Exception . Never null but can be empty if no comment is provided while calling Add(Exception, String) . Declaration public readonly string Comment Field Value Type Description String | Improve this Doc View Source Exception The exception. Declaration public readonly Exception Exception Field Value Type Description Exception | Improve this Doc View Source LostErrorCount Holds the count of errors that have been discarded: too many critical errors occur in a too short time. When this field is greater than zero, this indicates a serious problem. Declaration public readonly int LostErrorCount Field Value Type Description Int32 | Improve this Doc View Source SequenceNumber Unique, increasing, sequence number. Declaration public readonly int SequenceNumber Field Value Type Description Int32 Methods | Improve this Doc View Source ToString() Overridden to return Comment and Exception message. Declaration public override string ToString() Returns Type Description String Explicit content."
  },
  "api/CK.Core.CollectionExtension.html": {
    "href": "api/CK.Core.CollectionExtension.html",
    "title": "Class CollectionExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CollectionExtension Provides extension methods for collection & list interfaces. Inheritance Object CollectionExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class CollectionExtension Fields | Improve this Doc View Source CountChangedEventArgs Immutable reusable PropertyChangedEventArgs for \"Count\". Declaration public static readonly PropertyChangedEventArgs CountChangedEventArgs Field Value Type Description PropertyChangedEventArgs | Improve this Doc View Source ItemArrayChangedEventArgs Immutable reusable PropertyChangedEventArgs for \"Item[]\". Declaration public static readonly PropertyChangedEventArgs ItemArrayChangedEventArgs Field Value Type Description PropertyChangedEventArgs Methods | Improve this Doc View Source AddRange<T>(ICollection<T>, IEnumerable<T>) Adds multiple items to a collection. Declaration public static void AddRange<T>(ICollection<T> this, IEnumerable<T> items) Parameters Type Name Description ICollection <T> this This collection. IEnumerable <T> items Multiple items to add. Can not be null. Type Parameters Name Description T Collection items' type. | Improve this Doc View Source AddRangeArray<T>(ICollection<T>, T[]) Adds multiple items to a collection. Declaration public static void AddRangeArray<T>(ICollection<T> this, params T[] items) Parameters Type Name Description ICollection <T> this This collection. T[] items Items to add. Type Parameters Name Description T Collection items' type. | Improve this Doc View Source AsReadOnlyCollection<T>(ICollection<T>) Returns this collection if the implementation supports System.Collections.Generic.IReadOnlyCollection`1 or a CKReadOnlyCollectionOnICollection<T> adapter instance. Declaration public static IReadOnlyCollection<T> AsReadOnlyCollection<T>(ICollection<T> this) Parameters Type Name Description ICollection <T> this This collection. Returns Type Description IReadOnlyCollection <T> This collection or an adapter. Type Parameters Name Description T The type of the collection items. | Improve this Doc View Source RemoveWhereAndReturnsRemoved<T>(IList<T>, Func<T, Boolean>) Simple helper that removes elements in a System.Collections.Generic.IList`1 and returns them as an System.Collections.Generic.IEnumerable`1 . Makes the transfer of items from one list to another easy when combined with AddRange<T>(ICollection<T>, IEnumerable<T>) . The returned enumerable MUST be consumed to actually remove the items from the list (this is what AddRange do). Calling System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}) for instance resolves the enumeration. Declaration public static IEnumerable<T> RemoveWhereAndReturnsRemoved<T>(IList<T> this, Func<T, bool> removeCondition) Parameters Type Name Description IList <T> this This list. Func <T, Boolean > removeCondition Predicate that must return true for items that must be removed from this list. Returns Type Description IEnumerable <T> Removed items (can be added into another one). Type Parameters Name Description T The type of the elements in the list."
  },
  "api/CK.Core.CKTraitContext.html": {
    "href": "api/CK.Core.CKTraitContext.html",
    "title": "Class CKTraitContext | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKTraitContext Thread-safe registration root for CKTrait objects. Inheritance Object CKTraitContext Namespace :CK.Core Assembly :CK.Core.dll Syntax public sealed class CKTraitContext : IComparable<CKTraitContext> Constructors | Improve this Doc View Source CKTraitContext(String, Char) Initializes a new context for traits with the given separator. Declaration public CKTraitContext(string name, char separator = '|') Parameters Type Name Description String name Name for the context. Must not be null nor whitespace. Char separator Separator if it must differ from '|'. Properties | Improve this Doc View Source EmptyTrait Gets the empty trait for this context. It corresponds to the empty string. Declaration public CKTrait EmptyTrait { get; } Property Value Type Description CKTrait | Improve this Doc View Source Name Gets the name of this context. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Separator Gets the separator to use to separate combined traits. It is | by default. Declaration public char Separator { get; } Property Value Type Description Char Methods | Improve this Doc View Source CompareTo(CKTraitContext) Compares this context to another one. The key is Separator , then Name and if they are equal, a unique number is used to order the two contexts. Declaration public int CompareTo(CKTraitContext other) Parameters Type Name Description CKTraitContext other Context to compare. Returns Type Description Int32 0 for the exact same object (ReferenceEquals), greater/lower than 0 otherwise. | Improve this Doc View Source FindIfAllExist(String) Finds a CKTrait (either combined or atomic) only if all of its atomic traits already exists: if any of the atomic traits are not already registered, null is returned. Declaration public CKTrait FindIfAllExist(string traits) Parameters Type Name Description String traits Atomic trait or traits separated by Separator . Returns Type Description CKTrait A trait or null if the trait does not exists. | Improve this Doc View Source FindOnlyExisting(String, Func<String, Boolean>) Finds a CKTrait with only already existing atomic traits (null when not found). Declaration public CKTrait FindOnlyExisting(string traits, Func<string, bool> collector = null) Parameters Type Name Description String traits Atomic trait or traits separated by Separator . Func < String , Boolean > collector Optional collector for unknown trait. As soon as the collector returns false, the process stops. Returns Type Description CKTrait A trait that contains only already existing trait or null if none already exists. | Improve this Doc View Source FindOrCreate(String) Obtains a CKTrait (either combined or atomic). Declaration public CKTrait FindOrCreate(string traits) Parameters Type Name Description String traits Atomic trait or traits separated by Separator . Returns Type Description CKTrait A trait."
  },
  "api/CK.Core.CKTrait.html": {
    "href": "api/CK.Core.CKTrait.html",
    "title": "Class CKTrait | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKTrait A trait is an immutable object (thread-safe), associated to a unique string inside a Context , that can be atomic (\"Alt\", \"Home\", \"Ctrl\") or combined (\"Alt|Ctrl\", \"Alt|Ctrl|Home\"). The only way to obtain a CKTrait is to call FindOrCreate(String) (from a string) or to use one of the available combination methods ( Union(CKTrait) , Except(CKTrait) , SymmetricExcept(CKTrait) or Intersect(CKTrait) ). Inheritance Object CKTrait Namespace :CK.Core Assembly :CK.Core.dll Syntax public sealed class CKTrait : IComparable<CKTrait>, IEquatable<CKTrait> Remarks A CKTrait is not serializable: since it is relative to CKTraitContext , it must be recreated in the right context. A CKTraitContext is typically a static object that exists in the origin application domain. A CKTrait must be serialized as its ToString() representation and it is up to the code to call FindOrCreate(String) on the appropriate context when deserializing it. Properties | Improve this Doc View Source AtomicTraits Gets the atomic traits that this trait contains. This list does not contain the empty trait and is sorted according to the name of the atomic traits (lexical order): this is the same as the ToString() representation. Note that it is in reverse order regarding CompareTo(CKTrait) (\"A\" that is stronger than \"B\" appears before \"B\"). Declaration public IReadOnlyList<CKTrait> AtomicTraits { get; } Property Value Type Description IReadOnlyList < CKTrait > | Improve this Doc View Source Context Gets the CKTraitContext to which this trait belongs. Declaration public CKTraitContext Context { get; } Property Value Type Description CKTraitContext | Improve this Doc View Source Fallbacks Gets an enumeration of fallbacks to consider for this trait ordered from best to worst. This trait does not start the list but the EmptyTrait always ends this list. Remarks For atomic traits (and the empty trait itself), Fallbacks contains only the EmptyTrait . Declaration public IEnumerable<CKTrait> Fallbacks { get; } Property Value Type Description IEnumerable < CKTrait > | Improve this Doc View Source FallbacksCount Gets the number of Fallbacks . It is 2^ AtomicTraits . System.Collections.Generic.IReadOnlyCollection`1.Count - 1 since this trait itself does not appear in the fallbacks, but it is always 1 for atomic and the empty trait (the empty trait always ends the list). Declaration public int FallbacksCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FallbacksLongCount Gets the number of Fallbacks . It is 2^ AtomicTraits . System.Collections.Generic.IReadOnlyCollection`1.Count - 1 since this trait itself does not appear in the fallbacks, but it is always 1 for atomic and the empty trait (the empty trait always ends the list). Declaration public long FallbacksLongCount { get; } Property Value Type Description Int64 | Improve this Doc View Source IsAtomic Gets a boolean indicating whether this trait contains zero (the empty trait is considered as an atomic trait) or only one atomic trait. Remarks For atomic traits (and the empty trait itself), Fallbacks contains only the EmptyTrait . Declaration public bool IsAtomic { get; } Property Value Type Description Boolean | Improve this Doc View Source IsEmpty Gets a boolean indicating whether this trait is the empty trait ( AtomicTraits is empty and Fallbacks contains only itself). Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Apply(CKTrait, SetOperation) Applies the given SetOperation . Declaration public CKTrait Apply(CKTrait other, SetOperation operation) Parameters Type Name Description CKTrait other Trait to combine. SetOperation operation Set operation. Returns Type Description CKTrait Resulting trait. | Improve this Doc View Source CompareTo(CKTrait) Compares this trait with another one. The Context is the primary key (see CompareTo(CKTraitContext) ), then comes the number of traits (more traits is greater) and then comes the string representation of the trait in reverse lexical order ( System.StringComparer.Ordinal ): \"A\" is greater than \"B\". Declaration public int CompareTo(CKTrait other) Parameters Type Name Description CKTrait other The trait to compare to. Returns Type Description Int32 A negative, zero or positive value. | Improve this Doc View Source Equals(CKTrait) Checks equality of this trait with another one. Declaration public bool Equals(CKTrait other) Parameters Type Name Description CKTrait other The trait to compare to. Returns Type Description Boolean True on equality. | Improve this Doc View Source Except(CKTrait) Obtains a CKTrait from which trait(s) specified by the parameter are removed. Declaration public CKTrait Except(CKTrait other) Parameters Type Name Description CKTrait other Trait to remove. Returns Type Description CKTrait The resulting trait. | Improve this Doc View Source Intersect(CKTrait) Obtains a CKTrait that contains the atomic traits from both this trait and other . Declaration public CKTrait Intersect(CKTrait other) Parameters Type Name Description CKTrait other Trait that must be kept. Returns Type Description CKTrait The resulting trait. | Improve this Doc View Source IsSupersetOf(CKTrait) Checks if each and every atomic traits of other exists in this trait. Remarks Note that EmptyTrait is contained (in the sense of this IsSupersetOf method) by definition in any trait (including itself): this is the opposite of the Overlaps(CKTrait) method. Declaration public bool IsSupersetOf(CKTrait other) Parameters Type Name Description CKTrait other The trait(s) to find. Returns Type Description Boolean True if all the specified traits appear in this trait. | Improve this Doc View Source Overlaps(CKTrait) Checks if one of the atomic traits of other exists in this trait. Remarks When true, this ensures that Intersect(CKTrait) ( other ) != EmptyTrait . The empty trait is not contained (in the sense of this ContainsOne method) in any trait (including itself). This is the opposite of the IsSupersetOf(CKTrait) method. Declaration public bool Overlaps(CKTrait other) Parameters Type Name Description CKTrait other The trait to find. Returns Type Description Boolean Returns true if one of the specified traits appears in this trait. | Improve this Doc View Source SymmetricExcept(CKTrait) Obtains a CKTrait where the atomic traits of other are removed (resp. added) depending on whether they exist (resp. do not exist) in this trait. This is like an Exclusive Or (XOR). Declaration public CKTrait SymmetricExcept(CKTrait other) Parameters Type Name Description CKTrait other Trait to toggle. Returns Type Description CKTrait The resulting trait. | Improve this Doc View Source ToString() Gets the multi traits in an ordered manner separated by +. Declaration public override string ToString() Returns Type Description String This multi trait as a string. | Improve this Doc View Source Union(CKTrait) Obtains a CKTrait that combines this one and the trait(s) specified by the parameter. Declaration public CKTrait Union(CKTrait other) Parameters Type Name Description CKTrait other Trait to add. Returns Type Description CKTrait The resulting trait."
  },
  "api/CK.Core.CKSortedArrayList`1.html": {
    "href": "api/CK.Core.CKSortedArrayList`1.html",
    "title": "Class CKSortedArrayList<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKSortedArrayList<T> Simple sorted array list implementation that supports covariance through ICKReadOnlyList<T> and contra-variance with ICKWritableCollection<T> . This is a \"dangerous\" class since to keep the correct ordering, CheckPosition(Int32) must be explicitly called whenever something changes on any item that impacts the Comparator result. See the remarks for other caveats. Inheritance Object CKSortedArrayList<T> Namespace :CK.Core Assembly :CK.Core.dll Syntax [DebuggerTypeProxy(typeof (ReadOnlyCollectionDebuggerView<>))] [DebuggerDisplay(\"Count = {Count}\")] public class CKSortedArrayList<T> : IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, ICKWritableCollection<T>, ICKWritableCollector<T> Type Parameters Name Description T Remarks This class implements System.Collections.Generic.IList`1 both for performance (unfortunately Linq relies -too much- on it) and for interoperability reasons: this interface should NOT be used. Accessors of the System.Collections.Generic.IList`1 that defeats the invariant of this class (the fact that elements are sorted, such as System.Collections.Generic.IList`1.Insert(System.Int32,`0) ) are explicitly implemented to hide them as much as possible. This is the base class for CKSortedArrayKeyList<T, TKey> . Specialized classes may use protected Store , StoreCount and StoreVersion to have a direct, uncontrolled, access to the whole state of this object. Constructors | Improve this Doc View Source CKSortedArrayList() Initializes a new CKSortedArrayList<T> that rejects duplicates and uses the System.Collections.Generic.Comparer`1.Default comparer. Remarks A default constructor is a parameterless constructor, it is not the same as a constructor with default parameter values. This is why it is explicitly defined. Declaration public CKSortedArrayList() | Improve this Doc View Source CKSortedArrayList(Boolean) Initializes a new CKSortedArrayList<T> that rejects or allows duplicates and uses the System.Collections.Generic.Comparer`1.Default comparer. Declaration public CKSortedArrayList(bool allowDuplicates) Parameters Type Name Description Boolean allowDuplicates True to allow duplicate elements. | Improve this Doc View Source CKSortedArrayList(IComparer<T>, Boolean) Initializes a new CKSortedArrayList<T> that rejects or allows duplicates and uses the given comparer. Declaration public CKSortedArrayList(IComparer<T> comparer, bool allowDuplicates = false) Parameters Type Name Description IComparer <T> comparer Comparer to use. Boolean allowDuplicates True to allow duplicate elements. | Improve this Doc View Source CKSortedArrayList(Comparison<T>, Boolean) Initializes a new CKSortedArrayList<T> that rejects or allows duplicates and uses the given comparison function. Declaration public CKSortedArrayList(Comparison<T> comparison, bool allowDuplicates = false) Parameters Type Name Description Comparison <T> comparison Comparison function to use. Boolean allowDuplicates True to allow duplicate elements. Fields | Improve this Doc View Source Comparator Specialized implementation can use this comparison function if needed. Declaration protected readonly Comparison<T> Comparator Field Value Type Description Comparison <T> Properties | Improve this Doc View Source AllowDuplicates Gets whether this list allows duplicated items. Declaration public bool AllowDuplicates { get; } Property Value Type Description Boolean | Improve this Doc View Source Capacity Gets or sets the current capacity of the internal array. When setting it, if the new capacity is less than the current Count , an System.ArgumentException is thrown. Declaration public int Capacity { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Count Gets the number of elements in this sorted list. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Gets the object at the given index. Declaration [SuppressMessage(\"Microsoft.Design\", \"CA1065:DoNotRaiseExceptionsInUnexpectedLocations\", Justification = \"This is a the right location to raise this exception!\")] public T this[int index] { get; } Parameters Type Name Description Int32 index Zero based position of the item in this list. Property Value Type Description T The item. | Improve this Doc View Source Store Direct access to the internal array to specialized classes. This must be used with care. Declaration protected T[] Store { get; set; } Property Value Type Description T[] | Improve this Doc View Source StoreCount Direct access to the Count to specialized classes. This must be used with care. Declaration protected int StoreCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source StoreVersion Direct access to the internal version to specialized classes. LSB (StoreVersion & 1) is AllowDuplicates : the version is incremented by two whenever the content change. This must be used with care. Declaration protected int StoreVersion { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ICollection<T>.IsReadOnly Explicit implementation that always returns false. Declaration bool ICollection<T>.IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source IList<T>.Item[Int32] Explicit implementation to hide it as much as possible. The setter calls the protected virtual DoSet(Int32, T) method that does the job of actually setting the item at the given index... even if this breaks the sort. Declaration T IList<T>.this[int index] { get; set; } Parameters Type Name Description Int32 index Index of the item. Property Value Type Description T The item. Methods | Improve this Doc View Source Add(T) Adds the item at its right position depending on the comparison function and returns true. May return false if, for any reason, the item has not been added. At this level (but this may be overridden), if AllowDuplicates is false and the item already exists, false is returned and the item is not added. Declaration public virtual bool Add(T value) Parameters Type Name Description T value Item to add. Returns Type Description Boolean True if the item has actually been added; otherwise false. | Improve this Doc View Source CheckPosition(Int32) Checks that the item at the given index is between a lesser and a greater item and if not, moves the item at its correct index. If the new index conflicts because AllowDuplicates is false (the default), a negative value is returned, otherwise the new positive index is returned. Declaration public int CheckPosition(int index) Parameters Type Name Description Int32 index Index of the element to check. Returns Type Description Int32 The new positive index if the position has been successfully updated, or a negative value if a duplicate exists (and AllowDuplicates is false). | Improve this Doc View Source Clear() Clears the list. This is not virtual since it directly calls protected virtual DoClear() Declaration public void Clear() | Improve this Doc View Source Contains(T) Determines whether this CKSortedArrayList<T> contains a specific value (logarithmic). Declaration public bool Contains(T value) Parameters Type Name Description T value The value. Returns Type Description Boolean True if the object is found; otherwise, false. | Improve this Doc View Source Contains(Object) Covariant compatible overload of Contains(T) (logarithmic). Declaration public virtual bool Contains(object item) Parameters Type Name Description Object item The item to find. Returns Type Description Boolean True if the object is found; otherwise, false. | Improve this Doc View Source CopyTo(T[], Int32) Copy the content of the internal array into the given array. Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array Destination array. Int32 arrayIndex Index at which copying must start. | Improve this Doc View Source DoClear() Clears the list. Declaration protected virtual void DoClear() | Improve this Doc View Source DoInsert(Int32, T) Inserts a new item. Declaration protected virtual void DoInsert(int index, T value) Parameters Type Name Description Int32 index Index to insert. T value Item to insert. | Improve this Doc View Source DoMove(Int32, Int32) Moves an item from a position to another one. Declaration protected virtual int DoMove(int from, int newIndex) Parameters Type Name Description Int32 from Old index of the item. Int32 newIndex New index. Returns Type Description Int32 The new index of the element. | Improve this Doc View Source DoRemoveAt(Int32) Removes the item at a given position. Declaration protected virtual void DoRemoveAt(int index) Parameters Type Name Description Int32 index Index to remove. | Improve this Doc View Source DoSet(Int32, T) Sets a value at a given position. Declaration protected virtual T DoSet(int index, T newValue) Parameters Type Name Description Int32 index The position to set. T newValue The new item to inject. Returns Type Description T The previous item at the position. | Improve this Doc View Source GetEnumerator() Gets an enumerator. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source IndexOf(T) Locates an element (one of the occurrences when duplicates are allowed) in this list (logarithmic). Declaration public virtual int IndexOf(T value) Parameters Type Name Description T value The element. Returns Type Description Int32 The result of the in the internal array. | Improve this Doc View Source IndexOf(Object) Covariant compatible overload of IndexOf(T) (logarithmic). If the item is not T compatible, the value System.Int32.MinValue is returned. See IndexOf(Object) . Declaration public virtual int IndexOf(object item) Parameters Type Name Description Object item The item to locate. Returns Type Description Int32 Positive index when found, negative one when not found and System.Int32.MinValue if the item can structurally NOT appear in this list. | Improve this Doc View Source IndexOf<TKey>(TKey, Func<T, TKey, Int32>) Binary search implementation that relies on an extended comparer: a function that knows how to compare the elements of the array to its key. This function must work exactly like this Comparator but accepts a T and the TKey that is used to sort the items otherwise the result is undefined. Declaration public int IndexOf<TKey>(TKey key, Func<T, TKey, int> comparison) Parameters Type Name Description TKey key The value of the key. Func <T, TKey, Int32 > comparison The comparison function. Returns Type Description Int32 Same as System.Array.BinarySearch(System.Array,System.Object) : negative index if not found which is the bitwise complement of (the index of the next element plus 1). Type Parameters Name Description TKey Type of the key. | Improve this Doc View Source Remove(T) Removes a value and returns true if found; otherwise returns false. Declaration public bool Remove(T value) Parameters Type Name Description T value The value to remove. Returns Type Description Boolean True if the value has been found and removed, false otherwise. | Improve this Doc View Source RemoveAt(Int32) Removes the item at the given position. This is not virtual since it directly calls protected virtual DoRemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Index to remove. | Improve this Doc View Source ICollection<T>.Add(T) Explicitly implemented since our Add(T) method returns a boolean. Declaration void ICollection<T>.Add(T item) Parameters Type Name Description T item Item to add. | Improve this Doc View Source IList<T>.Insert(Int32, T) Explicit implementation to hide it as much as possible. It calls the protected virtual DoInsert(Int32, T) method that does the job of actually inserting the item at the given index... even if this breaks the sort. Declaration void IList<T>.Insert(int index, T value) Parameters Type Name Description Int32 index Future index of the item. T value Item to insert. | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator"
  },
  "api/CK.Core.CKSortedArrayKeyList`2.html": {
    "href": "api/CK.Core.CKSortedArrayKeyList`2.html",
    "title": "Class CKSortedArrayKeyList<T, TKey> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKSortedArrayKeyList<T, TKey> Sorted list of items where the sort order relies on an external key, not the item itself. Inheritance Object CKSortedArrayList <T> CKSortedArrayKeyList<T, TKey> Namespace :CK.Core Assembly :CK.Core.dll Syntax [DebuggerTypeProxy(typeof (CKSortedArrayKeyList<, >.DebuggerView))] [DebuggerDisplay(\"Count = {Count}\")] public class CKSortedArrayKeyList<T, TKey> : CKSortedArrayList<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, ICKWritableCollection<T>, ICKWritableCollector<T>, ICKReadOnlyMultiKeyedCollection<T, TKey>, ICKReadOnlyUniqueKeyedCollection<T, TKey>, ICKReadOnlyCollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T TKey Constructors | Improve this Doc View Source CKSortedArrayKeyList(Func<T, TKey>, Boolean) Initializes a new CKSortedArrayKeyList<T, TKey> . Declaration public CKSortedArrayKeyList(Func<T, TKey> keySelector, bool allowDuplicates = false) Parameters Type Name Description Func <T, TKey> keySelector Function that associates a key to an item. Boolean allowDuplicates True to allow duplicates. | Improve this Doc View Source CKSortedArrayKeyList(Func<T, TKey>, Comparison<TKey>, Boolean) Initializes a new CKSortedArrayKeyList<T, TKey> where a System.Comparison`1 function is used to compare keys. Declaration public CKSortedArrayKeyList(Func<T, TKey> keySelector, Comparison<TKey> keyComparison, bool allowDuplicates = false) Parameters Type Name Description Func <T, TKey> keySelector Function that associates a key to an item. Comparison <TKey> keyComparison Function used to compare keys. Boolean allowDuplicates True to allow duplicates. Methods | Improve this Doc View Source Contains(TKey) True if this list contains at least one item with the given key. Declaration public bool Contains(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description Boolean True if an item is found, false otherwise. | Improve this Doc View Source Contains(Object) Covariant version of the contains predicate. If item is of type T the Contains(T) is used but if item is of type TKey , the Contains(TKey) is used. Declaration public override bool Contains(object item) Parameters Type Name Description Object item Can be a T or a TKey . Returns Type Description Boolean True if a corresponding element in this list can be found. | Improve this Doc View Source GetAllByKey(TKey) Gets an independent collection of the items that are associated to the given key value. Declaration public IReadOnlyCollection<T> GetAllByKey(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description IReadOnlyCollection <T> An independent collection of T . | Improve this Doc View Source GetByKey(TKey, out Boolean) Gets the first item with a given key or the default value if no such item exist. Declaration public T GetByKey(TKey key, out bool exists) Parameters Type Name Description TKey key The key. Boolean exists True if the key has been found, otherwise false. Returns Type Description T The item or default(T) if not found. | Improve this Doc View Source IndexOf(T) Gets the index of the element thanks to a linear search into the internal array. If the key did not change, it is more efficient to find an element with IndexOf(TKey) that uses a dichotomic search. Declaration public override int IndexOf(T value) Parameters Type Name Description T value The element to locate. Returns Type Description Int32 The index in array that, if found; otherwise, –1. | Improve this Doc View Source IndexOf(TKey) Gets the zero based position of on of the items that is associated to this key. Declaration public int IndexOf(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description Int32 The index or a negative value like . | Improve this Doc View Source IndexOf(Object) Covariant IndexOf method: if item is of type T the linear IndexOf(T) is used but if item is of type TKey , the logarithmic IndexOf(TKey) is used. Declaration public override int IndexOf(object item) Parameters Type Name Description Object item Can be a T or a TKey . Returns Type Description Int32 The index of the item in the collection. | Improve this Doc View Source KeyCount(TKey) Gets the number of items with a given key. It can be greater than 1 only if AllowDuplicates is true. Declaration public int KeyCount(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description Int32 The number of item with the key . | Improve this Doc View Source Remove(TKey) Removes one item given a key: only one item is removed when AllowDuplicates is true and more than one item are associated to this key. Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key The key to remove. Returns Type Description Boolean True if an item has been removed, false otherwise."
  },
  "api/CK.Core.CKReadOnlyListOnIList`1.html": {
    "href": "api/CK.Core.CKReadOnlyListOnIList`1.html",
    "title": "Class CKReadOnlyListOnIList<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKReadOnlyListOnIList<T> Small adapter that exposes a System.Collections.Generic.IReadOnlyList`1 on a System.Collections.Generic.IList`1 . Inheritance Object CKReadOnlyListOnIList<T> Namespace :CK.Core Assembly :CK.Core.dll Syntax [ExcludeFromCodeCoverage] public class CKReadOnlyListOnIList<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Type of the list's items. Constructors | Improve this Doc View Source CKReadOnlyListOnIList() Initializes a new CKReadOnlyListOnIList<T> with a null Values . Declaration public CKReadOnlyListOnIList() | Improve this Doc View Source CKReadOnlyListOnIList(IList<T>) Initializes a new CKReadOnlyListOnIList<T> on a System.Collections.Generic.IList`1 for the Values . Declaration public CKReadOnlyListOnIList(IList<T> values) Parameters Type Name Description IList <T> values List to wrap. Properties | Improve this Doc View Source Count Gets the count of items. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Gets the item at a given index. Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T | Improve this Doc View Source Values Gets or sets the wrapped collection. Declaration public IList<T> Values { get; set; } Property Value Type Description IList <T> Methods | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> An enumerator on the Values . | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator"
  },
  "api/CK.Core.CKReadOnlyExtension.html": {
    "href": "api/CK.Core.CKReadOnlyExtension.html",
    "title": "Class CKReadOnlyExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKReadOnlyExtension Provides extension methods for ICKReadOnlyCollection<T> , System.Collections.Generic.IReadOnlyList`1 and ICKReadOnlyUniqueKeyedCollection<T, TKey> . Inheritance Object CKReadOnlyExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class CKReadOnlyExtension Methods | Improve this Doc View Source GetByKey<T, TKey>(ICKReadOnlyUniqueKeyedCollection<T, TKey>, TKey) Gets the item with the associated key, forgetting the exists out parameter in GetByKey(TKey, out Boolean) . Declaration public static T GetByKey<T, TKey>(ICKReadOnlyUniqueKeyedCollection<T, TKey> this, TKey key) Parameters Type Name Description ICKReadOnlyUniqueKeyedCollection <T, TKey> this Keyed collection of elements. TKey key The item key. Returns Type Description T The item that matches the key, default(T) if the key can not be found. Type Parameters Name Description T Type of the elements in the collection. TKey Type of the key. | Improve this Doc View Source IndexOf<T>(IReadOnlyList<T>, Func<T, Boolean>) Finds the index of a first item in a System.Collections.Generic.IReadOnlyList`1 . Declaration public static int IndexOf<T>(IReadOnlyList<T> this, Func<T, bool> predicate) Parameters Type Name Description IReadOnlyList <T> this This list. Func <T, Boolean > predicate Predicate function. Returns Type Description Int32 Index of the matching item or -1. Type Parameters Name Description T Type of item. | Improve this Doc View Source ToArray<T>(IReadOnlyCollection<T>) Creates an array from a read only collection. This is a much more efficient version than the IEnumerable ToArray extension method since this implementation allocates one and only one array. Declaration public static T[] ToArray<T>(IReadOnlyCollection<T> this) Parameters Type Name Description IReadOnlyCollection <T> this Read only collection of elements. Returns Type Description T[] A new array that contains the same element as the collection. Type Parameters Name Description T Type of the array and lists elements."
  },
  "api/CK.Core.CKReadOnlyCollectionOnICollection`1.html": {
    "href": "api/CK.Core.CKReadOnlyCollectionOnICollection`1.html",
    "title": "Class CKReadOnlyCollectionOnICollection<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKReadOnlyCollectionOnICollection<T> Small adapter that exposes a System.Collections.Generic.IReadOnlyCollection`1 on a System.Collections.Generic.ICollection`1 . Inheritance Object CKReadOnlyCollectionOnICollection<T> Namespace :CK.Core Assembly :CK.Core.dll Syntax [ExcludeFromCodeCoverage] public class CKReadOnlyCollectionOnICollection<T> : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Type of the collection items. Constructors | Improve this Doc View Source CKReadOnlyCollectionOnICollection() Initializes a new CKReadOnlyCollectionOnICollection<T> with a null Values . Declaration public CKReadOnlyCollectionOnICollection() | Improve this Doc View Source CKReadOnlyCollectionOnICollection(ICollection<T>) Initializes a new CKReadOnlyCollectionOnICollection<T> on a System.Collections.Generic.ICollection`1 for the Values . Declaration public CKReadOnlyCollectionOnICollection(ICollection<T> values) Parameters Type Name Description ICollection <T> values Collection to wrap. Properties | Improve this Doc View Source Count Gets the count of items. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Values Gets or sets the wrapped collection. Declaration public ICollection<T> Values { get; set; } Property Value Type Description ICollection <T> Methods | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> An enumerator on the Values . | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator"
  },
  "api/CK.Core.CKExceptionData.html": {
    "href": "api/CK.Core.CKExceptionData.html",
    "title": "Class CKExceptionData | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKExceptionData Immutable and serializable representation of an exception. It contains specific data for some exceptions that, based on our experience, are actually interesting. Inheritance Object CKExceptionData Namespace :CK.Core Assembly :CK.Core.dll Syntax [Serializable] public class CKExceptionData Constructors | Improve this Doc View Source CKExceptionData(CKBinaryReader, Boolean) Initializes a new CKExceptionData from a CKBinaryReader . See Write(CKBinaryWriter, Boolean) . Declaration public CKExceptionData(CKBinaryReader r, bool streamIsCRLF) Parameters Type Name Description CKBinaryReader r The reader to read from. Boolean streamIsCRLF Whether the strings have CRLF or LF for end-of-lines. | Improve this Doc View Source CKExceptionData(CKBinaryReader, Boolean, Int32) Initializes a new CKExceptionData from a CKBinaryReader with a known version. See Write(CKBinaryWriter, Boolean) . Declaration public CKExceptionData(CKBinaryReader r, bool streamIsCRLF, int version) Parameters Type Name Description CKBinaryReader r The reader to read from. Boolean streamIsCRLF Whether the strings have CRLF or LF for end-of-lines. Int32 version Known version. | Improve this Doc View Source CKExceptionData(String, String, String, String, CKExceptionData, String, String, CKExceptionData[], CKExceptionData[]) Initializes a new CKExceptionData with all its fields. Use the factory method CreateFrom(Exception) to create a data from any exception. Declaration public CKExceptionData(string message, string exceptionTypeName, string exceptionTypeAssemblyQualifiedName, string stackTrace, CKExceptionData innerException, string fileName, string detailedInfo, CKExceptionData[] loaderExceptions, CKExceptionData[] aggregatedExceptions) Parameters Type Name Description String message Message of the exception. Must not be null. String exceptionTypeName Type name of the exception (no namespace nor assembly). Must not be null nor empty.. String exceptionTypeAssemblyQualifiedName Full type name of the exception. Must not be null nor empty. String stackTrace Stack trace. Can be null. CKExceptionData innerException Inner exception. If aggregatedExceptions is not null, it must be the same as the first aggregated exceptions. String fileName File name related to the exception (if it makes sense). Can be null. String detailedInfo More detailed information if any. CKExceptionData [] loaderExceptions Loader exceptions. LoaderExceptions . CKExceptionData [] aggregatedExceptions Aggregated exceptions can be null. Otherwise, it must contain at least one exception. Fields | Improve this Doc View Source CurrentStreamVersion The current stream version. Declaration public static readonly int CurrentStreamVersion Field Value Type Description Int32 Properties | Improve this Doc View Source AggregatedExceptions Gets all the the aggregated exceptions if the exception is a System.AggregateException . This corresponds to the System.AggregateException.InnerExceptions property. Null if this exception is not a an AggregatedException. Declaration public IReadOnlyList<CKExceptionData> AggregatedExceptions { get; } Property Value Type Description IReadOnlyList < CKExceptionData > | Improve this Doc View Source DetailedInfo Gets more information: this depends on the actual exception type. For instance, if the exception is a System.IO.FileNotFoundException or a System.IO.FileLoadException that was raised while dynamically loading a type or an assembly and we are in DNX, this contains the log from Fusion assembly loading subsystem. Null otherwise. Declaration public string DetailedInfo { get; } Property Value Type Description String | Improve this Doc View Source ExceptionTypeAssemblyQualifiedName Gets the assembly qualified exception type name. Never null nor empty. Declaration public string ExceptionTypeAssemblyQualifiedName { get; } Property Value Type Description String | Improve this Doc View Source ExceptionTypeName Gets the exception type name. Never null nor empty. Declaration public string ExceptionTypeName { get; } Property Value Type Description String | Improve this Doc View Source FileName Gets the file name if the exception is referring to a file. Null otherwise. Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source InnerException Gets the inner exception if it exists. If AggregatedExceptions is not null, it is the same as the first aggreated exceptions. Declaration public CKExceptionData InnerException { get; } Property Value Type Description CKExceptionData | Improve this Doc View Source LoaderExceptions Gets all the the exceptions that occurred while dynamically loading a type or an assembly if the exception is a System.Reflection.ReflectionTypeLoadException . Null otherwise. Declaration public IReadOnlyList<CKExceptionData> LoaderExceptions { get; } Property Value Type Description IReadOnlyList < CKExceptionData > | Improve this Doc View Source Message Gets the message of the exception. Never null but can be empty. Declaration public string Message { get; } Property Value Type Description String | Improve this Doc View Source StackTrace Gets the stack trace. Can be null. Declaration public string StackTrace { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateFrom(Exception) Creates a CKExceptionData from any System.Exception . Declaration public static CKExceptionData CreateFrom(Exception ex) Parameters Type Name Description Exception ex Exception for which data must be created. Can be null: null is returned. Returns Type Description CKExceptionData The data that describes the exception. | Improve this Doc View Source ToString() Overridden to return the result of WriteText(Action<String>, String, String) without prefix and a standard System.Environment.NewLine . This is cached once built. Declaration public override string ToString() Returns Type Description String This exception data as a block of readable text. | Improve this Doc View Source ToStringBuilder(StringBuilder, String, String) Writes the exception data as a readable block of text into a System.Text.StringBuilder . Declaration public void ToStringBuilder(StringBuilder b, string prefix, string newLine = null) Parameters Type Name Description StringBuilder b The StringBuilder to write to. String prefix Prefix that will appear at the start of each line. String newLine Defaults to System.Environment.NewLine . | Improve this Doc View Source ToTextWriter(TextWriter, String, String) Writes the exception data as a readable block of text into a System.IO.TextWriter . Declaration public void ToTextWriter(TextWriter w, string prefix, string newLine = null) Parameters Type Name Description TextWriter w The TextWriter to write to. String prefix Prefix that will appear at the start of each line. String newLine Defaults to System.Environment.NewLine . | Improve this Doc View Source Write(CKBinaryWriter, Boolean) Writes this exception data into a System.IO.BinaryWriter . Declaration public void Write(CKBinaryWriter w, bool writeVersion = true) Parameters Type Name Description CKBinaryWriter w The writer to use. Can not be null. Boolean writeVersion False to not write the CurrentStreamVersion . | Improve this Doc View Source WriteText(Action<String>, String, String) Core function that writes the exception data as a readable block of text. Declaration public void WriteText(Action<string> appender, string prefix, string newLine = null) Parameters Type Name Description Action < String > appender The function that collects the text fragments. String prefix Prefix that will appear at the start of each line. String newLine Defaults to System.Environment.NewLine ."
  },
  "api/CK.Core.CKException.html": {
    "href": "api/CK.Core.CKException.html",
    "title": "Class CKException | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKException Basic System.Exception that eases message formatting thanks to its constructors and provides an Exception wrapper around CKExceptionData . Inheritance Object Exception CKException Namespace :CK.Core Assembly :CK.Core.dll Syntax [Serializable] public class CKException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source CKException(CKExceptionData) Initializes a new CKException with an ExceptionData . The message of this exception is the Message . Use the static CreateFrom(CKExceptionData) to handle null data (a null CKException will be returned). Declaration public CKException(CKExceptionData data) Parameters Type Name Description CKExceptionData data The exception data. Must not be null. | Improve this Doc View Source CKException(Exception, String, Object[]) Initializes a new CKException with an System.Exception.InnerException . Declaration public CKException(Exception innerException, string messageFormat, params object[] args) Parameters Type Name Description Exception innerException Exception that caused this one. String messageFormat Format string with optional placeholders. Object [] args Varying number of arguments to format. | Improve this Doc View Source CKException(String) Initializes a new CKException . Declaration public CKException(string message) Parameters Type Name Description String message Simple message. | Improve this Doc View Source CKException(String, Exception) Initializes a new CKException . Declaration public CKException(string message, Exception innerException) Parameters Type Name Description String message Simple message. Exception innerException Exception that caused this one. | Improve this Doc View Source CKException(String, Object[]) Initializes a new CKException . Declaration public CKException(string messageFormat, params object[] args) Parameters Type Name Description String messageFormat Format string with optional placeholders. Object [] args Varying number of arguments to format. Properties | Improve this Doc View Source ExceptionData Gets the CKExceptionData if it exists: use EnsureExceptionData() to create if this is null, a data that describes this exception. Declaration public CKExceptionData ExceptionData { get; } Property Value Type Description CKExceptionData Methods | Improve this Doc View Source CreateFrom(CKExceptionData) Creates a CKException from a CKExceptionData . This method returns null when data is null. This is the symmetric of CreateFrom(Exception) . Declaration public static CKException CreateFrom(CKExceptionData data) Parameters Type Name Description CKExceptionData data Data of an exception for which a CKException wrapper must be created. Can be null: null is returned. Returns Type Description CKException The exception that wraps the data. | Improve this Doc View Source EnsureExceptionData() If ExceptionData is null, this method creates the CKExceptionData with the details from this exception. Declaration public CKExceptionData EnsureExceptionData() Returns Type Description CKExceptionData The CKExceptionData that describes this exception."
  },
  "api/CK.Core.CKEnumeratorMono`1.html": {
    "href": "api/CK.Core.CKEnumeratorMono`1.html",
    "title": "Class CKEnumeratorMono<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKEnumeratorMono<T> Defines an optimized System.Collections.Generic.IEnumerator`1 that contains only one element. Inheritance Object CKEnumeratorMono<T> Namespace :CK.Core Assembly :CK.Core.dll Syntax public sealed class CKEnumeratorMono<T> : IEnumerator<T>, IDisposable, IEnumerator Type Parameters Name Description T Constructors | Improve this Doc View Source CKEnumeratorMono(T) Initializes a new enumerator bound to one and only one value. Declaration public CKEnumeratorMono(T val) Parameters Type Name Description T val Unique value that will be enumerated by this CKEnumeratorMono<T> Properties | Improve this Doc View Source Current Gets the strongly typed element in the collection at the current position of the enumerator. Declaration public T Current { get; } Property Value Type Description T | Improve this Doc View Source IEnumerator.Current Declaration [ExcludeFromCodeCoverage] object IEnumerator.Current { get; } Property Value Type Description Object Methods | Improve this Doc View Source Dispose() Dispose the System.Collections.Generic.IEnumerator`1 . Declaration [ExcludeFromCodeCoverage] public void Dispose() | Improve this Doc View Source MoveNext() Move to the next element. Declaration public bool MoveNext() Returns Type Description Boolean True the first time, false otherwise | Improve this Doc View Source Reset() Resets the enumerator. Declaration public void Reset()"
  },
  "api/CK.Core.AppSettings.html": {
    "href": "api/CK.Core.AppSettings.html",
    "title": "Class AppSettings | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AppSettings Very simple facade for simple application settings. This does not handle multiple configurations per key (like ConfigurationManager.AppSettings can do since it is a NameValueCollection) but can expose potentially complex configuration objects instead of only strings. It can be initialized only once, before any other access, and when not initialized tries to automatically use the standard ConfigurationManager.AppSettings through late binding. However, it supports multiple overriding and reverting to the original configuration. (Override support and restoration is mainly designed for tests but the override functionality alone can be a useful feature in real life application.) Inheritance Object AppSettings Namespace :CK.Core Assembly :CK.Core.dll Syntax public class AppSettings Fields | Improve this Doc View Source Default Gets the default, singleton, AppSettings object. Declaration public static readonly AppSettings Default Field Value Type Description AppSettings Properties | Improve this Doc View Source IsInitialzed Gets whether this AppSettings object has been initialized. It can be initialized only once. Declaration public bool IsInitialzed { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[String] Gets the settings as a string: System.Object.ToString is called on object. Null if the key is not found. Declaration public string this[string key] { get; } Parameters Type Name Description String key The configuration key. Property Value Type Description String The string (object expressed as a string) or null if no such configuration exists. Methods | Improve this Doc View Source DefaultInitialize() Automatically bind to standard ConfigurationManager.AppSettings to obtain configuration strings. This method is automatically called when this object is not yet initialized on any access other than Initialize(Func<String, Object>) . Declaration public void DefaultInitialize() | Improve this Doc View Source Get(String) Gets the settings as an object. Declaration public object Get(string key) Parameters Type Name Description String key The configuration key. Returns Type Description Object The configured available object or null if no such configuration exists. | Improve this Doc View Source Get<T>(String, T) Gets the settings as a typed object: if the object is not available or is not of the given type, the default value is returned; Declaration public T Get<T>(string key, T defaultValue) Parameters Type Name Description String key The configuration key. T defaultValue The default value to return if no object exists. Returns Type Description T The configured available object or the defaultValue if no such configuration exists. Type Parameters Name Description T | Improve this Doc View Source GetRequired(String) Gets the settings as an object: if the object is not available, an exception is thrown. Declaration public object GetRequired(string key) Parameters Type Name Description String key The configuration key. Returns Type Description Object The configured available object. | Improve this Doc View Source GetRequired<T>(String) Gets the settings as a typed object: if the object is not available or is not of the given type, an exception is thrown. Declaration public T GetRequired<T>(string key) Parameters Type Name Description String key The configuration key. Returns Type Description T The configured available object. Type Parameters Name Description T | Improve this Doc View Source Initialize(Func<String, Object>) Initializes this AppSettings object. This can be called only once prior to any use of this object. When not called before the first access, the .Net ConfigurationManager.AppSettings is used if possible (late binding). Declaration public void Initialize(Func<string, object> getConfigurationObject) Parameters Type Name Description Func < String , Object > getConfigurationObject The function that ultimately | Improve this Doc View Source Override(Func<Func<String, Object>, String, Object>) Overrides this AppSettings object configuration function. This can be called after Initialize(Func<String, Object>) or DefaultInitialize() or directly: any access to the configuration since any access triggers a call to DefaultInitialize. The function that overrides the current configuration is called with the previously active function to enable chaining (filtering, alteration of the keys and or the values). Declaration public void Override(Func<Func<string, object>, string, object> filterConfigurationObject) Parameters Type Name Description Func < Func < String , Object >, String , Object > filterConfigurationObject The function that ultimately | Improve this Doc View Source RevertOverrides() Reverts all calls to Override(Func<Func<String, Object>, String, Object>) : the initial configuration is restored. Declaration public void RevertOverrides()"
  },
  "api/CK.Core.ActivityMonitorTextWriterClient.html": {
    "href": "api/CK.Core.ActivityMonitorTextWriterClient.html",
    "title": "Class ActivityMonitorTextWriterClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorTextWriterClient Formats the activity and pushes piece of texts to an System.Action`1 where T is a string. Inheritance Object ActivityMonitorTextHelperClient ActivityMonitorTextWriterClient Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorTextWriterClient : ActivityMonitorTextHelperClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorTextWriterClient(Action<String>) Initializes a new ActivityMonitorTextWriterClient bound to a function that must write a string. Declaration public ActivityMonitorTextWriterClient(Action<string> writer) Parameters Type Name Description Action < String > writer Function that writes the content. | Improve this Doc View Source ActivityMonitorTextWriterClient(Action<String>, LogFilter) Initializes a new ActivityMonitorTextWriterClient bound to a function that must write a string, with a filter. Declaration public ActivityMonitorTextWriterClient(Action<string> writer, LogFilter filter) Parameters Type Name Description Action < String > writer Function that writes the content. LogFilter filter Filter to apply Methods | Improve this Doc View Source DumpException(StringBuilder, String, Boolean, Exception) Recursively dumps an System.Exception as readable text. Declaration public static void DumpException(StringBuilder w, string prefix, bool displayMessage, Exception ex) Parameters Type Name Description StringBuilder w The TextWriter to write to. String prefix Prefix that will start all lines. Boolean displayMessage Whether the exception message must be displayed or skip. Exception ex The exception to display. | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Writes all information. Declaration protected override void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Writes all the information. Declaration protected override void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Writes group conclusion and updates internally managed line prefix. Declaration protected override void OnGroupClose(IActivityLogGroup g, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup g Group that must be closed. IReadOnlyList < ActivityLogGroupConclusion > conclusions Conclusions for the group. | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Writes a group opening. Declaration protected override void OnGroupOpen(IActivityLogGroup g) Parameters Type Name Description IActivityLogGroup g Group information. | Improve this Doc View Source OnLeaveLevel(LogLevel) Updates the internally maintained prefix for lines. Declaration protected override void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level Previous level."
  },
  "api/CK.Monitoring.GrandOutputChannelConfigData.html": {
    "href": "api/CK.Monitoring.GrandOutputChannelConfigData.html",
    "title": "Class GrandOutputChannelConfigData | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutputChannelConfigData Configuration for a channel. A channel is a route that receive outputs from monitors: this configuration is associated to a RouteConfiguration or a SubRouteConfiguration object. Currently, the only configuration is the MinimalFilter of the channel. Inheritance Object GrandOutputChannelConfigData Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class GrandOutputChannelConfigData Constructors | Improve this Doc View Source GrandOutputChannelConfigData() Initializes a new instance of GrandOutputChannelConfigData . The MinimalFilter is Undefined . Declaration public GrandOutputChannelConfigData() | Improve this Doc View Source GrandOutputChannelConfigData(XElement) Reads a System.Xml.Linq.XElement with an optional \"MinimalFilter\" attribute. Declaration public GrandOutputChannelConfigData(XElement xml) Parameters Type Name Description XElement xml The xml element. Fields | Improve this Doc View Source MinimalFilter The minimal filter that will be applied to moniors that are bound (by their current Topic ) to this channel. Defaults to Undefined . Declaration public LogFilter MinimalFilter Field Value Type Description LogFilter"
  },
  "api/CK.Monitoring.GrandOutput.html": {
    "href": "api/CK.Monitoring.GrandOutput.html",
    "title": "Class GrandOutput | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutput A GrandOutput collects activity of multiple IActivityMonitor . It routes log events to multiple channels based on Topic . It is usually useless to explicitly create an instance of GrandOutput: the Default one is available as soon as EnsureActiveDefault(Action<GrandOutput>) (or EnsureActiveDefaultWithDefaultSettings(IActivityMonitor) ) is called and will be automatically used by new ActivityMonitor . Inheritance Object GrandOutput Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class GrandOutput : IDisposable Constructors | Improve this Doc View Source GrandOutput(IGrandOutputDispatcherStrategy) Initializes a new GrandOutput . Declaration public GrandOutput(IGrandOutputDispatcherStrategy dispatcherStrategy = null) Parameters Type Name Description IGrandOutputDispatcherStrategy dispatcherStrategy Strategy to use to handle the throughput. Properties | Improve this Doc View Source ConfigurationAttemptCount Gets the total number of calls to SetConfiguration(GrandOutputConfiguration, IActivityMonitor, Int32) (and to Dispose() method). This can be used to call WaitForNextConfiguration(Int32, Int32) . Declaration public int ConfigurationAttemptCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Default Gets the default GrandOutput for the current Application Domain. Note that EnsureActiveDefault(Action<GrandOutput>) must have been called, otherwise this static property is null. Declaration public static GrandOutput Default { get; } Property Value Type Description GrandOutput | Improve this Doc View Source GrandOutputMinimalFilter Gets or sets the minimal filter that monitors created for the GrandOutput itself will use. Defaults to Release (this should be changed only for debugging reasons). Declaration public static LogFilter GrandOutputMinimalFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source IsDisposed Gets whether this GrandOutput has been disposed. Declaration public bool IsDisposed { get; } Property Value Type Description Boolean | Improve this Doc View Source LostEventCount Gets the number of lost events since this GrandOutput has been created. Declaration public int LostEventCount { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxQueuedCount Maximal queue size that has been used. Declaration public int MaxQueuedCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Dispose() Calls Dispose(IActivityMonitor, Int32) with a SystemActivityMonitor and System.Threading.Timeout.Infinite . Declaration public void Dispose() | Improve this Doc View Source Dispose(IActivityMonitor, Int32) Closes this GrandOutput . Declaration public void Dispose(IActivityMonitor monitor, int millisecondsBeforeForceClose = -1) Parameters Type Name Description IActivityMonitor monitor Monitor that will be used. Must not be null. Int32 millisecondsBeforeForceClose Maximal time to wait for current routes to be unlocked (see IRouteConfigurationLock ). | Improve this Doc View Source EnsureActiveDefault(Action<GrandOutput>) Ensures that the Default GrandOutput is created and that any ActivityMonitor that will be created in this application domain will automatically have a GrandOutputClient registered for this Default GrandOutput. Use EnsureActiveDefaultWithDefaultSettings(IActivityMonitor) to initially configure this default. Remarks This method is thread-safe (a simple lock protects it) and uses a AutoConfiguration action that Register(IActivityMonitor) s newly created ActivityMonitor . Declaration public static GrandOutput EnsureActiveDefault(Action<GrandOutput> configurator = null) Parameters Type Name Description Action < GrandOutput > configurator Optional action that can configure the default GrandOutput. If specified will be called after the creation of a new GrandOutput: it will not be called if a Default is already available. This parameter is optional since you can configure it at any time. Returns Type Description GrandOutput The Default GrandOutput. | Improve this Doc View Source EnsureActiveDefaultWithDefaultSettings(IActivityMonitor) Ensures that the Default GrandOutput is created (see EnsureActiveDefault(Action<GrandOutput>) ) and configured with default settings: only one one channel with its minimal filter sets to Debug with one text file handler that writes .txt files in \" RootLogPath \\GrandOutputDefault\" directory. The RootLogPath must be valid and if a GrandOutput.config file exists inside, it is loaded as the configuration. If it exists, it must be valid (otherwise an exception is thrown). Once loaded, the file is monitored and any change that occurs to it dynamically triggers a SetConfiguration(GrandOutputConfiguration, IActivityMonitor, Int32) with the new file. Declaration public static GrandOutput EnsureActiveDefaultWithDefaultSettings(IActivityMonitor monitor = null) Parameters Type Name Description IActivityMonitor monitor An optional monitor. Returns Type Description GrandOutput | Improve this Doc View Source Register(IActivityMonitor) Ensures that a client for this GrandOutput is registered on a monitor. Declaration public GrandOutputClient Register(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor The monitor onto which a GrandOutputClient must be registered. Returns Type Description GrandOutputClient A newly created client or the already existing one. | Improve this Doc View Source RegisterGlobalSink(IGrandOutputSink) Registers a IGrandOutputSink . Declaration public void RegisterGlobalSink(IGrandOutputSink sink) Parameters Type Name Description IGrandOutputSink sink The sink to register. | Improve this Doc View Source SetConfiguration(GrandOutputConfiguration, IActivityMonitor, Int32) Attempts to set a new configuration. Declaration public bool SetConfiguration(GrandOutputConfiguration config, IActivityMonitor monitor = null, int millisecondsBeforeForceClose = -1) Parameters Type Name Description GrandOutputConfiguration config The configuration that must be set. IActivityMonitor monitor Optional monitor. Int32 millisecondsBeforeForceClose Optional timeout to wait before forcing the close of the currently active configuration. Returns Type Description Boolean True on success. | Improve this Doc View Source UnregisterGlobalSink(IGrandOutputSink) Unregisters a IGrandOutputSink . Declaration public void UnregisterGlobalSink(IGrandOutputSink sink) Parameters Type Name Description IGrandOutputSink sink The sink to unregister. | Improve this Doc View Source WaitForNextConfiguration(Int32, Int32) Blocks the caller until the current ConfigurationAttemptCount is greater or equal to the given number and the last configuration has been applied (or this object is disposed). Declaration public bool WaitForNextConfiguration(int configurationAttemptCount, int millisecondsTimeout) Parameters Type Name Description Int32 configurationAttemptCount The number of configuration attempt count to wait for. Int32 millisecondsTimeout Maximum number of milliseconds to wait. Use System.Threading.Timeout.Infinite or -1 for no limit. Returns Type Description Boolean False if specified timeout expired."
  },
  "api/CK.Monitoring.CKMonWriterClient.html": {
    "href": "api/CK.Monitoring.CKMonWriterClient.html",
    "title": "Class CKMonWriterClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKMonWriterClient This client writes .ckmon files for one monitor. To close output file, simply UnregisterClient(IActivityMonitorClient) this client. Inheritance Object CKMonWriterClient Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class CKMonWriterClient : IActivityMonitorBoundClient, IActivityMonitorClient, IMulticastLogInfo Constructors | Improve this Doc View Source CKMonWriterClient(String, Int32) Initializes a new instance of CKMonWriterClient that can be registered to write uncompressed .ckmon file for this monitor. Declaration public CKMonWriterClient(string path, int maxCountPerFile) Parameters Type Name Description String path The path. Can be absolute. When relative, it will be under RootLogPath that must be set. Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. | Improve this Doc View Source CKMonWriterClient(String, Int32, LogFilter, Boolean) Initializes a new instance of CKMonWriterClient that can be registered to write compressed or uncompressed .ckmon file for this monitor. Declaration public CKMonWriterClient(string path, int maxCountPerFile, LogFilter minimalFilter, bool useGzipCompression = false) Parameters Type Name Description String path The path. Can be absolute. When relative, it will be under RootLogPath that must be set. Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. LogFilter minimalFilter Minimal filter for this client. Boolean useGzipCompression Whether to output compressed .ckmon files. Defaults to false (do not compress). Properties | Improve this Doc View Source IMulticastLogInfo.GroupDepth Declaration int IMulticastLogInfo.GroupDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source IMulticastLogInfo.MonitorId Declaration Guid IMulticastLogInfo.MonitorId { get; } Property Value Type Description Guid | Improve this Doc View Source IMulticastLogInfo.PreviousEntryType Declaration LogEntryType IMulticastLogInfo.PreviousEntryType { get; } Property Value Type Description LogEntryType | Improve this Doc View Source IMulticastLogInfo.PreviousLogTime Declaration DateTimeStamp IMulticastLogInfo.PreviousLogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source IsOpened Gets whether this writer is opened. Declaration public bool IsOpened { get; } Property Value Type Description Boolean | Improve this Doc View Source MinimalFilter Gets the minimal filter set by the constructor. Declaration public LogFilter MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source Close() Closes this writer if it IsOpened . It can be re- Open() ed later. Declaration public void Close() | Improve this Doc View Source Open() Opens this writer if it is not already opened. Declaration public bool Open() Returns Type Description Boolean True on success, false otherwise."
  },
  "api/CK.Core.html": {
    "href": "api/CK.Core.html",
    "title": "Namespace CK.Core | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Core Classes ActivityMonitor Concrete implementation of IActivityMonitor . ActivityMonitor.DependentToken Describes the origin of a dependent activity: it is created by DependentActivity(IActivityMonitor, String, Int32) (extension methods). ActivityMonitor.Group Groups are bound to an ActivityMonitor and are linked together from the current one to the very first one (a kind of stack). ActivityMonitor.SourceFilter Manages source filtering. ActivityMonitor.Tags Thread-safe context for tags used to categorize log entries (and group conclusions). All tags used in monitoring must be Register(String) ed here. ActivityMonitorBridge A IActivityMonitorClient that relays what happens in a monitor to another monitor. In Net55, automatically supports logs crossing Application Domains. See ActivityMonitorBridgeTarget . ActivityMonitorBridgeTarget This class used with ActivityMonitorBridge , enables IActivityMonitor to relay logs. Each activity monitor exposes such a bridge target on its output thanks to BridgeTarget . ActivityMonitorClient Base class that explicitly implements IActivityMonitorClient (to hide it from public interface, except its MinimalFilter ). ActivityMonitorConsoleClient Displays the activity to the console. ActivityMonitorErrorCounter Count fatal, error or warn that occurred. It can also automatically adds a conclusion to closed groups that summarizes the number of fatals, errors and warnings. ActivityMonitorErrorCounter.State Encapsulates error information. The ToString() method displays the conclusion in a default text format. ActivityMonitorExtension Provides extension methods for IActivityMonitor and other types from the Activity monitor framework. ActivityMonitorGroupData Data required by UnfilteredOpenGroup(ActivityMonitorGroupData) . ActivityMonitorLogData Data required by UnfilteredLog(ActivityMonitorLogData) . This is also the base class for ActivityMonitorGroupData . ActivityMonitorPathCatcher The \"Path Catcher\" captures the current path of the opened groups and the last, current, line and exposes it thanks to a read only list of ActivityMonitorPathCatcher.PathElement (the DynamicPath property), plus two other specific paths, the LastErrorPath and the LastWarnOrErrorPath . ActivityMonitorPathCatcher.PathElement Element of the DynamicPath , LastErrorPath , or LastWarnOrErrorPath . ActivityMonitorSenderExtension Provides OpenXXX and XXX (Trace, Info,...Fatal) extension methods for IActivityMonitor . ActivityMonitorSendExtension Provides Send extension methods for IActivityMonitorGroupSender . ActivityMonitorSimpleCollector Simple collector of log entries which level is greater or equal to MinimalFilter . Its Capacity defaults to 50 (no more than Capacity entries are kept). Used by the CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) extension method. ActivityMonitorSimpleCollector.Entry Element of the Entries . ActivityMonitorTextHelperClient Base class for IActivityMonitorClient that tracks groups and level changes in order to ease text-based renderer. ActivityMonitorTextWriterClient Formats the activity and pushes piece of texts to an System.Action`1 where T is a string. AppSettings Very simple facade for simple application settings. This does not handle multiple configurations per key (like ConfigurationManager.AppSettings can do since it is a NameValueCollection) but can expose potentially complex configuration objects instead of only strings. It can be initialized only once, before any other access, and when not initialized tries to automatically use the standard ConfigurationManager.AppSettings through late binding. However, it supports multiple overriding and reverting to the original configuration. (Override support and restoration is mainly designed for tests but the override functionality alone can be a useful feature in real life application.) CKEnumeratorMono <T> Defines an optimized System.Collections.Generic.IEnumerator`1 that contains only one element. CKException Basic System.Exception that eases message formatting thanks to its constructors and provides an Exception wrapper around CKExceptionData . CKExceptionData Immutable and serializable representation of an exception. It contains specific data for some exceptions that, based on our experience, are actually interesting. CKReadOnlyCollectionOnICollection <T> Small adapter that exposes a System.Collections.Generic.IReadOnlyCollection`1 on a System.Collections.Generic.ICollection`1 . CKReadOnlyExtension Provides extension methods for ICKReadOnlyCollection<T> , System.Collections.Generic.IReadOnlyList`1 and ICKReadOnlyUniqueKeyedCollection<T, TKey> . CKReadOnlyListOnIList <T> Small adapter that exposes a System.Collections.Generic.IReadOnlyList`1 on a System.Collections.Generic.IList`1 . CKSortedArrayKeyList <T, TKey> Sorted list of items where the sort order relies on an external key, not the item itself. CKSortedArrayList <T> Simple sorted array list implementation that supports covariance through ICKReadOnlyList<T> and contra-variance with ICKWritableCollection<T> . This is a \"dangerous\" class since to keep the correct ordering, CheckPosition(Int32) must be explicitly called whenever something changes on any item that impacts the Comparator result. See the remarks for other caveats. CKTrait A trait is an immutable object (thread-safe), associated to a unique string inside a Context , that can be atomic (\"Alt\", \"Home\", \"Ctrl\") or combined (\"Alt|Ctrl\", \"Alt|Ctrl|Home\"). The only way to obtain a CKTrait is to call FindOrCreate(String) (from a string) or to use one of the available combination methods ( Union(CKTrait) , Except(CKTrait) , SymmetricExcept(CKTrait) or Intersect(CKTrait) ). CKTraitContext Thread-safe registration root for CKTrait objects. CollectionExtension Provides extension methods for collection & list interfaces. CriticalErrorCollector This collector keeps Capacity CriticalErrorCollector.Error s (and no more). It raises OnErrorFromBackgroundThreads event on each Add(Exception, String) . It is totally thread-safe and guaranties (as long as its Capacity is big enough) that no error can be lost (even errors raised while dispatching the event are themselves collected) and that errors are dispatched in sequence. This class is typically used as a static property or field by any object that must handle unexpected errors. (It can also be used per-instance if it makes sense.) CriticalErrorCollector.ErrorEventArgs Event argument of OnErrorFromBackgroundThreads . DateTimeStampExtension Exposes extension methods on DateTimeStamp . DictionaryExtension Provides extension methods for System.Collections.Generic.IDictionary`2 . EnumerableExtension Provides extension methods for System.Collections.Generic.IEnumerable`1 . FIFOBuffer <T> Simple implementation of a fixed size FIFO stack based on a circular buffer. The .Net System.Collections.Generic.Queue`1 's size increase as needed whereas this FIFO automatically loses the oldest items. Note that when T is a reference type, null can be pushed and pop. This can easily be used as a LIFO stack thanks to PopLast() and PeekLast() methods. FileUtil Helper functions related to file system. LogFilterMatcherExtension Supports LogFilter and LogLevelFilter extension methods. ServiceContainerExtension Provides extension methods for system/component model interfaces. SimpleServiceContainer Service container (that is a System.IServiceProvider ) subordinated to an optional base IServiceProvider that acts as a fallback if the service is not found at this level. Service creation may be deferred thanks to callback registration and an optional remove callback can be registered with each entry. SimpleTypeFinder Offers a global Resolver function that replaces System.Type.GetType(System.String,System.Boolean) . Default implementation is set to WeakResolver(String, Boolean) . SystemActivityMonitor This ActivityMonitor logs errors in a directory (if the static RootLogPath property is not null) and raises OnError events. Its main goal is to be internally used by the Monitor framework but can be used as a \"normal\" monitor (if you believe it is a good idea). The easiest way to configure it is to set an application settings with the key \"CK.Core.SystemActivityMonitor.RootLogPath\" and the root path for logs as the value. SystemActivityMonitor.LowLevelErrorEventArgs Defines the event argument of OnError . TemporaryFile Small helper to automatically delete a temporary file. It is mainly a secure wrapper around System.IO.Path.GetTempFileName that creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file: the Path property exposes it. This file is flagged by default with System.IO.FileAttributes.Temporary (short-lived): it will automatically be deleted by the Operating System during if it is still here on reboot. Util Utility class. Offers useful functions, constants, singletons and delegates. Util.Array Supports Empty () for all DNX targets. Util.Hash Provides methods to combine hash values: use StartValue and then chain calls to the Combine methods. Based on Daniel J. Bernstein algorithm ( http://cr.yp.to/cdb/cdb.txt ). XmlExtension Extension methods for System.Xml.XmlReader and System.Xml.Linq.XElement classes. Structs ActivityLogGroupConclusion Describes the conclusion of a group. Conclusions are simply Text Tag ged with a CKTrait . ActivityMonitorExtension.DependentSender Offers dependent token creation and launching. CriticalErrorCollector.Error Encapsulates error information Add(Exception, String) ed by external code or raised by a OnErrorFromBackgroundThreads event itself. DateTimeStamp A date and time stamp encapsulates a TimeUtc ( System.DateTime guaranteed to be in Utc) and a Uniquifier . LogFilter Immutable capture of a double LogLevelFilter . One for Line and one for Group . This value type exposes predefined configured couples: Debug (full trace), Verbose , Monitor , Terse , Release and Off (no log at all). SourceLogFilter Immutable encapsulation of the two source filters: this enables overriding or per source file filtering. Interfaces IActivityLogGroup Exposes all the relevant information for a currently opened group. Groups are linked together from the current one to the very first one thanks to the Parent property. IActivityMonitor Defines the core Activity Monitor interface. Small is beautiful. IActivityMonitorBoundClient Specialized IActivityMonitorClient that is bound to one IActivityMonitor . Clients that can not be registered into multiple outputs (and receive logs from multiple monitors at the same time) should implement this interface in order to control their registration/un-registration. IActivityMonitorClient Listener for IActivityMonitor registered in a IActivityMonitorOutput . IActivityMonitorGroupSender The interface that carries Send extension methods for groups. IActivityMonitorLineSender The interface that carries Send extension methods. IActivityMonitorOutput Offers IActivityMonitorClient registration/unregistration and exposes a BridgeTarget (an ActivityMonitorBridgeTarget ) that can be used to accept logs from other monitors. ICKReadOnlyCollection <T> Represents a generic read only collections of objects with a contravariant Contains(Object) method. This enables collection implementing this interface to support better lookup complexity than O(n) if possible. ICKReadOnlyList <T> Represents a read only collection of objects that can be individually accessed by index. ICKReadOnlyMultiKeyedCollection <T, TKey> Represents a generic read only keyed collections of covariant items with a contravariant key that can support duplicate items. ICKReadOnlyUniqueKeyedCollection <T, TKey> Represents a generic read only keyed collections of covariant items with a contravariant key. This interface can be supported by collections that support duplicated items. ICKWritableCollection <T> Contravariant interface for a collection that allows to Clear() and Remove(T) element. ICKWritableCollector <T> Contravariant interface for a collector: one can only add elements to a collector and know how much elements there are (Note that if you do not need the Count , you should use a simple Fun ). IDisposableActivityMonitor A diposable IActivityMonitor . IDisposableGroup Interface obtained once a Group has been opened. IMergeable Simple interface to support merging of information from external objects. ISimpleServiceContainer Defines a container for services. IUniqueId Minimal interface that enables any type (specially reference type) to expose a System.Guid . Enums GrantLevel Standard grant level: this is a simple (but often enough) way to secure a resource. Among the different levels, depending on the actual resource, some (or most) of them are useless and can be ignored. But for some kind of resources all of them make sense: a \"service object\" (a kind of executable process) for instance can benefits of all these levels. LogLevel Five standard log levels in increasing order used by IActivityMonitor . LogLevelFilter Defines filters for LogLevel . SetOperation Defines the six basic operations available between two sets. Delegates ActivityMonitor.SourceFilter.FilterSourceDelegate Delegate type that can be assigned to FilterSource static property to enable filter override based on the caller source location."
  },
  "api/CK.Core.XmlExtension.html": {
    "href": "api/CK.Core.XmlExtension.html",
    "title": "Class XmlExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class XmlExtension Extension methods for System.Xml.XmlReader and System.Xml.Linq.XElement classes. Inheritance Object XmlExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class XmlExtension Methods | Improve this Doc View Source AttributeEnum<T>(XElement, XName, T) Gets an enum value. Declaration public static T AttributeEnum<T>(XElement this, XName name, T defaultValue)where T : struct Parameters Type Name Description XElement this This System.Xml.Linq.XElement . XName name Name of the attribute. T defaultValue Default value if the attribute does not exist or can not be parsed. Returns Type Description T The parsed value or the default value. Type Parameters Name Description T Type of the enum. There is no way (in c#) to constraint the type to Enum - nor to Delegate, this is why the constraint restricts only the type to be a value type. | Improve this Doc View Source AttributeRequired(XElement, XName) Gets the attribute by its name or throws an System.Xml.XmlException if it does not exist. Declaration public static XAttribute AttributeRequired(XElement this, XName name) Parameters Type Name Description XElement this This System.Xml.Linq.XElement . XName name Name of the attribute. Returns Type Description XAttribute | Improve this Doc View Source GetLineColumnString(IXmlLineInfo, String, String) Gets line and column information (if it exists) as a string from any System.Xml.Linq.XObject (such as System.Xml.Linq.XAttribute or System.Xml.Linq.XElement ). Declaration public static string GetLineColumnString(IXmlLineInfo this, string format = \"- @{0},{1}\", string noLineInformation = null) Parameters Type Name Description IXmlLineInfo this This System.Xml.IXmlLineInfo . String format Default format is \"- @Line,Column\". String noLineInformation Defaults to a null string when System.Xml.IXmlLineInfo.HasLineInfo is false. Returns Type Description String A string based on format or noLineInformation ."
  },
  "api/CK.Core.Util.html": {
    "href": "api/CK.Core.Util.html",
    "title": "Class Util | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Util Utility class. Offers useful functions, constants, singletons and delegates. Inheritance Object Util Namespace :CK.Core Assembly :CK.Core.dll Syntax public class Util Fields | Improve this Doc View Source EmptyDisposable A void, immutable, System.IDisposable that does absolutely nothing. Declaration public static readonly IDisposable EmptyDisposable Field Value Type Description IDisposable | Improve this Doc View Source EmptyVersion The 0.0.0.0 Version. Declaration public static Version EmptyVersion Field Value Type Description Version | Improve this Doc View Source SqlServerEpoch Sql Server Epoch (1st of january 1900): this is the 0 legacy datetime. Declaration public static DateTime SqlServerEpoch Field Value Type Description DateTime | Improve this Doc View Source UnixEpoch Unix Epoch (1st of january 1970). Declaration public static DateTime UnixEpoch Field Value Type Description DateTime | Improve this Doc View Source UtcMaxValue Represents the largest possible value for a System.DateTime in System.DateTimeKind.Utc . Declaration public static readonly DateTime UtcMaxValue Field Value Type Description DateTime | Improve this Doc View Source UtcMinValue Represents the smallest possible value for a System.DateTime in System.DateTimeKind.Utc . Declaration public static readonly DateTime UtcMinValue Field Value Type Description DateTime Methods | Improve this Doc View Source ActionDispose(IDisposable) Centralized System.IDisposable.Dispose action call: it adapts an System.IDisposable interface to an System.Action . Can be safely called if obj is null. See CreateDisposableAction(Action) to wrap an action in a System.IDisposable interface. Declaration public static void ActionDispose(IDisposable obj) Parameters Type Name Description IDisposable obj The disposable object to dispose (can be null). | Improve this Doc View Source ActionVoid<T>(T) Centralized void action call for any type. This method is one of the safest method never written in the world. It does absolutely nothing. Declaration [ExcludeFromCodeCoverage] public static void ActionVoid<T>(T obj) Parameters Type Name Description T obj Any object. Type Parameters Name Description T | Improve this Doc View Source ActionVoid<T1, T2>(T1, T2) Centralized void action call for any pair of types. This method is one of the safest method never written in the world. It does absolutely nothing. Declaration [ExcludeFromCodeCoverage] public static void ActionVoid<T1, T2>(T1 o1, T2 o2) Parameters Type Name Description T1 o1 Any object. T2 o2 Any object. Type Parameters Name Description T1 T2 | Improve this Doc View Source ActionVoid<T1, T2, T3>(T1, T2, T3) Centralized void action call for any 3 types. This method is one of the safest method never written in the world. It does absolutely nothing. Declaration [ExcludeFromCodeCoverage] public static void ActionVoid<T1, T2, T3>(T1 o1, T2 o2, T3 o3) Parameters Type Name Description T1 o1 Any object. T2 o2 Any object. T3 o3 Any object. Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source BinarySearch<T>(IReadOnlyList<T>, Int32, Int32, T, Comparison<T>) Binary search implementation that relies on a System.Comparison`1 . Declaration public static int BinarySearch<T>(IReadOnlyList<T> sortedList, int startIndex, int length, T value, Comparison<T> comparison) Parameters Type Name Description IReadOnlyList <T> sortedList Read only list of elements. Int32 startIndex The starting index in the list. Int32 length The number of elements to consider in the list. T value The value to locate. Comparison <T> comparison The comparison function. Returns Type Description Int32 Same as System.Array.BinarySearch(System.Array,System.Object) : negative index if not found which is the bitwise complement of (the index of the next element plus 1). Type Parameters Name Description T Type of the elements. | Improve this Doc View Source BinarySearch<T, TValue>(IReadOnlyList<T>, TValue) Binary search implementation that relies on System.IComparable`1 implemented by the T . Declaration public static int BinarySearch<T, TValue>(IReadOnlyList<T> sortedList, TValue value)where T : IComparable<TValue> Parameters Type Name Description IReadOnlyList <T> sortedList Read only list of elements. TValue value The value to locate. Returns Type Description Int32 Same as System.Array.BinarySearch(System.Array,System.Object) : negative index if not found which is the bitwise complement of (the index of the next element plus 1). Type Parameters Name Description T Type of the elements. It must implement System.IComparable`1 . TValue Type of the value. | Improve this Doc View Source BinarySearch<T, TValue>(IReadOnlyList<T>, Int32, Int32, TValue) Binary search implementation that relies on System.IComparable`1 implemented by the T . Declaration public static int BinarySearch<T, TValue>(IReadOnlyList<T> sortedList, int startIndex, int length, TValue value)where T : IComparable<TValue> Parameters Type Name Description IReadOnlyList <T> sortedList Read only list of elements. Int32 startIndex The starting index in the list. Int32 length The number of elements to consider in the list. TValue value The value to locate. Returns Type Description Int32 Same as System.Array.BinarySearch(System.Array,System.Object) : negative index if not found which is the bitwise complement of (the index of the next element plus 1). Type Parameters Name Description T Type of the elements. It must implement System.IComparable`1 . TValue Type of the value. | Improve this Doc View Source BinarySearch<T, TKey>(IReadOnlyList<T>, Int32, Int32, TKey, Func<T, TKey, Int32>) Binary search implementation that relies on an extended comparer: a function that knows how to compare the elements of the list to a key of another type. Declaration public static int BinarySearch<T, TKey>(IReadOnlyList<T> sortedList, int startIndex, int length, TKey key, Func<T, TKey, int> comparison) Parameters Type Name Description IReadOnlyList <T> sortedList Read only list of elements. Int32 startIndex The starting index in the list. Int32 length The number of elements to consider in the list. TKey key The value of the key. Func <T, TKey, Int32 > comparison The comparison function. Returns Type Description Int32 Same as System.Array.BinarySearch(System.Array,System.Object) : negative index if not found which is the bitwise complement of (the index of the next element plus 1). Type Parameters Name Description T Type of the elements. TKey Type of the key. | Improve this Doc View Source CreateDisposableAction(Action) Wraps an action in a System.IDisposable interface Can be safely called if a is null (the dispose call will do nothing) and in multi threaded context: the call to action will be done once and only once by the first call to dispose. See ActionDispose(IDisposable) to adapt an IDisposable interface to an System.Action . Declaration public static IDisposable CreateDisposableAction(Action a) Parameters Type Name Description Action a The action to call when System.IDisposable.Dispose is called. Returns Type Description IDisposable | Improve this Doc View Source FuncIdentity<T>(T) Centralized identity function for any type. Declaration public static T FuncIdentity<T>(T value) Parameters Type Name Description T value Any value returned unchanged. Returns Type Description T The value provided is returned as-is. Type Parameters Name Description T Type of the function parameter and return value. | Improve this Doc View Source InterlockedAdd<T>(ref T[], T, Boolean) Atomically adds an item to an array (that can be null). Declaration public static T[] InterlockedAdd<T>(ref T[] items, T o, bool prepend = false) Parameters Type Name Description T[] items Reference (address) of the array. Can be null. T o The item to insert at position 0 (if prepend is true) or at the end. Boolean prepend True to insert the item at the head of the array (index 0) instead of at its end. Returns Type Description T[] The array containing the new item. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. | Improve this Doc View Source InterlockedAdd<T, TItem>(ref T[], Func<TItem, Boolean>, Func<TItem>, Boolean) Atomically adds an item to an existing array (that can be null) if no existing item satisfies a condition. Remarks The factory function MUST return an item that satisfies the tester function otherwise a System.InvalidOperationException is thrown. Declaration public static T[] InterlockedAdd<T, TItem>(ref T[] items, Func<TItem, bool> tester, Func<TItem> factory, bool prepend = false)where TItem : T Parameters Type Name Description T[] items Reference (address) of the array. Can be null. Func <TItem, Boolean > tester Predicate that must be satisfied for at least one existing item. Func <TItem> factory Factory that will be called if no existing item satisfies tester . It will be called only once if needed. Boolean prepend True to insert the item at the head of the array (index 0) instead of at its end. Returns Type Description T[] The array containing the an item that satisfies the tester function. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. TItem Type of the item to add: can be any specialization of T. | Improve this Doc View Source InterlockedAddUnique<T>(ref T[], T, Boolean) Atomically adds an item to an array (that can be null) if it does not already exist in the array. Declaration public static T[] InterlockedAddUnique<T>(ref T[] items, T o, bool prepend = false) Parameters Type Name Description T[] items Reference (address) of the array. Can be null. T o The item to insert at position 0 (if prepend is true) or at the end only if it does not already appear in the array. Boolean prepend True to insert the item at the head of the array (index 0) instead of at its end. Returns Type Description T[] The array containing the new item. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. | Improve this Doc View Source InterlockedRemove<T>(ref T[], T) Atomically removes an item in an array. Declaration public static T[] InterlockedRemove<T>(ref T[] items, T o) Parameters Type Name Description T[] items Reference (address) of the array. Can be null. T o Item to remove. Returns Type Description T[] The array containing the new item. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. | Improve this Doc View Source InterlockedRemove<T>(ref T[], Func<T, Boolean>) Atomically removes the first item from an array that matches a predicate. Declaration public static T[] InterlockedRemove<T>(ref T[] items, Func<T, bool> predicate) Parameters Type Name Description T[] items Reference (address) of the array. Can be null. Func <T, Boolean > predicate Predicate that identifies the item to remove. Returns Type Description T[] The array containing the new item. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. | Improve this Doc View Source InterlockedRemoveAll<T>(ref T[], Func<T, Boolean>) Atomically removes one or more items from an array that match a predicate. Declaration public static T[] InterlockedRemoveAll<T>(ref T[] items, Func<T, bool> predicate) Parameters Type Name Description T[] items Reference (address) of the array. Can be null. Func <T, Boolean > predicate Predicate that identifies items to remove. Returns Type Description T[] The array containing the new item. Note that it may differ from the \"current\" items content since another thread may have already changed it. Type Parameters Name Description T Type of the item array. | Improve this Doc View Source InterlockedSet<T>(ref T, Func<T, T>) Thread-safe way to set any reference type. Uses System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0) and System.Threading.SpinWait . Declaration public static T InterlockedSet<T>(ref T target, Func<T, T> transformer)where T : class Parameters Type Name Description T target Reference (address) to set. Func <T, T> transformer Function that knows how to obtain the desired object from the current one. This function may be called more than once. Returns Type Description T The object that has actually been set. Note that it may differ from the \"current\" target value if another thread already changed it. Type Parameters Name Description T Any reference type. | Improve this Doc View Source InterlockedSet<T, TArg>(ref T, TArg, Func<T, TArg, T>) Thread-safe way to set any reference type. Uses System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0) and System.Threading.SpinWait . Declaration public static T InterlockedSet<T, TArg>(ref T target, TArg a, Func<T, TArg, T> transformer)where T : class Parameters Type Name Description T target Reference (address) to set. TArg a Argument of the transformer. Func <T, TArg, T> transformer Function that knows how to obtain the desired object from the current one. This function may be called more than once. Returns Type Description T The object that has actually been set. Note that it may differ from the \"current\" target value if another thread already changed it. Type Parameters Name Description T Any reference type. TArg Type of the first parameter."
  },
  "api/CK.Core.Util.Hash.html": {
    "href": "api/CK.Core.Util.Hash.html",
    "title": "Class Util.Hash | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Util.Hash Provides methods to combine hash values: use StartValue and then chain calls to the Combine methods. Based on Daniel J. Bernstein algorithm ( http://cr.yp.to/cdb/cdb.txt ). Inheritance Object Util.Hash Namespace :CK.Core Assembly :CK.Core.dll Syntax public class Hash Properties | Improve this Doc View Source StartValue Gets a very classical start value (see remarks) that can be then be used by the multiple Combine methods. Use System.Int64.GetHashCode to obtain a final integer (Int32) hash code. Remarks It seems that this value has nothing special (mathematically speaking) except that it has been used and reused by many people since DJB choose it. Declaration public static long StartValue { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source Combine(Int64, IEnumerable) Combines an existing hash value with multiples object's hash. Declaration public static long Combine(long hash, IEnumerable c) Parameters Type Name Description Int64 hash Current hash. IEnumerable c Multiple objects. Can be null. Returns Type Description Int64 A combined hash. | Improve this Doc View Source Combine(Int64, Int32) Combines an existing hash value with a new one. Declaration public static long Combine(long hash, int value) Parameters Type Name Description Int64 hash Current hash. Int32 value Value to combine. Returns Type Description Int64 A combined hash. | Improve this Doc View Source Combine(Int64, Object) Combines an existing hash value with an object's hash (object can be null). Declaration public static long Combine(long hash, object o) Parameters Type Name Description Int64 hash Current hash. Object o Object whose hash must be combined (can be null). Returns Type Description Int64 A combined hash. | Improve this Doc View Source Combine(Int64, Object[]) Combines an existing hash value with multiples object's written directly as parameters. Declaration public static long Combine(long hash, params object[] objects) Parameters Type Name Description Int64 hash Current hash. Object [] objects Multiple objects. Returns Type Description Int64 A combined hash."
  },
  "api/CK.Core.Util.Array.html": {
    "href": "api/CK.Core.Util.Array.html",
    "title": "Class Util.Array | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Util.Array Supports Empty () for all DNX targets. Inheritance Object Util.Array Namespace :CK.Core Assembly :CK.Core.dll Syntax public class Array Methods | Improve this Doc View Source Empty<T>() Gets an empty array for a type. Declaration public static T[] Empty<T>() Returns Type Description T[] An empty array. Type Parameters Name Description T Type of the array items."
  },
  "api/CK.Core.Tests.html": {
    "href": "api/CK.Core.Tests.html",
    "title": "Namespace CK.Core.Tests | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Core.Tests Classes AddServiceImpl Animal AppSettingsTests Canidae CKExceptionTests CollectionExtensionTests CriticalErrorCollectorTests DisposableThatReenterClearWhenDisposed EmptyClass EnumerableExtensionTests FileUtilTests Mammal MultServiceImpl ProvidedClass ServiceContainerTests StringMatcherCoreTests SubstractServiceImpl TemporaryFileTests TraitsTests This class test operations on CKTrait (FindOrCreate, Intersect, etc.). UtilInterlockedTests Interfaces IAddService IAddServiceBase IAddServiceDerived IMultService ISubstractService"
  },
  "api/CK.Core.Tests.UtilInterlockedTests.html": {
    "href": "api/CK.Core.Tests.UtilInterlockedTests.html",
    "title": "Class UtilInterlockedTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class UtilInterlockedTests Inheritance Object UtilInterlockedTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class UtilInterlockedTests Methods | Improve this Doc View Source InterlockedAdd_atomically_adds_an_item_to_an_array() Declaration [Test] public void InterlockedAdd_atomically_adds_an_item_to_an_array() | Improve this Doc View Source InterlockedAdd_can_add_an_item_in_front_of_an_array() Declaration [Test] public void InterlockedAdd_can_add_an_item_in_front_of_an_array() | Improve this Doc View Source InterlockedAdd_item_under_condition() Declaration [Test] public void InterlockedAdd_item_under_condition() | Improve this Doc View Source InterlockedAddUnique_tests_the_occurrence_of_the_item() Declaration [Test] public void InterlockedAddUnique_tests_the_occurrence_of_the_item() | Improve this Doc View Source InterlockedRemove_an_item_from_an_array() Declaration [Test] public void InterlockedRemove_an_item_from_an_array() | Improve this Doc View Source InterlockedRemove_removes_the_first_item_that_matches_a_condition() Declaration [Test] public void InterlockedRemove_removes_the_first_item_that_matches_a_condition() | Improve this Doc View Source InterlockedRemoveAll_items_that_match_a_condition() Declaration [Test] public void InterlockedRemoveAll_items_that_match_a_condition()"
  },
  "api/CK.Core.Tests.TraitsTests.html": {
    "href": "api/CK.Core.Tests.TraitsTests.html",
    "title": "Class TraitsTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TraitsTests This class test operations on CKTrait (FindOrCreate, Intersect, etc.). Inheritance Object TraitsTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"CKTrait\")] public class TraitsTests Constructors | Improve this Doc View Source TraitsTests() Declaration public TraitsTests() Methods | Improve this Doc View Source Comparing_traits() Declaration [Test] public void Comparing_traits() | Improve this Doc View Source Contains_is_IsSupersetOf() Declaration [Test] public void Contains_is_IsSupersetOf() | Improve this Doc View Source EmptyTrait_is_everywhere() Declaration [Test] public void EmptyTrait_is_everywhere() | Improve this Doc View Source Setup() Declaration [SetUp] public void Setup() | Improve this Doc View Source test_AtomicTrait_parsing() Declaration [Test] public void test_AtomicTrait_parsing() | Improve this Doc View Source test_Combined_traits_parsing() Declaration [Test] public void test_Combined_traits_parsing() | Improve this Doc View Source test_Except_of_traits() Declaration [Test] public void test_Except_of_traits() | Improve this Doc View Source test_Fallbacks_generation() Declaration [Test] public void test_Fallbacks_generation() | Improve this Doc View Source test_Fallbacks_ordering() Declaration [Test] public void test_Fallbacks_ordering() | Improve this Doc View Source test_FindIfAllExist() Declaration [Test] public void test_FindIfAllExist() | Improve this Doc View Source test_FindOnlyExisting_with_its_optional_collector() Declaration [Test] public void test_FindOnlyExisting_with_its_optional_collector() | Improve this Doc View Source test_Intersect_between_traits() Declaration [Test] public void test_Intersect_between_traits() | Improve this Doc View Source test_Union_of_traits() Declaration [Test] public void test_Union_of_traits() | Improve this Doc View Source Toggle_is_SymmetricExcept() Declaration [Test] public void Toggle_is_SymmetricExcept() | Improve this Doc View Source trait_separator_can_be_changed_from_the_default_pipe() Declaration [Test] public void trait_separator_can_be_changed_from_the_default_pipe() | Improve this Doc View Source Traits_must_belong_to_the_same_context() Declaration [Test] public void Traits_must_belong_to_the_same_context()"
  },
  "api/CK.Core.Tests.TemporaryFileTests.html": {
    "href": "api/CK.Core.Tests.TemporaryFileTests.html",
    "title": "Class TemporaryFileTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TemporaryFileTests Inheritance Object TemporaryFileTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"File\")] public class TemporaryFileTests Methods | Improve this Doc View Source an_empty_extension_is_like_no_extension() Declaration [Test] public void an_empty_extension_is_like_no_extension() | Improve this Doc View Source TemporaryFile_has_FileAttributes_Temporary_by_default() Declaration [Test] public void TemporaryFile_has_FileAttributes_Temporary_by_default() | Improve this Doc View Source TemporaryFileDetachTest() Declaration [Test] public void TemporaryFileDetachTest() | Improve this Doc View Source TemporaryFileExtensionTest() Declaration [Test] public void TemporaryFileExtensionTest()"
  },
  "api/CK.Core.Tests.SubstractServiceImpl.html": {
    "href": "api/CK.Core.Tests.SubstractServiceImpl.html",
    "title": "Class SubstractServiceImpl | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SubstractServiceImpl Inheritance Object SubstractServiceImpl Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class SubstractServiceImpl : ISubstractService Methods | Improve this Doc View Source Substract(Int32, Int32) Declaration public int Substract(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.Tests.StringMatcherCoreTests.html": {
    "href": "api/CK.Core.Tests.StringMatcherCoreTests.html",
    "title": "Class StringMatcherCoreTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringMatcherCoreTests Inheritance Object StringMatcherCoreTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class StringMatcherCoreTests Methods | Improve this Doc View Source match_methods_must_set_an_error() Declaration public void match_methods_must_set_an_error() | Improve this Doc View Source matching_FileNameUniqueTimeUtcFormat() Declaration [Test] public void matching_FileNameUniqueTimeUtcFormat()"
  },
  "api/CK.Core.Tests.ServiceContainerTests.html": {
    "href": "api/CK.Core.Tests.ServiceContainerTests.html",
    "title": "Class ServiceContainerTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ServiceContainerTests Inheritance Object ServiceContainerTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] [ExcludeFromCodeCoverage] public class ServiceContainerTests Methods | Improve this Doc View Source checking_null_arguments() Declaration [Test] public void checking_null_arguments() | Improve this Doc View Source clearing_a_container_disposes_all_its_registered_IDisposable_objects_and_remove_reentrancy_is_handled() Declaration [Test] public void clearing_a_container_disposes_all_its_registered_IDisposable_objects_and_remove_reentrancy_is_handled() | Improve this Doc View Source container_can_be_chained_an_loops_are_detected() Declaration [Test] public void container_can_be_chained_an_loops_are_detected() | Improve this Doc View Source IServiceContainerConformanceTest(ISimpleServiceContainer) Tests the fact that the ISimpleServiceContainer set as parameter is conform to the way the interface should be used. Declaration public void IServiceContainerConformanceTest(ISimpleServiceContainer container) Parameters Type Name Description ISimpleServiceContainer container the ISimpleServiceContainer implementation to test | Improve this Doc View Source IServiceContainerConformanceTest<T>(ISimpleServiceContainer, ISimpleServiceContainer, T) Tests the fact that the ISimpleServiceContainer set as parameter is conform to the way the interface should be used. Declaration public void IServiceContainerConformanceTest<T>(ISimpleServiceContainer container, ISimpleServiceContainer baseProvider, T baseProviderServiceToTest) Parameters Type Name Description ISimpleServiceContainer container the ISimpleServiceContainer implementation to test ISimpleServiceContainer baseProvider T baseProviderServiceToTest Type Parameters Name Description T the service implemented by the servicecontainer's baseprovider | Improve this Doc View Source registering_a_simple_class() Declaration [Test] public void registering_a_simple_class() | Improve this Doc View Source registering_an_implementation() Declaration [Test] public void registering_an_implementation() | Improve this Doc View Source removing_a_registered_service() Declaration [Test] public void removing_a_registered_service() | Improve this Doc View Source SimpleServiceContainer_exposes_its_own_IServiceProvier_and_ISimpleServiceContainer_implementation() Declaration [Test] public void SimpleServiceContainer_exposes_its_own_IServiceProvier_and_ISimpleServiceContainer_implementation() | Improve this Doc View Source using_onRemove_action_reentrancy_of_remove_is_handled() Declaration [Test] public void using_onRemove_action_reentrancy_of_remove_is_handled() | Improve this Doc View Source when_registering_types_they_must_match() Declaration [Test] public void when_registering_types_they_must_match()"
  },
  "api/CK.Core.Tests.ProvidedClass.html": {
    "href": "api/CK.Core.Tests.ProvidedClass.html",
    "title": "Class ProvidedClass | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ProvidedClass Inheritance Object ProvidedClass Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class ProvidedClass Constructors | Improve this Doc View Source ProvidedClass(Int32) Declaration public ProvidedClass(int age) Parameters Type Name Description Int32 age Properties | Improve this Doc View Source Age Declaration public int Age { get; set; } Property Value Type Description Int32"
  },
  "api/CK.Core.Tests.MultServiceImpl.html": {
    "href": "api/CK.Core.Tests.MultServiceImpl.html",
    "title": "Class MultServiceImpl | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultServiceImpl Inheritance Object MultServiceImpl Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class MultServiceImpl : IMultService Methods | Improve this Doc View Source Mult(Int32, Int32) Declaration public int Mult(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.Tests.Monitoring.html": {
    "href": "api/CK.Core.Tests.Monitoring.html",
    "title": "Namespace CK.Core.Tests.Monitoring | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Core.Tests.Monitoring Classes ActivityMonitorErrorLogs ActivityMonitorFilterPropagation ActivityMonitorMultiThreadTests ActivityMonitorTests ActivityMonitorTimestamp DependentActivityTests DocumentationCodeSnippets LogFilterTests SourceFilteringTests StupidStringClient StupidStringClient.Entry StupidXmlClient SystemActivityMonitorTests"
  },
  "api/CK.Core.Tests.Monitoring.SystemActivityMonitorTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.SystemActivityMonitorTests.html",
    "title": "Class SystemActivityMonitorTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SystemActivityMonitorTests Inheritance Object SystemActivityMonitorTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class SystemActivityMonitorTests Methods | Improve this Doc View Source CleanLogs() Declaration [SetUp] public void CleanLogs() | Improve this Doc View Source OnErrorEventIsSecured() Declaration [Test] public void OnErrorEventIsSecured() | Improve this Doc View Source SimpleTest() Declaration [Test] public void SimpleTest()"
  },
  "api/CK.Core.Tests.Monitoring.StupidXmlClient.html": {
    "href": "api/CK.Core.Tests.Monitoring.StupidXmlClient.html",
    "title": "Class StupidXmlClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StupidXmlClient Inheritance Object ActivityMonitorTextHelperClient StupidXmlClient Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax public class StupidXmlClient : ActivityMonitorTextHelperClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source StupidXmlClient(StringWriter) Declaration public StupidXmlClient(StringWriter s) Parameters Type Name Description StringWriter s Properties | Improve this Doc View Source InnerWriter Declaration public TextWriter InnerWriter { get; } Property Value Type Description TextWriter | Improve this Doc View Source XElements Declaration public List<XElement> XElements { get; } Property Value Type Description List < XElement > Methods | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Declaration protected override void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Declaration protected override void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration protected override void OnGroupClose(IActivityLogGroup g, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup g IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Declaration protected override void OnGroupOpen(IActivityLogGroup g) Parameters Type Name Description IActivityLogGroup g | Improve this Doc View Source OnLeaveLevel(LogLevel) Declaration protected override void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Core.Tests.Monitoring.StupidStringClient.html": {
    "href": "api/CK.Core.Tests.Monitoring.StupidStringClient.html",
    "title": "Class StupidStringClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StupidStringClient Inheritance Object StupidStringClient Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax public class StupidStringClient : IActivityMonitorClient Constructors | Improve this Doc View Source StupidStringClient(Boolean, Boolean) Declaration public StupidStringClient(bool writeTags = false, bool writeConclusionTraits = false) Parameters Type Name Description Boolean writeTags Boolean writeConclusionTraits Fields | Improve this Doc View Source Entries Declaration public readonly List<StupidStringClient.Entry> Entries Field Value Type Description List < StupidStringClient.Entry > Properties | Improve this Doc View Source WriteConclusionTraits Declaration public bool WriteConclusionTraits { get; } Property Value Type Description Boolean | Improve this Doc View Source Writer Declaration public StringWriter Writer { get; } Property Value Type Description StringWriter | Improve this Doc View Source WriteTags Declaration public bool WriteTags { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Core.Tests.Monitoring.StupidStringClient.Entry.html": {
    "href": "api/CK.Core.Tests.Monitoring.StupidStringClient.Entry.html",
    "title": "Class StupidStringClient.Entry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StupidStringClient.Entry Inheritance Object StupidStringClient.Entry Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax public class Entry Constructors | Improve this Doc View Source Entry(ActivityMonitorLogData) Declaration public Entry(ActivityMonitorLogData d) Parameters Type Name Description ActivityMonitorLogData d | Improve this Doc View Source Entry(IActivityLogGroup) Declaration public Entry(IActivityLogGroup d) Parameters Type Name Description IActivityLogGroup d Fields | Improve this Doc View Source Exception Declaration public readonly Exception Exception Field Value Type Description Exception | Improve this Doc View Source Level Declaration public readonly LogLevel Level Field Value Type Description LogLevel | Improve this Doc View Source LogTime Declaration public readonly DateTimeStamp LogTime Field Value Type Description DateTimeStamp | Improve this Doc View Source Tags Declaration public readonly CKTrait Tags Field Value Type Description CKTrait | Improve this Doc View Source Text Declaration public readonly string Text Field Value Type Description String"
  },
  "api/CK.Core.Tests.Monitoring.SourceFilteringTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.SourceFilteringTests.html",
    "title": "Class SourceFilteringTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SourceFilteringTests Inheritance Object SourceFilteringTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class SourceFilteringTests Methods | Improve this Doc View Source FileNamesAreInternedString() Declaration [Test] public void FileNamesAreInternedString() | Improve this Doc View Source SourceFileMinimalFilterTest() Declaration [Test] public void SourceFileMinimalFilterTest() | Improve this Doc View Source SourceFileOverrideFilterTest() Declaration [Test] public void SourceFileOverrideFilterTest()"
  },
  "api/CK.Core.Tests.Monitoring.LogFilterTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.LogFilterTests.html",
    "title": "Class LogFilterTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class LogFilterTests Inheritance Object LogFilterTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class LogFilterTests Methods | Improve this Doc View Source CombineLevelTests() Declaration [Test] public void CombineLevelTests() | Improve this Doc View Source CombineLogTests() Declaration [Test] public void CombineLogTests() | Improve this Doc View Source ParseTests() Declaration [Test] public void ParseTests() | Improve this Doc View Source ToStringTests() Declaration [Test] public void ToStringTests()"
  },
  "api/CK.Core.Tests.Monitoring.DocumentationCodeSnippets.html": {
    "href": "api/CK.Core.Tests.Monitoring.DocumentationCodeSnippets.html",
    "title": "Class DocumentationCodeSnippets | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DocumentationCodeSnippets Inheritance Object DocumentationCodeSnippets Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] [Category(\"ActivityMonitor\")] public class DocumentationCodeSnippets Methods | Improve this Doc View Source SimpleUsage() Declaration [Test] public void SimpleUsage()"
  },
  "api/CK.Core.Tests.Monitoring.DependentActivityTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.DependentActivityTests.html",
    "title": "Class DependentActivityTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DependentActivityTests Inheritance Object DependentActivityTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class DependentActivityTests Methods | Improve this Doc View Source DependentTokenAPI() Declaration [Test] public void DependentTokenAPI() | Improve this Doc View Source ParseDependentMessageWithTopic() Declaration [Test] public void ParseDependentMessageWithTopic() | Improve this Doc View Source ParseDependentMessageWithUniquifier() Declaration [Test] public void ParseDependentMessageWithUniquifier()"
  },
  "api/CK.Core.Tests.Monitoring.ActivityMonitorTimestamp.html": {
    "href": "api/CK.Core.Tests.Monitoring.ActivityMonitorTimestamp.html",
    "title": "Class ActivityMonitorTimestamp | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorTimestamp Inheritance Object ActivityMonitorTimestamp Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class ActivityMonitorTimestamp Methods | Improve this Doc View Source TestArtificialCollision() Declaration [Test] public void TestArtificialCollision() | Improve this Doc View Source TestNaturalCollision() Declaration [Test] public void TestNaturalCollision()"
  },
  "api/CK.Core.Tests.Monitoring.ActivityMonitorTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.ActivityMonitorTests.html",
    "title": "Class ActivityMonitorTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorTests Inheritance Object ActivityMonitorTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] [Category(\"ActivityMonitor\")] public class ActivityMonitorTests Methods | Improve this Doc View Source AsyncSetMininimalFilter() Declaration [Test] public void AsyncSetMininimalFilter() | Improve this Doc View Source automatic_configuration_of_monitors_just_uses_ActivityMonitor_AutoConfiguration_delegate() Declaration [Test] public void automatic_configuration_of_monitors_just_uses_ActivityMonitor_AutoConfiguration_delegate() | Improve this Doc View Source CheckActivityMonitorErrors() Declaration [TearDown] public void CheckActivityMonitorErrors() | Improve this Doc View Source ClearActivityMonitorErrors() Declaration [SetUp] public void ClearActivityMonitorErrors() | Improve this Doc View Source CloseMismatch() Declaration [Test] [Category(\"Console\")] public void CloseMismatch() | Improve this Doc View Source closing_group_restores_previous_AutoTags_and_MinimalFilter() Declaration [Test] public void closing_group_restores_previous_AutoTags_and_MinimalFilter() | Improve this Doc View Source ClosingWhenNoGroupIsOpened() Declaration [Test] [Category(\"Console\")] public void ClosingWhenNoGroupIsOpened() | Improve this Doc View Source DefaultImpl() Declaration [Test] [Category(\"Console\")] public void DefaultImpl() | Improve this Doc View Source DumpAggregatedException() Declaration [Test] [Category(\"Console\")] public void DumpAggregatedException() | Improve this Doc View Source DumpException() Declaration [Test] [Category(\"Console\")] public void DumpException() | Improve this Doc View Source ErrorCounterTests() Declaration [Test] [Category(\"Console\")] public void ErrorCounterTests() | Improve this Doc View Source FilteredTextWriterTests() Declaration [Test] public void FilteredTextWriterTests() | Improve this Doc View Source FilterLevel() Declaration [Test] [Category(\"Console\")] public void FilterLevel() | Improve this Doc View Source MultipleConclusions() Declaration [Test] [Category(\"Console\")] public void MultipleConclusions() | Improve this Doc View Source Off_FilterLevel_prevents_all_logs_even_UnfilteredLogs() Declaration [Test] public void Off_FilterLevel_prevents_all_logs_even_UnfilteredLogs() | Improve this Doc View Source OnError_fires_synchronously() Declaration [Test] public void OnError_fires_synchronously() | Improve this Doc View Source Overloads() Declaration [Test] public void Overloads() | Improve this Doc View Source OverloadsWithTraits() Declaration [Test] public void OverloadsWithTraits() | Improve this Doc View Source PathCatcherTests() Declaration [Test] [Category(\"Console\")] public void PathCatcherTests() | Improve this Doc View Source PathCatcherToStringPath() Declaration [Test] public void PathCatcherToStringPath() | Improve this Doc View Source registering_a_null_bridge_or_a_bridge_to_an_already_briged_target_is_an_error() Declaration [Test] [Category(\"Console\")] public void registering_a_null_bridge_or_a_bridge_to_an_already_briged_target_is_an_error() | Improve this Doc View Source registering_a_null_client_is_an_error() Declaration [Test] [Category(\"ActivityMonitor\")] public void registering_a_null_client_is_an_error() | Improve this Doc View Source registering_multiple_times_the_same_client_is_an_error() Declaration [Test] public void registering_multiple_times_the_same_client_is_an_error() | Improve this Doc View Source sending_a_null_or_empty_text_is_transformed_into_no_log_text() Declaration [Test] public void sending_a_null_or_empty_text_is_transformed_into_no_log_text() | Improve this Doc View Source SimpleCollectorTest() Declaration [Test] public void SimpleCollectorTest() | Improve this Doc View Source when_bridging_unbalanced_close_groups_are_automatically_handled() Declaration [Test] [Category(\"Console\")] public void when_bridging_unbalanced_close_groups_are_automatically_handled() | Improve this Doc View Source when_bridging_unbalanced_close_groups_are_automatically_handled_more_tests() Declaration [Test] [Category(\"Console\")] public void when_bridging_unbalanced_close_groups_are_automatically_handled_more_tests()"
  },
  "api/CK.Core.Tests.Monitoring.ActivityMonitorMultiThreadTests.html": {
    "href": "api/CK.Core.Tests.Monitoring.ActivityMonitorMultiThreadTests.html",
    "title": "Class ActivityMonitorMultiThreadTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorMultiThreadTests Inheritance Object ActivityMonitorMultiThreadTests Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] [Category(\"ActivityMonitor\")] public class ActivityMonitorMultiThreadTests Methods | Improve this Doc View Source buggy_clients_are_removed_from_Output() Declaration [Test] public void buggy_clients_are_removed_from_Output() | Improve this Doc View Source concurrent_access_are_detected() Declaration [Test] public void concurrent_access_are_detected() | Improve this Doc View Source simple_reentrancy_detection() Declaration [Test] public void simple_reentrancy_detection()"
  },
  "api/CK.Core.Tests.Monitoring.ActivityMonitorFilterPropagation.html": {
    "href": "api/CK.Core.Tests.Monitoring.ActivityMonitorFilterPropagation.html",
    "title": "Class ActivityMonitorFilterPropagation | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorFilterPropagation Inheritance Object ActivityMonitorFilterPropagation Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] public class ActivityMonitorFilterPropagation Methods | Improve this Doc View Source ClientFilterPropagatesToMonitor() Declaration [Test] public void ClientFilterPropagatesToMonitor() | Improve this Doc View Source ThreadSafeOnClientMinimalFilterChanged() Declaration [Test] public void ThreadSafeOnClientMinimalFilterChanged()"
  },
  "api/CK.Core.Tests.Monitoring.ActivityMonitorErrorLogs.html": {
    "href": "api/CK.Core.Tests.Monitoring.ActivityMonitorErrorLogs.html",
    "title": "Class ActivityMonitorErrorLogs | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorErrorLogs Inheritance Object ActivityMonitorErrorLogs Namespace :CK.Core.Tests.Monitoring Assembly :CK.ActivityMonitor.Tests.dll Syntax [TestFixture] [Category(\"ActivityMonitor\")] public class ActivityMonitorErrorLogs Methods | Improve this Doc View Source MonitorErrorTrap() Declaration [Test] public void MonitorErrorTrap()"
  },
  "api/CK.Core.Tests.Mammal.html": {
    "href": "api/CK.Core.Tests.Mammal.html",
    "title": "Class Mammal | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Mammal Inheritance Object Animal Mammal Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class Mammal : Animal Constructors | Improve this Doc View Source Mammal(String, Int32) Declaration public Mammal(string name, int gestationPeriod = 12) Parameters Type Name Description String name Int32 gestationPeriod Properties | Improve this Doc View Source GestationPeriod Declaration public int GestationPeriod { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Core.Tests.ISubstractService.html": {
    "href": "api/CK.Core.Tests.ISubstractService.html",
    "title": "Interface ISubstractService | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ISubstractService Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public interface ISubstractService Methods | Improve this Doc View Source Substract(Int32, Int32) Declaration int Substract(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.Tests.IMultService.html": {
    "href": "api/CK.Core.Tests.IMultService.html",
    "title": "Interface IMultService | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IMultService Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public interface IMultService Methods | Improve this Doc View Source Mult(Int32, Int32) Declaration int Mult(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.Tests.IAddServiceDerived.html": {
    "href": "api/CK.Core.Tests.IAddServiceDerived.html",
    "title": "Interface IAddServiceDerived | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IAddServiceDerived Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public interface IAddServiceDerived : IAddService, IAddServiceBase"
  },
  "api/CK.Core.Tests.IAddServiceBase.html": {
    "href": "api/CK.Core.Tests.IAddServiceBase.html",
    "title": "Interface IAddServiceBase | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IAddServiceBase Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public interface IAddServiceBase"
  },
  "api/CK.Core.Tests.IAddService.html": {
    "href": "api/CK.Core.Tests.IAddService.html",
    "title": "Interface IAddService | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IAddService Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public interface IAddService : IAddServiceBase Methods | Improve this Doc View Source Add(Int32, Int32) Declaration int Add(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.Tests.FileUtilTests.html": {
    "href": "api/CK.Core.Tests.FileUtilTests.html",
    "title": "Class FileUtilTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class FileUtilTests Inheritance Object FileUtilTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"File\")] public class FileUtilTests Methods | Improve this Doc View Source CheckForWriteAccess_is_immediately_true_when_file_does_not_exist_or_is_writeable() Declaration [Test] public void CheckForWriteAccess_is_immediately_true_when_file_does_not_exist_or_is_writeable() | Improve this Doc View Source CheckForWriteAccess_is_not_exact_but_works(Int32, Int32, Boolean) Declaration [TestCase(100, 5, false)] [TestCase(100, 50, false)] [TestCase(10, 20, true)] [TestCase(1000, 1090, true)] [TestCase(20, 0, false, Description = \"20 millisecond lock works only with nbMaxMilliSecond = 0.\")] public void CheckForWriteAccess_is_not_exact_but_works(int lockTimeMilliSecond, int nbMaxMilliSecond, bool result) Parameters Type Name Description Int32 lockTimeMilliSecond Int32 nbMaxMilliSecond Boolean result | Improve this Doc View Source GetLastWriteTimeUtc_returns_FileUtil_MissingFileLastWriteTimeUtc() Declaration [Test] public void GetLastWriteTimeUtc_returns_FileUtil_MissingFileLastWriteTimeUtc() | Improve this Doc View Source NormalizePathSeparator_uses_current_environment() Declaration [Test] public void NormalizePathSeparator_uses_current_environment() | Improve this Doc View Source test_CopyDirectory_helper() Declaration [Test] public void test_CopyDirectory_helper() | Improve this Doc View Source test_IndexOfInvalidFileNameChars() Declaration [Test] public void test_IndexOfInvalidFileNameChars() | Improve this Doc View Source test_IndexOfInvalidPathChars() Declaration [Test] public void test_IndexOfInvalidPathChars() | Improve this Doc View Source UniqueTimedFile_is_28_characters_long_as_a_string() Declaration [Test] public void UniqueTimedFile_is_28_characters_long_as_a_string() | Improve this Doc View Source WriteUniqueTimedFile() Declaration [Test] public void WriteUniqueTimedFile() | Improve this Doc View Source WriteUniqueTimedFile_automatically_numbers_files() Declaration [Test] public void WriteUniqueTimedFile_automatically_numbers_files() | Improve this Doc View Source WriteUniqueTimedFile_clash_never_happen() Declaration [Test] public void WriteUniqueTimedFile_clash_never_happen()"
  },
  "api/CK.Monitoring.SourceFilterApplyMode.html": {
    "href": "api/CK.Monitoring.SourceFilterApplyMode.html",
    "title": "Enum SourceFilterApplyMode | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum SourceFilterApplyMode Defines how the GrandOutputConfiguration applies its SourceOverrideFilter to the application domain's global FilterSource . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public enum SourceFilterApplyMode Fields | Improve this Doc View Source Apply Applies the filters. Declaration Apply = 3 Field Value Type Description SourceFilterApplyMode | Improve this Doc View Source Clear Clears the current FilterSource . Declaration Clear = 1 Field Value Type Description SourceFilterApplyMode | Improve this Doc View Source ClearThenApply Clears the current FilterSource and then applies the new ones. Declaration ClearThenApply = 2 Field Value Type Description SourceFilterApplyMode | Improve this Doc View Source None Source filters is ignored. Declaration None = 0 Field Value Type Description SourceFilterApplyMode"
  },
  "api/CK.Monitoring.ParentedLogEntry.html": {
    "href": "api/CK.Monitoring.ParentedLogEntry.html",
    "title": "Class ParentedLogEntry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ParentedLogEntry Parented log entry binds an entry to its parent group and can be a missing entry (a line or group opening or closing that we know it exists but have no data for it or only their LogTime ). Inheritance Object ParentedLogEntry Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class ParentedLogEntry Fields | Improve this Doc View Source Entry The entry itself. Declaration public readonly ILogEntry Entry Field Value Type Description ILogEntry | Improve this Doc View Source Parent Parent entry. Null when there is no group above. Declaration public readonly ParentedLogEntry Parent Field Value Type Description ParentedLogEntry Properties | Improve this Doc View Source IsMissing Gets whether this is actually a missing entry (it can be a group opening, closing or a mere line): we do not have data for it, except, may be its LogTime (if the log time is not known, the Entry 's LogTime is Unknown ). Declaration public bool IsMissing { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source CollectPath(Action<ParentedLogEntry>, Boolean) Collects the path of this ParentedLogEntry , optionally terminated with this entry. Declaration public void CollectPath(Action<ParentedLogEntry> collector, bool addThis = false) Parameters Type Name Description Action < ParentedLogEntry > collector Action for each item. Boolean addThis Set it to true to append to also call the collector with this entry. | Improve this Doc View Source GetPath(List<ILogEntry>, Boolean) Collects path of ILogEntry in a reusable list (the buffer is System.Collections.Generic.List`1.Clear first). Declaration public void GetPath(List<ILogEntry> reusableBuffer, bool addThis = false) Parameters Type Name Description List < ILogEntry > reusableBuffer List that will be cleared and filled with parents. Boolean addThis Set it to true to append to also add this entry."
  },
  "api/CK.Monitoring.MultiLogReader.html": {
    "href": "api/CK.Monitoring.MultiLogReader.html",
    "title": "Class MultiLogReader | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader This reader process multiples .ckmon files (possibly in different steps: it internally aggregates the result) and can create MultiLogReader.ActivityMap objects on demand. It is a thread safe object (the ActivityMap is immutable). Inheritance Object MultiLogReader Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class MultiLogReader : IDisposable Constructors | Improve this Doc View Source MultiLogReader() Initializes a new MultiLogReader . Declaration public MultiLogReader() Methods | Improve this Doc View Source Add(IEnumerable<String>) Adds a bunch of log files. Declaration public List<MultiLogReader.RawLogFile> Add(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files Set of files to add. Returns Type Description List < MultiLogReader.RawLogFile > List of newly added files (already known files are skipped). | Improve this Doc View Source Add(String, out Boolean) Adds a file to this reader. This is thread safe (can be called from any thread at any time). Declaration public MultiLogReader.RawLogFile Add(string filePath, out bool newFileIndex) Parameters Type Name Description String filePath The path of the file to add. Boolean newFileIndex True if the file has actually been added, false it it was already added. Returns Type Description MultiLogReader.RawLogFile The RawLogFile object (newly created or already existing). | Improve this Doc View Source Dispose() Releases this reader. Declaration public void Dispose() | Improve this Doc View Source GetActivityMap() Gets the MultiLogReader.ActivityMap from this reader. Declaration public MultiLogReader.ActivityMap GetActivityMap() Returns Type Description MultiLogReader.ActivityMap An immutable snapshot of this reader's content."
  },
  "api/CK.Monitoring.MultiLogReader.RawLogFileMonitorOccurence.html": {
    "href": "api/CK.Monitoring.MultiLogReader.RawLogFileMonitorOccurence.html",
    "title": "Class MultiLogReader.RawLogFileMonitorOccurence | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader.RawLogFileMonitorOccurence Immutable object that describes the occurrence of a Monitor in a MultiLogReader.RawLogFile . Inheritance Object MultiLogReader.RawLogFileMonitorOccurence Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class RawLogFileMonitorOccurence Fields | Improve this Doc View Source FirstOffset First offset for this MonitorId in this LogFile . Declaration public readonly long FirstOffset Field Value Type Description Int64 | Improve this Doc View Source LogFile The MultiLogReader.RawLogFile . Declaration public readonly MultiLogReader.RawLogFile LogFile Field Value Type Description MultiLogReader.RawLogFile | Improve this Doc View Source MonitorId The monitor's identifier. Declaration public readonly Guid MonitorId Field Value Type Description Guid Properties | Improve this Doc View Source FirstEntryTime First entry time for this MonitorId in this LogFile . Declaration public DateTimeStamp FirstEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source LastEntryTime Last entry time for this MonitorId in this LogFile . Declaration public DateTimeStamp LastEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source LastOffset Last offset for this MonitorId in this LogFile . Declaration public long LastOffset { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source CreateFilteredReader(Int64) Creates and opens a LogReader that reads unicast entries only from this monitor. The reader is initially positioned before the entry (i.e. MoveNext() must be called). Declaration public LogReader CreateFilteredReader(long streamOffset) Parameters Type Name Description Int64 streamOffset Initial stream position. Returns Type Description LogReader A log reader that will read only entries from this monitor. | Improve this Doc View Source CreateFilteredReaderAndMoveTo(DateTimeStamp) Opens a LogReader that reads unicast entries only from this monitor and positions it on the first entry with the given time (i.e. MoveNext() has been called). Declaration public LogReader CreateFilteredReaderAndMoveTo(DateTimeStamp logTime) Parameters Type Name Description DateTimeStamp logTime Log time. Must exist in the stream otherwise an exception is thrown. Returns Type Description LogReader A log reader that will read only entries from this monitor."
  },
  "api/CK.Monitoring.MultiLogReader.RawLogFile.html": {
    "href": "api/CK.Monitoring.MultiLogReader.RawLogFile.html",
    "title": "Class MultiLogReader.RawLogFile | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader.RawLogFile Immutable object that contains a description of the content of a raw log file. Inheritance Object MultiLogReader.RawLogFile Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class RawLogFile Properties | Improve this Doc View Source BadEndOfFile Gets whether this file does not end with the end of stream marker (a zero byte). Declaration public bool BadEndOfFile { get; } Property Value Type Description Boolean | Improve this Doc View Source Error Gets the System.Exception that occurred while reading file. Declaration public Exception Error { get; } Property Value Type Description Exception | Improve this Doc View Source FileName Gets the file name. Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source FileVersion Gets the file version. Declaration public int FileVersion { get; } Property Value Type Description Int32 | Improve this Doc View Source FirstEntryTime Gets the first entry time. Declaration public DateTimeStamp FirstEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source IsValidFile Gets whether no Error occurred and there is no BadEndOfFile . Declaration public bool IsValidFile { get; } Property Value Type Description Boolean | Improve this Doc View Source LastEntryTime Gets the last entry time. Declaration public DateTimeStamp LastEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source Monitors Gets the different monitors that appear in this file. Declaration public IReadOnlyList<MultiLogReader.RawLogFileMonitorOccurence> Monitors { get; } Property Value Type Description IReadOnlyList < MultiLogReader.RawLogFileMonitorOccurence > | Improve this Doc View Source TotalEntryCount Gets the total number of entries. Declaration public int TotalEntryCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ToString() Overridden to return details about its content. Declaration public override string ToString() Returns Type Description String Detailed string."
  },
  "api/CK.Monitoring.MultiLogReader.Monitor.html": {
    "href": "api/CK.Monitoring.MultiLogReader.Monitor.html",
    "title": "Class MultiLogReader.Monitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader.Monitor Immutable information that describes one monitor's content. Inheritance Object MultiLogReader.Monitor Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class Monitor Properties | Improve this Doc View Source AllTags Gets the weighted occurrences of each tags that have been logged in this monitor. Declaration public IReadOnlyList<KeyValuePair<CKTrait, int>> AllTags { get; } Property Value Type Description IReadOnlyList < KeyValuePair < CKTrait , Int32 >> | Improve this Doc View Source Files Gets the different files where entries from this monitor appear. Declaration public IReadOnlyList<MultiLogReader.RawLogFileMonitorOccurence> Files { get; } Property Value Type Description IReadOnlyList < MultiLogReader.RawLogFileMonitorOccurence > | Improve this Doc View Source FirstDepth Gets the very first known depth for this monitor. Declaration public int FirstDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source FirstEntryTime Gets the very first known entry time for this monitor. Declaration public DateTimeStamp FirstEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source LastDepth Gets the very last known depth for this monitor. Declaration public int LastDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source LastEntryTime Gets the very last known entry time for this monitor. Declaration public DateTimeStamp LastEntryTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source MonitorId Gets the monitor's identifier. Declaration public Guid MonitorId { get; } Property Value Type Description Guid Methods | Improve this Doc View Source ReadFirstPage(DateTimeStamp, Int32) Loads the first available entries starting at a given time. Declaration public MultiLogReader.Monitor.LivePage ReadFirstPage(DateTimeStamp firstLogTime, int pageLength) Parameters Type Name Description DateTimeStamp firstLogTime The first log time. Int32 pageLength The length of pages. Must be greater than 0. Returns Type Description MultiLogReader.Monitor.LivePage The first MultiLogReader.Monitor.LivePage from which next pages can be retrieved. | Improve this Doc View Source ReadFirstPage(Int32) Loads the first available entries. Declaration public MultiLogReader.Monitor.LivePage ReadFirstPage(int pageLength) Parameters Type Name Description Int32 pageLength The length of pages. Must be greater than 0. Returns Type Description MultiLogReader.Monitor.LivePage The first MultiLogReader.Monitor.LivePage from which next pages can be retrieved. | Improve this Doc View Source Replay(IActivityMonitor, IActivityMonitor) Replays this monitor's content into another monitor. Declaration public void Replay(IActivityMonitor replay, IActivityMonitor m = null) Parameters Type Name Description IActivityMonitor replay The target monitor. Can not be null. IActivityMonitor m Optional monitor (nothing is logged when null)."
  },
  "api/CK.Monitoring.MultiLogReader.Monitor.LivePage.html": {
    "href": "api/CK.Monitoring.MultiLogReader.Monitor.LivePage.html",
    "title": "Class MultiLogReader.Monitor.LivePage | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader.Monitor.LivePage A page gives access to Entries by unifying all the raw log files and removing duplicates from them. Pages are sequentially accessed from a first page (obtained by ) and the by calling ForwardPage() . Inheritance Object MultiLogReader.Monitor.LivePage Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class LivePage : IDisposable Properties | Improve this Doc View Source Entries Gets the log entries of the current page. Declaration public IReadOnlyList<ParentedLogEntry> Entries { get; } Property Value Type Description IReadOnlyList < ParentedLogEntry > | Improve this Doc View Source PageLength Gets the page length. Declaration public int PageLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Dispose() Closes all resources. Declaration public void Dispose() | Improve this Doc View Source ForwardPage() Loads the next page. Declaration public int ForwardPage() Returns Type Description Int32 The number of entries."
  },
  "api/CK.Monitoring.MultiLogReader.ActivityMap.html": {
    "href": "api/CK.Monitoring.MultiLogReader.ActivityMap.html",
    "title": "Class MultiLogReader.ActivityMap | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MultiLogReader.ActivityMap Immutable snapshot of a MultiLogReader 's content. Inheritance Object MultiLogReader.ActivityMap Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class ActivityMap Properties | Improve this Doc View Source AllFiles Gets all files (even the ones for which IsValidFile is false). Declaration public IReadOnlyCollection<MultiLogReader.RawLogFile> AllFiles { get; } Property Value Type Description IReadOnlyCollection < MultiLogReader.RawLogFile > | Improve this Doc View Source FirstEntryDate Gets the very first entry time (among all Monitors ). Declaration public DateTime FirstEntryDate { get; } Property Value Type Description DateTime | Improve this Doc View Source LastEntryDate Gets the very last entry time (among all Monitors ). Declaration public DateTime LastEntryDate { get; } Property Value Type Description DateTime | Improve this Doc View Source Monitors Gets all the monitors that this ActivityMap contains ordered by their FirstEntryTime . Declaration public IReadOnlyList<MultiLogReader.Monitor> Monitors { get; } Property Value Type Description IReadOnlyList < MultiLogReader.Monitor > | Improve this Doc View Source ValidFiles Gets the valid files (see IsValidFile ). Declaration public IReadOnlyCollection<MultiLogReader.RawLogFile> ValidFiles { get; } Property Value Type Description IReadOnlyCollection < MultiLogReader.RawLogFile > Methods | Improve this Doc View Source FindMonitor(Guid) Finds a MultiLogReader.Monitor by its identifier. Declaration public MultiLogReader.Monitor FindMonitor(Guid monitorId) Parameters Type Name Description Guid monitorId The monitor's identifier. Returns Type Description MultiLogReader.Monitor The monitor or null if not found."
  },
  "api/CK.Monitoring.MulticastLogEntryWithOffset.html": {
    "href": "api/CK.Monitoring.MulticastLogEntryWithOffset.html",
    "title": "Struct MulticastLogEntryWithOffset | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct MulticastLogEntryWithOffset Immutable capture of a log Entry and its Offset . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public struct MulticastLogEntryWithOffset Constructors | Improve this Doc View Source MulticastLogEntryWithOffset(IMulticastLogEntry, Int64) Initializes a new MulticastLogEntryWithOffset . Declaration public MulticastLogEntryWithOffset(IMulticastLogEntry e, long o) Parameters Type Name Description IMulticastLogEntry e The entry. Int64 o The offset. Fields | Improve this Doc View Source Entry The log entry. Declaration public readonly IMulticastLogEntry Entry Field Value Type Description IMulticastLogEntry | Improve this Doc View Source Offset The entry's offset. Declaration public readonly long Offset Field Value Type Description Int64"
  },
  "api/CK.Monitoring.MonitorTextFileOutput.html": {
    "href": "api/CK.Monitoring.MonitorTextFileOutput.html",
    "title": "Class MonitorTextFileOutput | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MonitorTextFileOutput Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). Inheritance Object MonitorFileOutputBase MonitorTextFileOutput Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class MonitorTextFileOutput : MonitorFileOutputBase, IDisposable Constructors | Improve this Doc View Source MonitorTextFileOutput(String, Int32, Boolean) Initializes a new file for IMulticastLogEntry : the final file name is based on FileNameUniqueTimeUtcFormat with a \".ckmon\" extension. You must call Initialize(IActivityMonitor) before actually using this object. Declaration public MonitorTextFileOutput(string configuredPath, int maxCountPerFile, bool useGzipCompression) Parameters Type Name Description String configuredPath The path: it can be absolute and when relative, it will be under RootLogPath (that must be set). Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. Boolean useGzipCompression True to gzip the file. Methods | Improve this Doc View Source CloseCurrentFile() Called when the current file is closed. Declaration protected override void CloseCurrentFile() | Improve this Doc View Source OpenNewFile() Called when a new file is created. Declaration protected override Stream OpenNewFile() Returns Type Description Stream The created stream. | Improve this Doc View Source Write(IMulticastLogEntry) Writes a log entry (that can actually be a IMulticastLogEntry ). Declaration public void Write(IMulticastLogEntry e) Parameters Type Name Description IMulticastLogEntry e The log entry."
  },
  "api/CK.Monitoring.MonitorFileOutputBase.html": {
    "href": "api/CK.Monitoring.MonitorFileOutputBase.html",
    "title": "Class MonitorFileOutputBase | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MonitorFileOutputBase Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). Inheritance Object MonitorFileOutputBase Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class MonitorFileOutputBase : IDisposable Constructors | Improve this Doc View Source MonitorFileOutputBase(String, Guid, Int32, Boolean) Initializes a new file for ILogEntry issued from a specific monitor: the final file name is based on FileNameUniqueTimeUtcFormat with a \"-{XXX...XXX}.ckmon\" suffix where {XXX...XXX} is the unique identifier (Guid with the B format - 32 digits separated by hyphens, enclosed in braces) of the monitor. You must call Initialize(IActivityMonitor) before actually using this object. Declaration protected MonitorFileOutputBase(string configuredPath, Guid monitorId, int maxCountPerFile, bool useGzipCompression) Parameters Type Name Description String configuredPath The path. Can be absolute. When relative, it will be under RootLogPath that must be set. Guid monitorId Monitor identifier. Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. Boolean useGzipCompression True to gzip the file. | Improve this Doc View Source MonitorFileOutputBase(String, String, Int32, Boolean) Initializes a new file for IMulticastLogEntry : the final file name is based on FileNameUniqueTimeUtcFormat with a \".ckmon\" extension. You must call Initialize(IActivityMonitor) before actually using this object. Declaration protected MonitorFileOutputBase(string configuredPath, string fileNameSuffix, int maxCountPerFile, bool useGzipCompression) Parameters Type Name Description String configuredPath The path: it can be absolute and when relative, it will be under RootLogPath (that must be set). String fileNameSuffix Suffix of the file including its extension. Must not be null nor empty. Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. Boolean useGzipCompression True to gzip the file. Properties | Improve this Doc View Source FileBufferSize Gets or sets the buffer size used to write files. Defaults to 4096. Declaration public int FileBufferSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FileWriteThrough Gets or sets whether files will be opened with System.IO.FileOptions.WriteThrough . Defaults to false. Declaration public bool FileWriteThrough { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsOpened Gets whether this file is currently opened. Declaration public bool IsOpened { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxCountPerFile Gets the maximum number of entries per file. Declaration public int MaxCountPerFile { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AfterWrite() This method must be called after write: it closes and produces the final file if the current file is full. Declaration protected void AfterWrite() | Improve this Doc View Source BeforeWrite() This method must be called before any write: it calls OpenNewFile() if needed. Declaration protected void BeforeWrite() | Improve this Doc View Source Close() Closes the file if it is currently opened. Does nothing otherwise. Declaration public void Close() | Improve this Doc View Source CloseCurrentFile() Closes the currently opended file. Declaration protected virtual void CloseCurrentFile() | Improve this Doc View Source Dispose() Simply calls Close() . Declaration public void Dispose() | Improve this Doc View Source Initialize(IActivityMonitor) Checks whether this MonitorFileOutputBase is valid: its base path is successfully created. Can be called multiple times. Declaration public bool Initialize(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor Required monitor. Returns Type Description Boolean | Improve this Doc View Source OpenNewFile() Opens a new file suffixed by \".tmp\". Declaration protected virtual Stream OpenNewFile() Returns Type Description Stream The opened stream to write to."
  },
  "api/CK.Monitoring.MonitorBinaryFileOutput.html": {
    "href": "api/CK.Monitoring.MonitorBinaryFileOutput.html",
    "title": "Class MonitorBinaryFileOutput | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MonitorBinaryFileOutput Helper class that encapsulates temporary stream and final renaming for log entries streams. This currently handles only the maximum count of entries per file but this may be extended with options like \"SubFolderMode\" that can be based on current time (to group logs inside timed intermediate folders like one per day: 2014/01/12 or 2014-01/12, etc.). Inheritance Object MonitorFileOutputBase MonitorBinaryFileOutput Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class MonitorBinaryFileOutput : MonitorFileOutputBase, IDisposable Constructors | Improve this Doc View Source MonitorBinaryFileOutput(String, Guid, Int32, Boolean) Initializes a new file for ILogEntry issued from a specific monitor: the final file name is based on FileNameUniqueTimeUtcFormat with a \"-{XXX...XXX}.ckmon\" suffix where {XXX...XXX} is the unique identifier (Guid with the B format - 32 digits separated by hyphens, enclosed in braces) of the monitor. You must call Initialize(IActivityMonitor) before actually using this object. Declaration public MonitorBinaryFileOutput(string configuredPath, Guid monitorId, int maxCountPerFile, bool useGzipCompression) Parameters Type Name Description String configuredPath The path. Can be absolute. When relative, it will be under RootLogPath that must be set. Guid monitorId Monitor identifier. Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. Boolean useGzipCompression True to gzip the file. | Improve this Doc View Source MonitorBinaryFileOutput(String, Int32, Boolean) Initializes a new file for IMulticastLogEntry : the final file name is based on FileNameUniqueTimeUtcFormat with a \".ckmon\" extension. You must call Initialize(IActivityMonitor) before actually using this object. Declaration public MonitorBinaryFileOutput(string configuredPath, int maxCountPerFile, bool useGzipCompression) Parameters Type Name Description String configuredPath The path: it can be absolute and when relative, it will be under RootLogPath (that must be set). Int32 maxCountPerFile Maximum number of entries per file. Must be greater than 1. Boolean useGzipCompression True to gzip the file. Methods | Improve this Doc View Source CloseCurrentFile() Called when the current file is closed. Declaration protected override void CloseCurrentFile() | Improve this Doc View Source OpenNewFile() Called when a new file is created. Declaration protected override Stream OpenNewFile() Returns Type Description Stream The created stream. | Improve this Doc View Source UnicastWrite(ActivityMonitorLogData, IMulticastLogInfo) Writes a line entry as a uni-cast compact entry or as a multi-cast one if needed. Declaration public void UnicastWrite(ActivityMonitorLogData data, IMulticastLogInfo adapter) Parameters Type Name Description ActivityMonitorLogData data The log line. IMulticastLogInfo adapter Multi-cast information to be able to write multi-cast entry when needed. | Improve this Doc View Source UnicastWriteCloseGroup(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>, IMulticastLogInfo) Writes a group closing entry as a uni-cast compact entry or as a multi-cast one if needed. Declaration public void UnicastWriteCloseGroup(IActivityLogGroup g, IReadOnlyList<ActivityLogGroupConclusion> conclusions, IMulticastLogInfo adapter) Parameters Type Name Description IActivityLogGroup g The group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Group's conclusions. IMulticastLogInfo adapter Multi-cast information to be able to write multi-cast entry when needed. | Improve this Doc View Source UnicastWriteOpenGroup(IActivityLogGroup, IMulticastLogInfo) Writes a group opening entry as a uni-cast compact entry or as a multi-cast one if needed. Declaration public void UnicastWriteOpenGroup(IActivityLogGroup g, IMulticastLogInfo adapter) Parameters Type Name Description IActivityLogGroup g The group line. IMulticastLogInfo adapter Multi-cast information to be able to write multi-cast entry when needed. | Improve this Doc View Source Write(ILogEntry) Writes a log entry (that can actually be a IMulticastLogEntry ). Declaration public void Write(ILogEntry e) Parameters Type Name Description ILogEntry e The log entry."
  },
  "api/CK.Monitoring.LogReader.html": {
    "href": "api/CK.Monitoring.LogReader.html",
    "title": "Class LogReader | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class LogReader A log reader acts as an enumerator of ILogEntry that are stored in a System.IO.Stream . Inheritance Object LogReader Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class LogReader : IEnumerator<ILogEntry>, IDisposable, IEnumerator Constructors | Improve this Doc View Source LogReader(Stream, Int32, Int32, Boolean) Initializes a new LogReader on an uncompressed stream with an explicit version number. Declaration public LogReader(Stream stream, int streamVersion, int headerLength, bool mustClose = true) Parameters Type Name Description Stream stream Stream to read logs from. Int32 streamVersion Version of the log stream. Int32 headerLength Length of the header. This will be substracted to the actual stream position to compute the StreamOffset . Boolean mustClose Defaults to true (the stream will be automatically closed). False to let the stream opened once this reader is disposed, the end of the log data is reached or an error is encountered. Fields | Improve this Doc View Source CurrentStreamVersion Current version stamp. Writes are done with this version, but reads MUST handle it. The first released version is 5. Declaration public const int CurrentStreamVersion = 6 Field Value Type Description Int32 | Improve this Doc View Source FileHeader The file header for .ckmon files starting from CurrentStreamVersion = 5. That's C, K, M, O and N (ASCII). Declaration public static readonly byte[] FileHeader Field Value Type Description Byte [] Properties | Improve this Doc View Source BadEndOfFileMarker Gets whether the end of file has been reached and the file is missing the final 0 byte marker. Declaration public bool BadEndOfFileMarker { get; } Property Value Type Description Boolean | Improve this Doc View Source Current Current ILogEntry that can be a IMulticastLogEntry . As usual, MoveNext() must be called before getting the first entry. Declaration public ILogEntry Current { get; } Property Value Type Description ILogEntry | Improve this Doc View Source CurrentFilter Gets or sets a LogReader.MulticastFilter that will be taken into account during the next MoveNext() . Only entries from this monitor will be extracted when reading a IMulticastLogEntry (pure unicast ILogEntry will be ignored). Remarks Note that the Current will be ILogEntry objects: multi-cast entry properties ( MonitorId and GroupDepth ) are no more available when a filter is set. Declaration public LogReader.MulticastFilter CurrentFilter { get; set; } Property Value Type Description LogReader.MulticastFilter | Improve this Doc View Source CurrentMulticast Gets the Current entry if the underlying entry is a IMulticastLogEntry , null otherwise. This captures the actual entry when a CurrentFilter is set (Current is then a mere Unicast entry). Declaration public IMulticastLogEntry CurrentMulticast { get; } Property Value Type Description IMulticastLogEntry | Improve this Doc View Source CurrentMulticastWithOffset Current IMulticastLogEntry with its associated position in the stream. The current entry must be a multi-cast one and, as usual, MoveNext() must be called before getting the first entry. Declaration public MulticastLogEntryWithOffset CurrentMulticastWithOffset { get; } Property Value Type Description MulticastLogEntryWithOffset | Improve this Doc View Source ReadException Gets the exception that may have been thrown when reading the file. Declaration public Exception ReadException { get; } Property Value Type Description Exception | Improve this Doc View Source StreamOffset Gets the inner System.IO.Stream.Position of the Current entry. Declaration public long StreamOffset { get; } Property Value Type Description Int64 | Improve this Doc View Source StreamVersion Gets the stream version. It is available only after the first call to MoveNext() . Declaration public int StreamVersion { get; } Property Value Type Description Int32 | Improve this Doc View Source IEnumerator.Current Declaration object IEnumerator.Current { get; } Property Value Type Description Object Methods | Improve this Doc View Source Dispose() Close the inner stream (.Net 4.5 only: if this reader has been asked to do so thanks to constructors' parameter mustClose sets to true). Declaration public void Dispose() | Improve this Doc View Source MoveNext() Attempts to read the next ILogEntry . Declaration public bool MoveNext() Returns Type Description Boolean True on success, false otherwise. | Improve this Doc View Source Open(Stream, Int64, LogReader.MulticastFilter) Opens a LogReader to read the content of a compressed or uncompressed stream. The stream will be closed when Dispose() will be called. Remarks .ckmon files exist in different file versions, depending on headers. The file can be compressed using GZipStream, in which case the header will be the magic GZIP header: 1F 8B. New header (applies to version 5), the file will start with 43 4B 4D 4F 4E (CKMON in ASCII), followed by the version number, instead of only the version number. Declaration public static LogReader Open(Stream seekableStream, long dataOffset = 0L, LogReader.MulticastFilter filter = null) Parameters Type Name Description Stream seekableStream Stream that must support Seek operations ( System.IO.Stream.CanSeek must be true). Int64 dataOffset An optional offset where the stream position must be initially set: this is the position of an entry in the actual (potentially uncompressed stream), not the offset in the original stream. LogReader.MulticastFilter filter An optional LogReader.MulticastFilter . Returns Type Description LogReader A LogReader that will close the file when disposed. | Improve this Doc View Source Open(String, Int64, LogReader.MulticastFilter) Opens a LogReader to read the content of a compressed or uncompressed file. The file will be closed when Dispose() will be called. Remarks .ckmon files exist in different file versions, depending on headers. The file can be compressed using GZipStream, in which case the header will be the magic GZIP header: 1F 8B. New header (applies to version 5), the file will start with 43 4B 4D 4F 4E (CKMON in ASCII), followed by the version number, instead of only the version number. Declaration public static LogReader Open(string path, long dataOffset = 0L, LogReader.MulticastFilter filter = null) Parameters Type Name Description String path Path of the log file. Int64 dataOffset An optional offset where the stream position must be initially set: this is the position of an entry in the actual (potentially uncompressed stream), not the offset in the original stream. LogReader.MulticastFilter filter An optional LogReader.MulticastFilter . Returns Type Description LogReader A LogReader that will close the file when disposed. | Improve this Doc View Source IEnumerator.Reset() Declaration void IEnumerator.Reset()"
  },
  "api/CK.Monitoring.LogReader.MulticastFilter.html": {
    "href": "api/CK.Monitoring.LogReader.MulticastFilter.html",
    "title": "Class LogReader.MulticastFilter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class LogReader.MulticastFilter Enables filtering of a multi-cast stream: only entries from the specified monitor will be read. Inheritance Object LogReader.MulticastFilter Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class MulticastFilter Constructors | Improve this Doc View Source MulticastFilter(Guid, Int64) Initializes a new LogReader.MulticastFilter . Declaration public MulticastFilter(Guid monitorId, long knownLastMonitorEntryOffset = 9223372036854775807L) Parameters Type Name Description Guid monitorId Monitor identifier to filter. Int64 knownLastMonitorEntryOffset Offset of the last entry in the stream (when known this enables to stop processing as soon as possible). Fields | Improve this Doc View Source KnownLastMonitorEntryOffset The offset of the last entry in the stream (see StreamOffset ). System.Int64.MaxValue when unknown. Declaration public readonly long KnownLastMonitorEntryOffset Field Value Type Description Int64 | Improve this Doc View Source MonitorId The filtered monitor identifier. Declaration public readonly Guid MonitorId Field Value Type Description Guid"
  },
  "api/CK.Monitoring.LogEntryType.html": {
    "href": "api/CK.Monitoring.LogEntryType.html",
    "title": "Enum LogEntryType | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum LogEntryType Type of a ILogEntry . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public enum LogEntryType Fields | Improve this Doc View Source CloseGroup Group is closed. Note that the only available information are Conclusions , LogLevel and LogTime . All other properties are set to their default: Text for instance is null. Declaration CloseGroup = 3 Field Value Type Description LogEntryType | Improve this Doc View Source Line A standard log entry. Except Conclusions (reserved to CloseGroup ), all other properties of the ILogEntry may be set. Declaration Line = 1 Field Value Type Description LogEntryType | Improve this Doc View Source None Non applicable. Declaration None = 0 Field Value Type Description LogEntryType | Improve this Doc View Source OpenGroup Group is opened. Except Conclusions (reserved to CloseGroup ), all other properties of the ILogEntry may be set. Declaration OpenGroup = 2 Field Value Type Description LogEntryType"
  },
  "api/CK.Monitoring.LogEntry.html": {
    "href": "api/CK.Monitoring.LogEntry.html",
    "title": "Class LogEntry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class LogEntry Encapsulates ILogEntry concrete objects manipulation. Inheritance Object LogEntry Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class LogEntry Methods | Improve this Doc View Source CreateCloseGroup(DateTimeStamp, LogLevel, IReadOnlyList<ActivityLogGroupConclusion>) Creates a ILogEntry for the closing of a group. Declaration public static ILogEntry CreateCloseGroup(DateTimeStamp t, LogLevel level, IReadOnlyList<ActivityLogGroupConclusion> c) Parameters Type Name Description DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. IReadOnlyList < ActivityLogGroupConclusion > c Group conclusions. Returns Type Description ILogEntry A log entry object. | Improve this Doc View Source CreateLog(String, DateTimeStamp, LogLevel, String, Int32, CKTrait, CKExceptionData) Creates a ILogEntry for a line. Declaration public static ILogEntry CreateLog(string text, DateTimeStamp t, LogLevel level, string fileName, int lineNumber, CKTrait tags, CKExceptionData ex) Parameters Type Name Description String text Text of the log entry. DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. Returns Type Description ILogEntry A log entry object. | Improve this Doc View Source CreateMulticastCloseGroup(Guid, LogEntryType, DateTimeStamp, Int32, DateTimeStamp, LogLevel, IReadOnlyList<ActivityLogGroupConclusion>) Creates a ILogEntry for the closing of a group. Declaration public static IMulticastLogEntry CreateMulticastCloseGroup(Guid monitorId, LogEntryType previousEntryType, DateTimeStamp previousLogTime, int depth, DateTimeStamp t, LogLevel level, IReadOnlyList<ActivityLogGroupConclusion> c) Parameters Type Name Description Guid monitorId Identifier of the monitor. LogEntryType previousEntryType Log type of the previous entry in the monitor.. DateTimeStamp previousLogTime Time stamp of the previous entry in the monitor. Int32 depth Depth of the line (number of opened groups above). DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. IReadOnlyList < ActivityLogGroupConclusion > c Group conclusions. Returns Type Description IMulticastLogEntry A log entry object. | Improve this Doc View Source CreateMulticastLog(Guid, LogEntryType, DateTimeStamp, Int32, String, DateTimeStamp, LogLevel, String, Int32, CKTrait, CKExceptionData) Creates a ILogEntry for a line. Declaration public static IMulticastLogEntry CreateMulticastLog(Guid monitorId, LogEntryType previousEntryType, DateTimeStamp previousLogTime, int depth, string text, DateTimeStamp t, LogLevel level, string fileName, int lineNumber, CKTrait tags, CKExceptionData ex) Parameters Type Name Description Guid monitorId Identifier of the monitor. LogEntryType previousEntryType Log type of the previous entry in the monitor.. DateTimeStamp previousLogTime Time stamp of the previous entry in the monitor. Int32 depth Depth of the line (number of opened groups above). String text Text of the log entry. DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. Returns Type Description IMulticastLogEntry A log entry object. | Improve this Doc View Source CreateMulticastOpenGroup(Guid, LogEntryType, DateTimeStamp, Int32, String, DateTimeStamp, LogLevel, String, Int32, CKTrait, CKExceptionData) Creates a ILogEntry for an opened group. Declaration public static IMulticastLogEntry CreateMulticastOpenGroup(Guid monitorId, LogEntryType previousEntryType, DateTimeStamp previousLogTime, int depth, string text, DateTimeStamp t, LogLevel level, string fileName, int lineNumber, CKTrait tags, CKExceptionData ex) Parameters Type Name Description Guid monitorId Identifier of the monitor. LogEntryType previousEntryType Log type of the previous entry in the monitor.. DateTimeStamp previousLogTime Time stamp of the previous entry in the monitor. Int32 depth Depth of the line (number of opened groups above). String text Text of the log entry. DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. Returns Type Description IMulticastLogEntry A log entry object. | Improve this Doc View Source CreateOpenGroup(String, DateTimeStamp, LogLevel, String, Int32, CKTrait, CKExceptionData) Creates a ILogEntry for an opened group. Declaration public static ILogEntry CreateOpenGroup(string text, DateTimeStamp t, LogLevel level, string fileName, int lineNumber, CKTrait tags, CKExceptionData ex) Parameters Type Name Description String text Text of the log entry. DateTimeStamp t Time stamp of the log entry. LogLevel level Log level of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. Returns Type Description ILogEntry A log entry object. | Improve this Doc View Source Read(CKBinaryReader, Int32, out Boolean) Reads a ILogEntry from the binary reader that can be a IMulticastLogEntry . If the first read byte is 0, read stops and null is returned. The 0 byte is the \"end marker\" that Close() write, but this method can read non zero-terminated streams (it catches an EndOfStreamException when reading the first byte and handles it silently). This method can throw any type of exception ( System.IO.EndOfStreamException or System.IO.InvalidDataException for instance) that must be handled by the caller. Declaration public static ILogEntry Read(CKBinaryReader r, int streamVersion, out bool badEndOfFile) Parameters Type Name Description CKBinaryReader r The binary reader. Int32 streamVersion The version of the stream. Boolean badEndOfFile True whenever the end of file is the result of an System.IO.EndOfStreamException . Returns Type Description ILogEntry The log entry or null if a zero byte (end marker) has been found. | Improve this Doc View Source WriteCloseGroup(CKBinaryWriter, LogLevel, DateTimeStamp, IReadOnlyList<ActivityLogGroupConclusion>) Binary writes a closing entry. Declaration public static void WriteCloseGroup(CKBinaryWriter w, LogLevel level, DateTimeStamp closeTime, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description CKBinaryWriter w Binary writer to use. LogLevel level Log level of the log entry. DateTimeStamp closeTime Time stamp of the group closing. IReadOnlyList < ActivityLogGroupConclusion > conclusions Group conclusions. | Improve this Doc View Source WriteCloseGroup(CKBinaryWriter, Guid, LogEntryType, DateTimeStamp, Int32, LogLevel, DateTimeStamp, IReadOnlyList<ActivityLogGroupConclusion>) Binary writes a multicast closing entry. Declaration public static void WriteCloseGroup(CKBinaryWriter w, Guid monitorId, LogEntryType previousEntryType, DateTimeStamp previousLogTime, int depth, LogLevel level, DateTimeStamp closeTime, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description CKBinaryWriter w Binary writer to use. Guid monitorId Identifier of the monitor. LogEntryType previousEntryType Log type of the previous entry in the monitor.. DateTimeStamp previousLogTime Time stamp of the previous entry in the monitor. Int32 depth Depth of the group (number of opened groups above). LogLevel level Log level of the log entry. DateTimeStamp closeTime Time stamp of the group closing. IReadOnlyList < ActivityLogGroupConclusion > conclusions Group conclusions. | Improve this Doc View Source WriteLog(CKBinaryWriter, Boolean, LogLevel, DateTimeStamp, String, CKTrait, CKExceptionData, String, Int32) Binary writes a log entry. Declaration public static void WriteLog(CKBinaryWriter w, bool isOpenGroup, LogLevel level, DateTimeStamp logTime, string text, CKTrait tags, CKExceptionData ex, string fileName, int lineNumber) Parameters Type Name Description CKBinaryWriter w Binary writer to use. Boolean isOpenGroup True if this the opening of a group. False for a line. LogLevel level Log level of the log entry. DateTimeStamp logTime Time stamp of the log entry. String text Text of the log entry. CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry | Improve this Doc View Source WriteLog(CKBinaryWriter, Guid, LogEntryType, DateTimeStamp, Int32, Boolean, LogLevel, DateTimeStamp, String, CKTrait, CKExceptionData, String, Int32) Binary writes a multicast log entry. Declaration public static void WriteLog(CKBinaryWriter w, Guid monitorId, LogEntryType previousEntryType, DateTimeStamp previousLogTime, int depth, bool isOpenGroup, LogLevel level, DateTimeStamp logTime, string text, CKTrait tags, CKExceptionData ex, string fileName, int lineNumber) Parameters Type Name Description CKBinaryWriter w Binary writer to use. Guid monitorId Identifier of the monitor. LogEntryType previousEntryType Log type of the previous entry in the monitor.. DateTimeStamp previousLogTime Time stamp of the previous entry in the monitor. Int32 depth Depth of the line (number of opened groups above). Boolean isOpenGroup True if this the opening of a group. False for a line. LogLevel level Log level of the log entry. DateTimeStamp logTime Time stamp of the log entry. String text Text of the log entry. CKTrait tags Tags of the log entry CKExceptionData ex Exception of the log entry. String fileName Source file name of the log entry Int32 lineNumber Source line number of the log entry"
  },
  "api/CK.Monitoring.IMulticastLogInfo.html": {
    "href": "api/CK.Monitoring.IMulticastLogInfo.html",
    "title": "Interface IMulticastLogInfo | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IMulticastLogInfo Information required by a IMulticastLogEntry . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface IMulticastLogInfo Properties | Improve this Doc View Source GroupDepth Gets the depth of the entry in the source MonitorId . Declaration int GroupDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source MonitorId Gets the monitor identifier. Declaration Guid MonitorId { get; } Property Value Type Description Guid | Improve this Doc View Source PreviousEntryType Gets the previous entry type. None when unknown. Declaration LogEntryType PreviousEntryType { get; } Property Value Type Description LogEntryType | Improve this Doc View Source PreviousLogTime Gets the previous log time. Unknown when unknown. Declaration DateTimeStamp PreviousLogTime { get; } Property Value Type Description DateTimeStamp"
  },
  "api/CK.Monitoring.IMulticastLogEntry.html": {
    "href": "api/CK.Monitoring.IMulticastLogEntry.html",
    "title": "Interface IMulticastLogEntry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IMulticastLogEntry Unified interface for multi-cast log entries whatever their LogType or their source MonitorId is. All log entries can be exposed through this \"rich\" interface. Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface IMulticastLogEntry : ILogEntry, IMulticastLogInfo Properties | Improve this Doc View Source GroupDepth Gets the depth of the entry in the source MonitorId . This is always available (whatever the LogType is OpenGroup , CloseGroup , or Line ). Declaration int GroupDepth { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CreateUnicastLogEntry() Creates a unicast entry from this multi-cast one. The MonitorId and GroupDepth are lost (but less memory is used). Declaration ILogEntry CreateUnicastLogEntry() Returns Type Description ILogEntry"
  },
  "api/CK.Monitoring.Impl.html": {
    "href": "api/CK.Monitoring.Impl.html",
    "title": "Namespace CK.Monitoring.Impl | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.Impl Classes EventDispatcherBasicStrategy Implements a basic strategy that handles activities logging overloads. EventDispatcherLocalTestStrategy"
  },
  "api/CK.Monitoring.Impl.EventDispatcherLocalTestStrategy.html": {
    "href": "api/CK.Monitoring.Impl.EventDispatcherLocalTestStrategy.html",
    "title": "Class EventDispatcherLocalTestStrategy | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EventDispatcherLocalTestStrategy Inheritance Object EventDispatcherLocalTestStrategy Namespace :CK.Monitoring.Impl Assembly :CK.Monitoring.Tests.dll Syntax public sealed class EventDispatcherLocalTestStrategy : IGrandOutputDispatcherStrategy Constructors | Improve this Doc View Source EventDispatcherLocalTestStrategy(Int32, Int32, Int32) Declaration public EventDispatcherLocalTestStrategy(int maxCapacity = 65536, int reenableCapacity = 0, int samplingCount = 0) Parameters Type Name Description Int32 maxCapacity Int32 reenableCapacity Int32 samplingCount Properties | Improve this Doc View Source IgnoredConcurrentCallCount Declaration public int IgnoredConcurrentCallCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source IGrandOutputDispatcherStrategy.Initialize(Func<Int32>, Thread, out Func<Int32, Int32>) Declaration void IGrandOutputDispatcherStrategy.Initialize(Func<int> instantLoad, Thread dispatcher, out Func<int, int> idleManager) Parameters Type Name Description Func < Int32 > instantLoad Thread dispatcher Func < Int32 , Int32 > idleManager | Improve this Doc View Source IsOpened(ref Int32) Declaration public bool IsOpened(ref int maxQueuedCount) Parameters Type Name Description Int32 maxQueuedCount Returns Type Description Boolean"
  },
  "api/CK.Monitoring.Impl.EventDispatcherBasicStrategy.html": {
    "href": "api/CK.Monitoring.Impl.EventDispatcherBasicStrategy.html",
    "title": "Class EventDispatcherBasicStrategy | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EventDispatcherBasicStrategy Implements a basic strategy that handles activities logging overloads. Inheritance Object EventDispatcherBasicStrategy Namespace :CK.Monitoring.Impl Assembly :CK.Monitoring.dll Syntax public sealed class EventDispatcherBasicStrategy : IGrandOutputDispatcherStrategy Constructors | Improve this Doc View Source EventDispatcherBasicStrategy(Int32, Int32, Int32) Initializes a new basic strategy. Default parameters should be used. Declaration public EventDispatcherBasicStrategy(int maxCapacity = 262144, int reenableCapacity = 0, int samplingCount = 0) Parameters Type Name Description Int32 maxCapacity Maximum capacity. Int32 reenableCapacity Defaults to 4/5 of the maximum capacity. Int32 samplingCount Actual check of the queue count is done by default each 1/10 of the maximum capacity. Properties | Improve this Doc View Source IgnoredConcurrentCallCount Gets the count of concurrent sampling (when this strategy has been called while it was already called by another thread). Declaration public int IgnoredConcurrentCallCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source IGrandOutputDispatcherStrategy.Initialize(Func<Int32>, Thread, out Func<Int32, Int32>) Declaration void IGrandOutputDispatcherStrategy.Initialize(Func<int> instantLoad, Thread dispatcher, out Func<int, int> idleManager) Parameters Type Name Description Func < Int32 > instantLoad Thread dispatcher Func < Int32 , Int32 > idleManager | Improve this Doc View Source IGrandOutputDispatcherStrategy.IsOpened(ref Int32) Declaration bool IGrandOutputDispatcherStrategy.IsOpened(ref int maxQueuedCount) Parameters Type Name Description Int32 maxQueuedCount Returns Type Description Boolean"
  },
  "api/CK.Monitoring.ILogEntry.html": {
    "href": "api/CK.Monitoring.ILogEntry.html",
    "title": "Interface ILogEntry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ILogEntry Unified interface for log entries whatever their LogType is. All log entries can be exposed through this \"rich\" interface. Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface ILogEntry Properties | Improve this Doc View Source Conclusions Gets any group conclusion. Always null except of course when LogType is CloseGroup . Declaration IReadOnlyList<ActivityLogGroupConclusion> Conclusions { get; } Property Value Type Description IReadOnlyList < ActivityLogGroupConclusion > | Improve this Doc View Source Exception Gets the exception data if any (can be not null only when LogType is OpenGroup : exceptions are exclusively carried by groups). Declaration CKExceptionData Exception { get; } Property Value Type Description CKExceptionData | Improve this Doc View Source FileName Gets the file name of the source code that emitted the log. Null when LogType is CloseGroup . Declaration string FileName { get; } Property Value Type Description String | Improve this Doc View Source LineNumber Gets the line number in the source code FileName that emitted the log. 0 when LogType is CloseGroup . Declaration int LineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source LogLevel Get the log level (between LogLevel.Trace and LogLevel.Fatal). This is available whatever LogType is. Declaration LogLevel LogLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source LogTime Gets the log time. This is available whatever LogType is. Declaration DateTimeStamp LogTime { get; } Property Value Type Description DateTimeStamp | Improve this Doc View Source LogType Gets the type of the log entry. Declaration LogEntryType LogType { get; } Property Value Type Description LogEntryType | Improve this Doc View Source Tags Gets the tags for this entry. Always equals to Empty when LogType is CloseGroup . Declaration CKTrait Tags { get; } Property Value Type Description CKTrait | Improve this Doc View Source Text Gets the log text. Null when when LogType is CloseGroup . Declaration string Text { get; } Property Value Type Description String Methods | Improve this Doc View Source WriteLogEntry(CKBinaryWriter) Writes the entry in a System.IO.BinaryWriter . Use Read(CKBinaryReader, Int32, out Boolean) to read it back. Declaration void WriteLogEntry(CKBinaryWriter w) Parameters Type Name Description CKBinaryWriter w The binary writer."
  },
  "api/CK.Monitoring.IGrandOutputSink.html": {
    "href": "api/CK.Monitoring.IGrandOutputSink.html",
    "title": "Interface IGrandOutputSink | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IGrandOutputSink Defines a sink that can be registered onto a GrandOutput to intercept any log event. It is also supported by HandlerBase . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface IGrandOutputSink Methods | Improve this Doc View Source Handle(GrandOutputEventInfo, Boolean) This is initially called non concurrently from a dispatcher background thread: implementations do not need any synchronization mechanism by default except when parrallelCall is true. Declaration void Handle(GrandOutputEventInfo logEvent, bool parrallelCall) Parameters Type Name Description GrandOutputEventInfo logEvent The log event. Boolean parrallelCall True when this method is called in parallel with other sinks."
  },
  "api/CK.Monitoring.IGrandOutputDispatcherStrategy.html": {
    "href": "api/CK.Monitoring.IGrandOutputDispatcherStrategy.html",
    "title": "Interface IGrandOutputDispatcherStrategy | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IGrandOutputDispatcherStrategy Defines a strategy to manage dispatching log events overload and idle time management. Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface IGrandOutputDispatcherStrategy Properties | Improve this Doc View Source IgnoredConcurrentCallCount Gets the count of concurrent sampling: each time IsOpened(ref Int32) has been called while it was already called by another thread. Declaration int IgnoredConcurrentCallCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Initialize(Func<Int32>, Thread, out Func<Int32, Int32>) Called once and only once during GrandOutput initialization. Declaration void Initialize(Func<int> instantLoad, Thread dispatcher, out Func<int, int> idleManager) Parameters Type Name Description Func < Int32 > instantLoad Gets the number of items waiting to be processed. Thread dispatcher The dispatcher thread. Func < Int32 , Int32 > idleManager Function that returns the time in milliseconds to wait for a given idle count. | Improve this Doc View Source IsOpened(ref Int32) Called concurrently for each new event to handle: this must be fully thread-safe and as much efficient as it could be since this is called on the monitored side. Declaration bool IsOpened(ref int maxQueuedCount) Parameters Type Name Description Int32 maxQueuedCount Returns Type Description Boolean True to accept the event, false to reject it."
  },
  "api/CK.Monitoring.IGrandOutputBridgeTarget.html": {
    "href": "api/CK.Monitoring.IGrandOutputBridgeTarget.html",
    "title": "Interface IGrandOutputBridgeTarget | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IGrandOutputBridgeTarget External entry point for cross application domain bridge. Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public interface IGrandOutputBridgeTarget"
  },
  "api/CK.Monitoring.GrandOutputHandlers.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.html",
    "title": "Namespace CK.Monitoring.GrandOutputHandlers | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Monitoring.GrandOutputHandlers Classes BinaryFile Binary file handler. BinaryFileConfiguration Configuration object for BinaryFile . ChannelOption Captures centralized information among the different HandlerBase of a channel. FileConfigurationBase Configuration base object for files. HandlerBase Base class to handle of GrandOutputEventInfo . Specialized handlers are configured by an associated HandlerConfiguration specialization. HandlerConfiguration Base class for handler configuration. HandlerTypeAttribute Simple attribute that binds a HandlerConfiguration to the actual HandlerBase that will actually do the job. TextFile Binary file handler. TextFileConfiguration Configuration object for BinaryFile ."
  },
  "api/CK.Monitoring.GrandOutputHandlers.TextFileConfiguration.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.TextFileConfiguration.html",
    "title": "Class TextFileConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TextFileConfiguration Configuration object for BinaryFile . Inheritance Object ActionConfiguration HandlerConfiguration FileConfigurationBase TextFileConfiguration Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax [HandlerType(typeof (TextFile))] public class TextFileConfiguration : FileConfigurationBase Constructors | Improve this Doc View Source TextFileConfiguration(String) Initializes a new TextFileConfiguration . Declaration public TextFileConfiguration(string name) Parameters Type Name Description String name Name of this configuration. Properties | Improve this Doc View Source MonitorColumn Gets or sets whether the monitor identifier should prefix all lines. Defaults to false. Declaration public bool MonitorColumn { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Initialize(IActivityMonitor, XElement) Initializes (or reinitializes) this TextFileConfiguration from a System.Xml.Linq.XElement . Declaration protected override void Initialize(IActivityMonitor monitor, XElement xml) Parameters Type Name Description IActivityMonitor monitor Monitor to report errors or warnings. XElement xml Source XML element."
  },
  "api/CK.Monitoring.GrandOutputHandlers.TextFile.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.TextFile.html",
    "title": "Class TextFile | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TextFile Binary file handler. Inheritance Object HandlerBase TextFile Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public sealed class TextFile : HandlerBase, IGrandOutputSink Constructors | Improve this Doc View Source TextFile(TextFileConfiguration) Initializes a new TextFile bound to its TextFileConfiguration . Declaration public TextFile(TextFileConfiguration config) Parameters Type Name Description TextFileConfiguration config The configuration. Methods | Improve this Doc View Source Close(IActivityMonitor) Closes the file if it is opened. Declaration public override void Close(IActivityMonitor m) Parameters Type Name Description IActivityMonitor m The monitor to use to track activity. | Improve this Doc View Source Handle(GrandOutputEventInfo, Boolean) Writes a log entry (that can actually be a IMulticastLogEntry ). Declaration public override void Handle(GrandOutputEventInfo logEvent, bool parrallelCall) Parameters Type Name Description GrandOutputEventInfo logEvent The log entry. Boolean parrallelCall True if this is a parrallel call. | Improve this Doc View Source Initialize(IActivityMonitor) Initialization of the handler: computes the path. Declaration public override void Initialize(IActivityMonitor m) Parameters Type Name Description IActivityMonitor m"
  },
  "api/CK.Monitoring.GrandOutputHandlers.HandlerTypeAttribute.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.HandlerTypeAttribute.html",
    "title": "Class HandlerTypeAttribute | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HandlerTypeAttribute Simple attribute that binds a HandlerConfiguration to the actual HandlerBase that will actually do the job. Inheritance Object Attribute HandlerTypeAttribute Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class HandlerTypeAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source HandlerTypeAttribute(Type) Initializes a new HandlerTypeAttribute with a type that must be a HandlerBase specialization. Declaration public HandlerTypeAttribute(Type handlerType) Parameters Type Name Description Type handlerType Fields | Improve this Doc View Source HandlerType Gets the type of the associated HandlerBase . Declaration public readonly Type HandlerType Field Value Type Description Type"
  },
  "api/CK.Monitoring.GrandOutputHandlers.HandlerConfiguration.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.HandlerConfiguration.html",
    "title": "Class HandlerConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HandlerConfiguration Base class for handler configuration. Inheritance Object ActionConfiguration HandlerConfiguration Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public abstract class HandlerConfiguration : ActionConfiguration Constructors | Improve this Doc View Source HandlerConfiguration(String) Initializes a new handler configuration. Declaration protected HandlerConfiguration(string name) Parameters Type Name Description String name The configuration name. Properties | Improve this Doc View Source MinimalFilter Gets or sets the minimal filter for this handler. Defaults to Undefined : unless specified, the handler will not participate to ActualFilter resolution of monitors that eventually are handled by this handler.See remarks. Remarks This is NOT a filter: this is the minimal filter that guaranties that, at least, the specified levels will reach this handler. A concrete handler can, if needed, define a true filter: it is its business to retain or forget what it wants. Declaration public LogFilter MinimalFilter { get; set; } Property Value Type Description LogFilter Methods | Improve this Doc View Source Initialize(IActivityMonitor, XElement) Must initializes this configuration object with its specific data from an xml element. Declaration protected abstract void Initialize(IActivityMonitor m, XElement xml) Parameters Type Name Description IActivityMonitor m Monitor to use. XElement xml The xml element."
  },
  "api/CK.Monitoring.GrandOutputHandlers.HandlerBase.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.HandlerBase.html",
    "title": "Class HandlerBase | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HandlerBase Base class to handle of GrandOutputEventInfo . Specialized handlers are configured by an associated HandlerConfiguration specialization. Inheritance Object HandlerBase Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public abstract class HandlerBase : IGrandOutputSink Constructors | Improve this Doc View Source HandlerBase(HandlerConfiguration) Base constructor bound to base configuration object. Declaration protected HandlerBase(HandlerConfiguration config) Parameters Type Name Description HandlerConfiguration config The configuration object. Properties | Improve this Doc View Source Name Gets the name of this handler. It is the name of its configuration. Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Close(IActivityMonitor) Closes this handler. This is called when a reconfiguration occurs after all events have been Handle(GrandOutputEventInfo, Boolean) d. Default implementation does nothing. Declaration public virtual void Close(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor The monitor that tracks configuration process. | Improve this Doc View Source CollectChannelOption(ChannelOption) Enables this handler to interact with any channel to which it belongs. This is called after Initialize(IActivityMonitor) and for each channel where this handler appears, before the first call to Handle(GrandOutputEventInfo, Boolean) . Default implementation must be called: sets the minimal filter on the option if the HandlerConfiguration defines it. Declaration public virtual void CollectChannelOption(ChannelOption option) Parameters Type Name Description ChannelOption option | Improve this Doc View Source Handle(GrandOutputEventInfo, Boolean) Handles a GrandOutputEventInfo . Declaration public abstract void Handle(GrandOutputEventInfo logEvent, bool parrallelCall) Parameters Type Name Description GrandOutputEventInfo logEvent Event to handle. Boolean parrallelCall True when this method is called in parallel with other handlers. | Improve this Doc View Source Initialize(IActivityMonitor) Initializes this handler. This is called once for all the configured sink at the start of a new configuration, before the first call to Handle(GrandOutputEventInfo, Boolean) . Default implementation does nothing. Declaration public virtual void Initialize(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor The monitor that tracks configuration process."
  },
  "api/CK.Monitoring.GrandOutputHandlers.FileConfigurationBase.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.FileConfigurationBase.html",
    "title": "Class FileConfigurationBase | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class FileConfigurationBase Configuration base object for files. Inheritance Object ActionConfiguration HandlerConfiguration FileConfigurationBase Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public class FileConfigurationBase : HandlerConfiguration Constructors | Improve this Doc View Source FileConfigurationBase(String) Initializes a new FileConfigurationBase . Declaration protected FileConfigurationBase(string name) Parameters Type Name Description String name Name of this configuration. Properties | Improve this Doc View Source FileBufferSize Gets or sets the buffer size used to write files. Defaults to 4096. Declaration public int FileBufferSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FileWriteThrough Gets or sets whether files will be opened with System.IO.FileOptions.WriteThrough . Defaults to false. Declaration public bool FileWriteThrough { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxCountPerFile Gets or sets the maximal count of entries per file. Defaults to 20000. Declaration public int MaxCountPerFile { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Path Gets or sets the path of the file. When not rooted (see System.IO.Path.IsPathRooted(System.String) ), it is a sub path in RootLogPath . It defaults to null: it must be specified. Declaration public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source UseGzipCompression Gets or sets whether to use Gzip compression after closing log files. Defaults to false. Declaration public bool UseGzipCompression { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Initialize(IActivityMonitor, XElement) Initializes (or reinitializes) this FileConfigurationBase from a System.Xml.Linq.XElement . Declaration protected override void Initialize(IActivityMonitor monitor, XElement xml) Parameters Type Name Description IActivityMonitor monitor Monitor to report errors or warnings. XElement xml Source XML element."
  },
  "api/CK.Monitoring.GrandOutputHandlers.ChannelOption.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.ChannelOption.html",
    "title": "Class ChannelOption | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ChannelOption Captures centralized information among the different HandlerBase of a channel. Inheritance Object ChannelOption Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public sealed class ChannelOption Properties | Improve this Doc View Source CurrentMinimalFilter Gets the minimal LogFilter . Since a handler can publish its minimal filter requirement, we can optimize the filtering levels on monitors bound to a channel. Declaration public LogFilter CurrentMinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source SetMinimalFilter(LogFilter) Enables any handler to publish the minimal filter level it requires (if any). Declaration public void SetMinimalFilter(LogFilter filter) Parameters Type Name Description LogFilter filter Filter required by a HandlerBase ."
  },
  "api/CK.Monitoring.GrandOutputHandlers.BinaryFileConfiguration.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.BinaryFileConfiguration.html",
    "title": "Class BinaryFileConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class BinaryFileConfiguration Configuration object for BinaryFile . Inheritance Object ActionConfiguration HandlerConfiguration FileConfigurationBase BinaryFileConfiguration Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax [HandlerType(typeof (BinaryFile))] public class BinaryFileConfiguration : FileConfigurationBase Constructors | Improve this Doc View Source BinaryFileConfiguration(String) Initializes a new BinaryFileConfiguration . Declaration public BinaryFileConfiguration(string name) Parameters Type Name Description String name Name of this configuration."
  },
  "api/CK.Monitoring.GrandOutputHandlers.BinaryFile.html": {
    "href": "api/CK.Monitoring.GrandOutputHandlers.BinaryFile.html",
    "title": "Class BinaryFile | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class BinaryFile Binary file handler. Inheritance Object HandlerBase BinaryFile Namespace :CK.Monitoring.GrandOutputHandlers Assembly :CK.Monitoring.dll Syntax public sealed class BinaryFile : HandlerBase, IGrandOutputSink Constructors | Improve this Doc View Source BinaryFile(BinaryFileConfiguration) Initializes a new BinaryFile bound to its BinaryFileConfiguration . Declaration public BinaryFile(BinaryFileConfiguration config) Parameters Type Name Description BinaryFileConfiguration config The configuration. Methods | Improve this Doc View Source Close(IActivityMonitor) Closes the file if it is opened. Declaration public override void Close(IActivityMonitor m) Parameters Type Name Description IActivityMonitor m The monitor to use to track activity. | Improve this Doc View Source Handle(GrandOutputEventInfo, Boolean) Writes a log entry (that can actually be a IMulticastLogEntry ). Declaration public override void Handle(GrandOutputEventInfo logEvent, bool parrallelCall) Parameters Type Name Description GrandOutputEventInfo logEvent The log entry. Boolean parrallelCall True if this is a parrallel call. | Improve this Doc View Source Initialize(IActivityMonitor) Initialization of the handler: computes the path. Declaration public override void Initialize(IActivityMonitor m) Parameters Type Name Description IActivityMonitor m"
  },
  "api/CK.Monitoring.GrandOutputEventInfo.html": {
    "href": "api/CK.Monitoring.GrandOutputEventInfo.html",
    "title": "Struct GrandOutputEventInfo | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct GrandOutputEventInfo Captures a log data with the current Topic . Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public struct GrandOutputEventInfo Constructors | Improve this Doc View Source GrandOutputEventInfo(IMulticastLogEntry, String) Initializes a new GrandOutputEventInfo . Declaration public GrandOutputEventInfo(IMulticastLogEntry e, string topic) Parameters Type Name Description IMulticastLogEntry e Log entry. String topic Current topic. Fields | Improve this Doc View Source Entry A unified, immutable, log data. Declaration public readonly IMulticastLogEntry Entry Field Value Type Description IMulticastLogEntry | Improve this Doc View Source Topic The current topic of the monitor when the log occurred. Declaration public readonly string Topic Field Value Type Description String"
  },
  "api/CK.Monitoring.GrandOutputConfiguration.html": {
    "href": "api/CK.Monitoring.GrandOutputConfiguration.html",
    "title": "Class GrandOutputConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutputConfiguration Defines configuration for GrandOutput . This object is not thread safe. New GrandOutputConfiguration can be created when needed (and method LoadFromFile(String, IActivityMonitor) or Load(XElement, IActivityMonitor) called). Inheritance Object GrandOutputConfiguration Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public class GrandOutputConfiguration Constructors | Improve this Doc View Source GrandOutputConfiguration() Initializes a new GrandOutputConfiguration . Declaration public GrandOutputConfiguration() Properties | Improve this Doc View Source ChannelsConfiguration Gets or sets the channels configuration. RouteConfiguration is not a class specific to GrandOutput channels: care must be taken when working directly with this object (see remarks). Loading from xml should be used. Remarks ConfigData of the main route and all sub routes must be set to a GrandOutputChannelConfigData object. All actions added to the routes must inherit from HandlerConfiguration . Declaration public RouteConfiguration ChannelsConfiguration { get; set; } Property Value Type Description RouteConfiguration | Improve this Doc View Source GlobalDefaultFilter Gets or sets the default filter for the application domain. This value is set on the static DefaultFilter by SetConfiguration(GrandOutputConfiguration, IActivityMonitor, Int32) if and only if the configured GrandOutput is the Default . Declaration public LogFilter? GlobalDefaultFilter { get; set; } Property Value Type Description Nullable < LogFilter > | Improve this Doc View Source SourceOverrideFilter Gets or sets the source file filter mapping: when not null and if SourceOverrideFilterApplicationMode is Apply or ClearThenApply the SetConfiguration(GrandOutputConfiguration, IActivityMonitor, Int32) method clears any existing source file filters and sets this ones. Declaration public Dictionary<string, LogFilter> SourceOverrideFilter { get; set; } Property Value Type Description Dictionary < String , LogFilter > | Improve this Doc View Source SourceOverrideFilterApplicationMode Gets or sets how global source filter must be impacted. Declaration public SourceFilterApplyMode SourceOverrideFilterApplicationMode { get; set; } Property Value Type Description SourceFilterApplyMode Methods | Improve this Doc View Source Load(XElement, IActivityMonitor) Loads this configuration from a System.Xml.Linq.XElement . Declaration public bool Load(XElement e, IActivityMonitor monitor) Parameters Type Name Description XElement e The xml element: its name must be GrandOutputConfiguration. IActivityMonitor monitor Monitor that will be used. Returns Type Description Boolean True on success, false if the configuration can not be read. | Improve this Doc View Source LoadFromFile(String, IActivityMonitor) Loads this configuration from a System.Xml.Linq.XElement . Declaration public bool LoadFromFile(string path, IActivityMonitor monitor) Parameters Type Name Description String path Path to the configuration xml file. IActivityMonitor monitor Monitor that will be used. Returns Type Description Boolean True on success, false if the configuration can not be read."
  },
  "api/CK.Monitoring.GrandOutputClient.html": {
    "href": "api/CK.Monitoring.GrandOutputClient.html",
    "title": "Class GrandOutputClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class GrandOutputClient A GrandOutputClient is a IActivityMonitorClient that can only be obtained and registered through Register(IActivityMonitor) . Inheritance Object GrandOutputClient Namespace :CK.Monitoring Assembly :CK.Monitoring.dll Syntax public sealed class GrandOutputClient : IActivityMonitorBoundClient, IActivityMonitorClient Properties | Improve this Doc View Source Central Gets the GrandOutput to which this GrandOutputClient is bound. Declaration public GrandOutput Central { get; } Property Value Type Description GrandOutput | Improve this Doc View Source IActivityMonitorBoundClient.MinimalFilter Declaration LogFilter IActivityMonitorBoundClient.MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) forceBuggyRemove is not used here since this client is not lockable. Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data"
  },
  "api/CK.RouteConfig.Impl.html": {
    "href": "api/CK.RouteConfig.Impl.html",
    "title": "Namespace CK.RouteConfig.Impl | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.RouteConfig.Impl Classes ActionCompositeConfiguration Defines a composite action that can be a ActionParallelConfiguration or a ActionSequenceConfiguration . MetaConfiguration Base class for meta configuration object: those objects configure the configuration. MetaMultiConfiguration <T> Base class for meta configuration object that handles one or more items. Interfaces IProtoRoute Intermediate objects that captures the first step of configuration resolution. At this step we manipulate MetaConfiguration objects. IProtoRouteConfigurationContext Temporary context used to resolve the routes/actions associations. IProtoSubRoute Specialize IProtoRoute to expose a SubRouteConfiguration . A SubRouteConfiguration specifies the RoutePredicate that is the filter for the subordinated route. IRouteConfigurationContext Supports for route resolution. The final CurrentActions are embedded into RouteConfigurationResolved ."
  },
  "api/CK.RouteConfig.Impl.MetaMultiConfiguration`1.html": {
    "href": "api/CK.RouteConfig.Impl.MetaMultiConfiguration`1.html",
    "title": "Class MetaMultiConfiguration<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaMultiConfiguration<T> Base class for meta configuration object that handles one or more items. Inheritance Object MetaConfiguration MetaMultiConfiguration<T> Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public abstract class MetaMultiConfiguration<T> : MetaConfiguration Type Parameters Name Description T Constructors | Improve this Doc View Source MetaMultiConfiguration(T, T[]) Initializes a configuration with at least one item. Declaration public MetaMultiConfiguration(T first, params T[] other) Parameters Type Name Description T first First and required item. T[] other Optional multiple items. Properties | Improve this Doc View Source Items Gets the items. Declaration protected IReadOnlyList<T> Items { get; } Property Value Type Description IReadOnlyList <T> Methods | Improve this Doc View Source Add(T) Adds a new item. Declaration protected void Add(T item) Parameters Type Name Description T item Item to add."
  },
  "api/CK.RouteConfig.Impl.MetaConfiguration.html": {
    "href": "api/CK.RouteConfig.Impl.MetaConfiguration.html",
    "title": "Class MetaConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaConfiguration Base class for meta configuration object: those objects configure the configuration. Inheritance Object MetaConfiguration Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public abstract class MetaConfiguration Methods | Improve this Doc View Source Apply(IProtoRouteConfigurationContext) Applies the configuration (first step). By default, adds this meta configuration to the context so that Apply(IRouteConfigurationContext) will be called. Declaration protected virtual void Apply(IProtoRouteConfigurationContext protoContext) Parameters Type Name Description IProtoRouteConfigurationContext protoContext Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source Apply(IRouteConfigurationContext) Applies the configuration (second step). Declaration protected abstract void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckActionNameValidity(String, IActivityMonitor, String) Implements standard name checking for Name . The provided nameToCheck must not be null or empty or contains only whitespaces nor '/' character. The '/' is reserved to structure the namespace. Declaration public static bool CheckActionNameValidity(string routeName, IActivityMonitor monitor, string nameToCheck) Parameters Type Name Description String routeName The name of the route that contains the action. IActivityMonitor monitor The monitor that will receive error descriptions. String nameToCheck The name to check. Returns Type Description Boolean True if the name is valid. False otherwise. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Check the configuration validity. Declaration protected abstract bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if valid, false otherwise."
  },
  "api/CK.RouteConfig.Impl.IRouteConfigurationContext.html": {
    "href": "api/CK.RouteConfig.Impl.IRouteConfigurationContext.html",
    "title": "Interface IRouteConfigurationContext | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IRouteConfigurationContext Supports for route resolution. The final CurrentActions are embedded into RouteConfigurationResolved . Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public interface IRouteConfigurationContext Properties | Improve this Doc View Source CurrentActions Gets the list of ActionConfigurationResolved . Declaration IEnumerable<ActionConfigurationResolved> CurrentActions { get; } Property Value Type Description IEnumerable < ActionConfigurationResolved > | Improve this Doc View Source Monitor Gets the monitor to use. Declaration IActivityMonitor Monitor { get; } Property Value Type Description IActivityMonitor | Improve this Doc View Source ProtoRoute Gets the intermediate route object. Declaration IProtoRoute ProtoRoute { get; } Property Value Type Description IProtoRoute Methods | Improve this Doc View Source AddDeclaredAction(String, String, Boolean) Adds an action that has been previously declared or not: fromMetaInsert is true if we insert actions from MetaInsertActionConfiguration . It is false if the action is added by a direct MetaAddActionConfiguration . Declaration bool AddDeclaredAction(string name, string declaredName, bool fromMetaInsert) Parameters Type Name Description String name Name of the action to add. String declaredName Name of the declared action. Boolean fromMetaInsert True if this is from MetaInsertActionConfiguration , false when called by MetaAddActionConfiguration . Returns Type Description Boolean True if the action has been found and added. | Improve this Doc View Source FindExisting(String) Finds an existing action by its name. Declaration ActionConfigurationResolved FindExisting(string name) Parameters Type Name Description String name Returns Type Description ActionConfigurationResolved | Improve this Doc View Source RemoveAction(String) Removes a named action by name. Declaration bool RemoveAction(string name) Parameters Type Name Description String name Name of the action to remove. Returns Type Description Boolean True if the action has been found and removed. False otherwise."
  },
  "api/CK.RouteConfig.Impl.IProtoSubRoute.html": {
    "href": "api/CK.RouteConfig.Impl.IProtoSubRoute.html",
    "title": "Interface IProtoSubRoute | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IProtoSubRoute Specialize IProtoRoute to expose a SubRouteConfiguration . A SubRouteConfiguration specifies the RoutePredicate that is the filter for the subordinated route. Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public interface IProtoSubRoute : IProtoRoute Properties | Improve this Doc View Source Configuration Masked base Configuration so that it is a SubRouteConfiguration . Declaration SubRouteConfiguration Configuration { get; } Property Value Type Description SubRouteConfiguration"
  },
  "api/CK.RouteConfig.Impl.IProtoRouteConfigurationContext.html": {
    "href": "api/CK.RouteConfig.Impl.IProtoRouteConfigurationContext.html",
    "title": "Interface IProtoRouteConfigurationContext | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IProtoRouteConfigurationContext Temporary context used to resolve the routes/actions associations. Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public interface IProtoRouteConfigurationContext Properties | Improve this Doc View Source Monitor Gets the monitor to use. Declaration IActivityMonitor Monitor { get; } Property Value Type Description IActivityMonitor Methods | Improve this Doc View Source AddMeta(MetaConfiguration) Adds a MetaConfiguration to the route. Declaration void AddMeta(MetaConfiguration meta) Parameters Type Name Description MetaConfiguration meta The meta configuration. | Improve this Doc View Source AddRoute(SubRouteConfiguration) Adds a new subordinated route. Declaration bool AddRoute(SubRouteConfiguration route) Parameters Type Name Description SubRouteConfiguration route The new subordinated route. Returns Type Description Boolean True on success, false if an error occurred such as a name clash for the route. | Improve this Doc View Source DeclareAction(ActionConfiguration, Boolean) Declares an action that can be an override of an existing one. Declaration bool DeclareAction(ActionConfiguration a, bool overridden) Parameters Type Name Description ActionConfiguration a Action to declare. Boolean overridden True if the action overrides an existing one. Returns Type Description Boolean True on success, false if an error occurred such as a name clash for the action and it is not an override."
  },
  "api/CK.Core.Tests.EnumerableExtensionTests.html": {
    "href": "api/CK.Core.Tests.EnumerableExtensionTests.html",
    "title": "Class EnumerableExtensionTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EnumerableExtensionTests Inheritance Object EnumerableExtensionTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class EnumerableExtensionTests Methods | Improve this Doc View Source MaxBy_throws_InvalidOperationException_on_empty_sequence() Declaration [Test] public void MaxBy_throws_InvalidOperationException_on_empty_sequence() | Improve this Doc View Source test_Append_extension_method() Declaration [Test] public void test_Append_extension_method() | Improve this Doc View Source test_IndexOf_extension_method() Declaration [Test] public void test_IndexOf_extension_method() | Improve this Doc View Source test_IsSortedStrict_and_IsSortedLarge_extension_methods() Declaration [Test] public void test_IsSortedStrict_and_IsSortedLarge_extension_methods() | Improve this Doc View Source test_MaxBy_extension_method() Declaration [Test] public void test_MaxBy_extension_method()"
  },
  "api/CK.Core.Tests.EmptyClass.html": {
    "href": "api/CK.Core.Tests.EmptyClass.html",
    "title": "Class EmptyClass | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class EmptyClass Inheritance Object EmptyClass Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class EmptyClass"
  },
  "api/CK.Core.Tests.DisposableThatReenterClearWhenDisposed.html": {
    "href": "api/CK.Core.Tests.DisposableThatReenterClearWhenDisposed.html",
    "title": "Class DisposableThatReenterClearWhenDisposed | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DisposableThatReenterClearWhenDisposed Inheritance Object DisposableThatReenterClearWhenDisposed Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class DisposableThatReenterClearWhenDisposed : IDisposable Properties | Improve this Doc View Source ServiceContainer Declaration public ISimpleServiceContainer ServiceContainer { get; set; } Property Value Type Description ISimpleServiceContainer Methods | Improve this Doc View Source Dispose() Declaration public void Dispose()"
  },
  "api/CK.Core.Tests.CriticalErrorCollectorTests.html": {
    "href": "api/CK.Core.Tests.CriticalErrorCollectorTests.html",
    "title": "Class CriticalErrorCollectorTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CriticalErrorCollectorTests Inheritance Object CriticalErrorCollectorTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class CriticalErrorCollectorTests Methods | Improve this Doc View Source simple_add_exception_to_CriticalErrorCollector() Declaration [Test] public void simple_add_exception_to_CriticalErrorCollector()"
  },
  "api/CK.Core.Tests.CollectionExtensionTests.html": {
    "href": "api/CK.Core.Tests.CollectionExtensionTests.html",
    "title": "Class CollectionExtensionTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CollectionExtensionTests Inheritance Object CollectionExtensionTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class CollectionExtensionTests Methods | Improve this Doc View Source CKEnumeratorMono_works() Declaration [Test] public void CKEnumeratorMono_works() | Improve this Doc View Source testing_RemoveWhereAndReturnsRemoved_extension_method() Declaration [Test] public void testing_RemoveWhereAndReturnsRemoved_extension_method()"
  },
  "api/CK.Core.Tests.Collection.html": {
    "href": "api/CK.Core.Tests.Collection.html",
    "title": "Namespace CK.Core.Tests.Collection | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Core.Tests.Collection Classes FIFOTests ReadOnlyTests SortedArrayKeyListTests SortedArrayListTests TestCollection <T> TestCollectionThatImplementsICollection <T>"
  },
  "api/CK.Core.Tests.Collection.TestCollection`1.html": {
    "href": "api/CK.Core.Tests.Collection.TestCollection`1.html",
    "title": "Class TestCollection<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TestCollection<T> Inheritance Object TestCollection<T> Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax public class TestCollection<T> : ICKReadOnlyCollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source TestCollection() Declaration public TestCollection() Fields | Improve this Doc View Source Content Declaration public List<T> Content Field Value Type Description List <T> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Contains(Object) Declaration public bool Contains(object item) Parameters Type Name Description Object item Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Events | Improve this Doc View Source ContainsCalled Declaration public event EventHandler ContainsCalled Event Type Type Description EventHandler | Improve this Doc View Source CountCalled Declaration public event EventHandler CountCalled Event Type Type Description EventHandler"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.MK`1.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.MK`1.html",
    "title": "Class AutoImplementorTests.MK<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.MK<T> Inheritance Object AutoImplementorTests.MK<T> Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class MK<T> Type Parameters Name Description T"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.K.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.K.html",
    "title": "Class AutoImplementorTests.K | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.K Inheritance Object AutoImplementorTests.K Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class K Methods | Improve this Doc View Source M<T>() Declaration public abstract AutoImplementorTests.MK<T> M<T>() Returns Type Description AutoImplementorTests.MK <T> Type Parameters Name Description T"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.J.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.J.html",
    "title": "Class AutoImplementorTests.J | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.J Inheritance Object AutoImplementorTests.J Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class J Methods | Improve this Doc View Source M(ref CultureAttribute) Declaration public abstract byte M(ref CultureAttribute i) Parameters Type Name Description NUnit.Framework.CultureAttribute i Returns Type Description Byte"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.I.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.I.html",
    "title": "Class AutoImplementorTests.I | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.I Inheritance Object AutoImplementorTests.I Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class I Methods | Improve this Doc View Source M(out CultureAttribute) Declaration public abstract byte M(out CultureAttribute i) Parameters Type Name Description NUnit.Framework.CultureAttribute i Returns Type Description Byte"
  },
  "api/CK.RouteConfig.ActionConfiguration.html": {
    "href": "api/CK.RouteConfig.ActionConfiguration.html",
    "title": "Class ActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActionConfiguration Configuration for an action defines a Name . This name must be unique among its sequence. Inheritance Object ActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public abstract class ActionConfiguration Constructors | Improve this Doc View Source ActionConfiguration(String) Initializes a new ActionConfiguration . Declaration protected ActionConfiguration(string name) Parameters Type Name Description String name Required non empty name that identifies this configuration. Can not be null. Properties | Improve this Doc View Source IsCloneable Gets whether this configuration is clone-able. Defaults to false. Declaration public virtual bool IsCloneable { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets or sets the name of this configuration. Can not be null. Remarks Whether this name is a valid one or not is not checked by the configuration itself but by the MetaConfiguration that \"covers\" it: different rules may be implemented for the name of a configuration depending of the way it is used, this is the role of the meta configuration. Declaration public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks the configuration validity. By default returns true. Declaration public virtual bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains the configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if the configuration is valid, false otherwise. | Improve this Doc View Source Clone() Clones this configuration. By default throws a System.NotSupportedException . Declaration public virtual ActionConfiguration Clone() Returns Type Description ActionConfiguration A clone."
  },
  "api/CK.Reflection.html": {
    "href": "api/CK.Reflection.html",
    "title": "Namespace CK.Reflection | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Reflection Classes DelegateHelper Utility methods for common reflection tasks. Adapted from http://kennethxublogsource.googlecode.com/svn/trunk/CommonReflection/src/Common.Reflection/Reflections.cs by Kenneth Xu. EmitHelper Collection of helpers to emit dynamic code. ILGeneratorExtension Provides extension methods on System.Reflection.Emit.ILGenerator class. MemberInfoEqualityComparer Provides actual comparison of System.Reflection.MemberInfo without considering the System.Reflection.MemberInfo.ReflectedType . ReflectionHelper Reflection related helpers methods that can not (really) be defined as extension methods. TypeBuilderExtension Provides extension methods on System.Reflection.Emit.TypeBuilder class. Enums DelegateHelper.CreateInvalidSetterOption Describes the behavior of CreateSetter methods when no setter exists on the property."
  },
  "api/CK.Reflection.TypeBuilderExtension.html": {
    "href": "api/CK.Reflection.TypeBuilderExtension.html",
    "title": "Class TypeBuilderExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TypeBuilderExtension Provides extension methods on System.Reflection.Emit.TypeBuilder class. Inheritance Object TypeBuilderExtension Namespace :CK.Reflection Assembly :CK.Reflection.dll Syntax public class TypeBuilderExtension Methods | Improve this Doc View Source DefinePassThroughConstructors(TypeBuilder, Func<ConstructorInfo, Nullable<MethodAttributes>>, Func<ConstructorInfo, CustomAttributeData, Boolean>, Func<ParameterInfo, CustomAttributeData, Boolean>) Creates constructors that relay calls to public and protected constructors in the base class. Declaration public static void DefinePassThroughConstructors(TypeBuilder this, Func<ConstructorInfo, MethodAttributes? > baseConstructorfilter = null, Func<ConstructorInfo, CustomAttributeData, bool> constructorAttributesFilter = null, Func<ParameterInfo, CustomAttributeData, bool> parameterAttributesFilter = null) Parameters Type Name Description TypeBuilder this This System.Reflection.Emit.TypeBuilder . Func < ConstructorInfo , Nullable < MethodAttributes >> baseConstructorfilter Optional predicate used to filter constructors that must be implemented and set its System.Reflection.MethodAttributes . When this function returns null, the constructor is not implemented, otherwise it can return the baseConstructor's Attribute. When null, all public and protected constructors are replicated with the same access (public or protected). Func < ConstructorInfo , CustomAttributeData , Boolean > constructorAttributesFilter Optional predicate used to filter constructors' attributes. When null, all attributes are redefined. Func < ParameterInfo , CustomAttributeData , Boolean > parameterAttributesFilter Optional predicate used to filter constructors' arguments' attributes. When null, all attributes are redefined."
  },
  "api/CK.Reflection.Tests.html": {
    "href": "api/CK.Reflection.Tests.html",
    "title": "Namespace CK.Reflection.Tests | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Reflection.Tests Classes A AutoImplementorTests AutoImplementorTests.A AutoImplementorTests.B AutoImplementorTests.BaseOne AutoImplementorTests.BaseThree AutoImplementorTests.BaseTwo AutoImplementorTests.C AutoImplementorTests.CNonVirtualProperty AutoImplementorTests.CustAttr AutoImplementorTests.CVirtualProperty AutoImplementorTests.D AutoImplementorTests.E AutoImplementorTests.F AutoImplementorTests.G AutoImplementorTests.H AutoImplementorTests.I AutoImplementorTests.J AutoImplementorTests.K AutoImplementorTests.MK <T> AutoImplementorTests.PA AutoImplementorTests.PB B C Close Close2 CloseBase <T> HelperTest HelperTest.PA HelperTest.PB HelperTest.PropInheritedAttribute HelperTest.PropNOTInheritedAttribute ObjectAndType ObjectAndType.A ObjectAndType.B TypeMatches Interfaces HelperTest.IA HelperTest.IB HelperTest.IC"
  },
  "api/CK.Reflection.Tests.TypeMatches.html": {
    "href": "api/CK.Reflection.Tests.TypeMatches.html",
    "title": "Class TypeMatches | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TypeMatches Inheritance Object TypeMatches Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [TestFixture] [ExcludeFromCodeCoverage] public class TypeMatches Methods | Improve this Doc View Source TestCovarianceMatch() Declaration [Test] public void TestCovarianceMatch()"
  },
  "api/CK.Reflection.Tests.ObjectAndType.html": {
    "href": "api/CK.Reflection.Tests.ObjectAndType.html",
    "title": "Class ObjectAndType | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ObjectAndType Inheritance Object ObjectAndType Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [TestFixture] [ExcludeFromCodeCoverage] [Category(\"Reflection\")] public class ObjectAndType Methods | Improve this Doc View Source InstanceInvoker() Declaration [Test] public void InstanceInvoker() | Improve this Doc View Source NonVirtualInstanceInvoker() Declaration [Test] public void NonVirtualInstanceInvoker() | Improve this Doc View Source StaticInvoker() Declaration [Test] public void StaticInvoker()"
  },
  "api/CK.Reflection.Tests.ObjectAndType.B.html": {
    "href": "api/CK.Reflection.Tests.ObjectAndType.B.html",
    "title": "Class ObjectAndType.B | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ObjectAndType.B Inheritance Object ObjectAndType.A ObjectAndType.B Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class B : ObjectAndType.A Methods | Improve this Doc View Source SimpleMethod(Int32) Declaration public override string SimpleMethod(int i) Parameters Type Name Description Int32 i Returns Type Description String"
  },
  "api/CK.Reflection.Tests.ObjectAndType.A.html": {
    "href": "api/CK.Reflection.Tests.ObjectAndType.A.html",
    "title": "Class ObjectAndType.A | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ObjectAndType.A Inheritance Object ObjectAndType.A Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class A Methods | Improve this Doc View Source SimpleMethod(Int32) Declaration public virtual string SimpleMethod(int i) Parameters Type Name Description Int32 i Returns Type Description String | Improve this Doc View Source StaticMethod(Int32) Declaration public static string StaticMethod(int i) Parameters Type Name Description Int32 i Returns Type Description String"
  },
  "api/CK.Reflection.Tests.HelperTest.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.html",
    "title": "Class HelperTest | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HelperTest Inheritance Object HelperTest Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [TestFixture] [ExcludeFromCodeCoverage] [Category(\"Reflection\")] public class HelperTest Properties | Improve this Doc View Source AnIntProperty Declaration public int AnIntProperty { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ExplicitImplementation() Declaration [Test] public void ExplicitImplementation() | Improve this Doc View Source FlattenProperties() Declaration [Test] public void FlattenProperties() | Improve this Doc View Source Parameters() Declaration [Test] public void Parameters() | Improve this Doc View Source PropertyInfoThroughLambda() Declaration [Test] public void PropertyInfoThroughLambda() | Improve this Doc View Source PropertyInheritanceAndAttributes() Declaration [Test] public void PropertyInheritanceAndAttributes() | Improve this Doc View Source PropertySetter() Declaration [Test] public void PropertySetter()"
  },
  "api/CK.Reflection.Tests.HelperTest.PropNOTInheritedAttribute.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.PropNOTInheritedAttribute.html",
    "title": "Class HelperTest.PropNOTInheritedAttribute | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HelperTest.PropNOTInheritedAttribute Inheritance Object Attribute HelperTest.PropNOTInheritedAttribute Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class PropNOTInheritedAttribute : Attribute, _Attribute"
  },
  "api/CK.Reflection.Tests.HelperTest.PropInheritedAttribute.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.PropInheritedAttribute.html",
    "title": "Class HelperTest.PropInheritedAttribute | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HelperTest.PropInheritedAttribute Inheritance Object Attribute HelperTest.PropInheritedAttribute Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)] public class PropInheritedAttribute : Attribute, _Attribute"
  },
  "api/CK.Reflection.Tests.HelperTest.PB.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.PB.html",
    "title": "Class HelperTest.PB | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HelperTest.PB Inheritance Object HelperTest.PA HelperTest.PB Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class PB : HelperTest.PA Properties | Improve this Doc View Source PropA Declaration public int PropA { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PropAVirtual Declaration public override int PropAVirtual { get; set; } Property Value Type Description Int32"
  },
  "api/CK.Reflection.Tests.HelperTest.PA.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.PA.html",
    "title": "Class HelperTest.PA | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class HelperTest.PA Inheritance Object HelperTest.PA Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class PA Properties | Improve this Doc View Source PropA Declaration public int PropA { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PropAVirtual Declaration public virtual int PropAVirtual { get; set; } Property Value Type Description Int32"
  },
  "api/CK.Reflection.Tests.HelperTest.IC.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.IC.html",
    "title": "Interface HelperTest.IC | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface HelperTest.IC Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public interface IC : HelperTest.IA Properties | Improve this Doc View Source PropA Declaration HelperTest.IC PropA { get; set; } Property Value Type Description HelperTest.IC"
  },
  "api/CK.Reflection.Tests.HelperTest.IB.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.IB.html",
    "title": "Interface HelperTest.IB | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface HelperTest.IB Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public interface IB : HelperTest.IA Properties | Improve this Doc View Source PropB Declaration HelperTest.IB PropB { get; set; } Property Value Type Description HelperTest.IB"
  },
  "api/CK.Reflection.Tests.HelperTest.IA.html": {
    "href": "api/CK.Reflection.Tests.HelperTest.IA.html",
    "title": "Interface HelperTest.IA | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface HelperTest.IA Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public interface IA Properties | Improve this Doc View Source PropA Declaration HelperTest.IA PropA { get; set; } Property Value Type Description HelperTest.IA"
  },
  "api/CK.Reflection.Tests.CloseBase`1.html": {
    "href": "api/CK.Reflection.Tests.CloseBase`1.html",
    "title": "Class CloseBase<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CloseBase<T> Inheritance Object CloseBase<T> Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class CloseBase<T> : IBase<T>, IOverBase<T> Type Parameters Name Description T Properties | Improve this Doc View Source Pouf Declaration public int Pouf { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf0 Declaration public int Pouf0 { get; set; } Property Value Type Description Int32 Events | Improve this Doc View Source Event2 Declaration public event EventHandler Event2 Event Type Type Description EventHandler"
  },
  "api/CK.Reflection.Tests.Close2.html": {
    "href": "api/CK.Reflection.Tests.Close2.html",
    "title": "Class Close2 | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Close2 Inheritance Object CloseBase < B > Close2 Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class Close2 : CloseBase<B>, IBase<B>, IOverBase<B>, IDerived<bool, B>, IBase<bool>, IOverBase<bool>, IBase2<bool, B>, IOverBase2<bool> Properties | Improve this Doc View Source Pouf Declaration public int Pouf { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf0 Declaration public int Pouf0 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf2 Declaration public int Pouf2 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf3 Declaration public int Pouf3 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf4 Declaration public int Pouf4 { get; set; } Property Value Type Description Int32 Events | Improve this Doc View Source Event1 Declaration public event EventHandler Event1 Event Type Type Description EventHandler | Improve this Doc View Source Event2 Declaration public event EventHandler Event2 Event Type Type Description EventHandler"
  },
  "api/CK.Reflection.Tests.Close.html": {
    "href": "api/CK.Reflection.Tests.Close.html",
    "title": "Class Close | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Close Inheritance Object CloseBase < Boolean > Close Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class Close : CloseBase<bool>, IDerived<bool, B>, IBase<bool>, IOverBase<bool>, IBase2<bool, B>, IOverBase2<bool> Properties | Improve this Doc View Source Pouf Declaration public int Pouf { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf0 Declaration public int Pouf0 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf2 Declaration public int Pouf2 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf3 Declaration public int Pouf3 { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Pouf4 Declaration public int Pouf4 { get; set; } Property Value Type Description Int32 Events | Improve this Doc View Source Event1 Declaration public event EventHandler Event1 Event Type Type Description EventHandler | Improve this Doc View Source Event2 Declaration public event EventHandler Event2 Event Type Type Description EventHandler"
  },
  "api/CK.Reflection.Tests.C.html": {
    "href": "api/CK.Reflection.Tests.C.html",
    "title": "Class C | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class C Inheritance Object A B C Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class C : B"
  },
  "api/CK.Reflection.Tests.B.html": {
    "href": "api/CK.Reflection.Tests.B.html",
    "title": "Class B | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class B Inheritance Object A B Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [ExcludeFromCodeCoverage] public class B : A"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.html",
    "title": "Class AutoImplementorTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests Inheritance Object AutoImplementorTests Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [TestFixture] [ExcludeFromCodeCoverage] [Category(\"EmitHelper\")] public class AutoImplementorTests Methods | Improve this Doc View Source AutoImplementGenericMethod() Declaration [Test] public void AutoImplementGenericMethod() | Improve this Doc View Source AutoImplementStubForNonVirtualPropertyIsStupid() Declaration [Test] public void AutoImplementStubForNonVirtualPropertyIsStupid() | Improve this Doc View Source AutoImplementStubForVirtualPropertyActuallyReplacesIt() Declaration [Test] public void AutoImplementStubForVirtualPropertyActuallyReplacesIt() | Improve this Doc View Source AutoImplementStubOutClass() Declaration [Test] public void AutoImplementStubOutClass() | Improve this Doc View Source AutoImplementStubOutGuid() Declaration [Test] public void AutoImplementStubOutGuid() | Improve this Doc View Source AutoImplementStubOutInt() Declaration [Test] public void AutoImplementStubOutInt() | Improve this Doc View Source AutoImplementStubProperty() Declaration [Test] public void AutoImplementStubProperty() | Improve this Doc View Source AutoImplementStubRefClass() Declaration [Test] public void AutoImplementStubRefClass() | Improve this Doc View Source AutoImplementStubRefGuid() Declaration [Test] public void AutoImplementStubRefGuid() | Improve this Doc View Source AutoImplementStubRefInt() Declaration [Test] public void AutoImplementStubRefInt() | Improve this Doc View Source AutoImplementStubReturnsClassAndProtected() Declaration [Test] public void AutoImplementStubReturnsClassAndProtected() | Improve this Doc View Source AutoImplementStubReturnsGuid() Declaration [Test] public void AutoImplementStubReturnsGuid() | Improve this Doc View Source AutoImplementStubReturnsInt() Declaration [Test] public void AutoImplementStubReturnsInt() | Improve this Doc View Source AutoImplementStubReturnsShort() Declaration [Test] public void AutoImplementStubReturnsShort() | Improve this Doc View Source CreateTypeBuilder(Type) Declaration public TypeBuilder CreateTypeBuilder(Type baseType) Parameters Type Name Description Type baseType Returns Type Description TypeBuilder | Improve this Doc View Source ImplementOutParameters() Declaration [Test] public void ImplementOutParameters() | Improve this Doc View Source PassThroughConstructors() Declaration [Test] public void PassThroughConstructors()"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.PB.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.PB.html",
    "title": "Class AutoImplementorTests.PB | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.PB Inheritance Object AutoImplementorTests.PA AutoImplementorTests.PB Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class PB : AutoImplementorTests.PA Properties | Improve this Doc View Source PublicProperty Declaration public byte PublicProperty { get; } Property Value Type Description Byte"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.PA.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.PA.html",
    "title": "Class AutoImplementorTests.PA | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.PA Inheritance Object AutoImplementorTests.PA Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class PA Properties | Improve this Doc View Source ProtectedWriteableValue Declaration public abstract int ProtectedWriteableValue { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source PublicProperty Declaration public int PublicProperty { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source PublicWriteableValue Declaration public abstract int PublicWriteableValue { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source SetProtectedValues(Int32) Declaration public void SetProtectedValues(int v) Parameters Type Name Description Int32 v"
  },
  "api/CK.Core.IDisposableGroup.html": {
    "href": "api/CK.Core.IDisposableGroup.html",
    "title": "Interface IDisposableGroup | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IDisposableGroup Interface obtained once a Group has been opened. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IDisposableGroup : IDisposable Methods | Improve this Doc View Source ConcludeWith(Func<String>) Sets a function that will be called on group closing to generate a conclusion. Declaration IDisposable ConcludeWith(Func<string> getConclusionText) Parameters Type Name Description Func < String > getConclusionText Function that generates a group conclusion. Returns Type Description IDisposable A disposable object that can be used to close the group. | Improve this Doc View Source SetTopic(String) Sets a temporary topic associated to this group. The current monitor's topic will be automatically restored when group will be closed. Declaration IDisposableGroup SetTopic(string topicOtherThanGroupText = null) Parameters Type Name Description String topicOtherThanGroupText Explicit topic it it must differ from the group's text. Returns Type Description IDisposableGroup This object in order to call ConcludeWith(Func<String>) or to dispose it to close the group."
  },
  "api/CK.Core.IDisposableActivityMonitor.html": {
    "href": "api/CK.Core.IDisposableActivityMonitor.html",
    "title": "Interface IDisposableActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IDisposableActivityMonitor A diposable IActivityMonitor . Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public interface IDisposableActivityMonitor : IActivityMonitor, IDisposable"
  },
  "api/CK.Core.ICKWritableCollector`1.html": {
    "href": "api/CK.Core.ICKWritableCollector`1.html",
    "title": "Interface ICKWritableCollector<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKWritableCollector<T> Contravariant interface for a collector: one can only add elements to a collector and know how much elements there are (Note that if you do not need the Count , you should use a simple Fun ). Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKWritableCollector<in T> Type Parameters Name Description T Base type for the elements of the collector. Properties | Improve this Doc View Source Count Gets the count of elements in the collection. Declaration int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(T) Adds an element to the collection. The exact behavior of this operation depends on the concrete implementation (duplicates, filters, etc.). Declaration bool Add(T e) Parameters Type Name Description T e Element to add. Returns Type Description Boolean True if the element has been added, false otherwise."
  },
  "api/CK.Core.ICKWritableCollection`1.html": {
    "href": "api/CK.Core.ICKWritableCollection`1.html",
    "title": "Interface ICKWritableCollection<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKWritableCollection<T> Contravariant interface for a collection that allows to Clear() and Remove(T) element. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKWritableCollection<in T> : ICKWritableCollector<T> Type Parameters Name Description T Base type for the elements of the collection. Methods | Improve this Doc View Source Clear() Clears the collection. Declaration void Clear() | Improve this Doc View Source Remove(T) Removes the element if it exists. Declaration bool Remove(T e) Parameters Type Name Description T e Element to remove. Returns Type Description Boolean True if the element has been removed, false otherwise."
  },
  "api/CK.Core.ICKReadOnlyUniqueKeyedCollection`2.html": {
    "href": "api/CK.Core.ICKReadOnlyUniqueKeyedCollection`2.html",
    "title": "Interface ICKReadOnlyUniqueKeyedCollection<T, TKey> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKReadOnlyUniqueKeyedCollection<T, TKey> Represents a generic read only keyed collections of covariant items with a contravariant key. This interface can be supported by collections that support duplicated items. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKReadOnlyUniqueKeyedCollection<out T, in TKey> : ICKReadOnlyCollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of the elements in the collection. TKey The type of the key associated to the elements. Methods | Improve this Doc View Source Contains(TKey) Checks whether any item in this keyed collection is associated to the given key value. Declaration bool Contains(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description Boolean True if the key exists, false otherwise. | Improve this Doc View Source GetByKey(TKey, out Boolean) Gets the item with the associated key. When duplicated item exists, any item with the given key can be returned. Remarks Due to current CLI limitation (out parameters are actually ref parameters), it is not possible to define a method with an ( out T ) parameter where T is covariant: we can not define the standard TryGetValue method but this \"opposite\" form. Declaration T GetByKey(TKey key, out bool exists) Parameters Type Name Description TKey key The item key. Boolean exists True if the key has been found, false otherwise (see remarks). Returns Type Description T The item that matches the key, default(T) if the key can not be found."
  },
  "api/CK.Core.ICKReadOnlyMultiKeyedCollection`2.html": {
    "href": "api/CK.Core.ICKReadOnlyMultiKeyedCollection`2.html",
    "title": "Interface ICKReadOnlyMultiKeyedCollection<T, TKey> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKReadOnlyMultiKeyedCollection<T, TKey> Represents a generic read only keyed collections of covariant items with a contravariant key that can support duplicate items. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKReadOnlyMultiKeyedCollection<out T, in TKey> : ICKReadOnlyUniqueKeyedCollection<T, TKey>, ICKReadOnlyCollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of the elements in the collection. TKey The type of the key associated to the elements. Properties | Improve this Doc View Source AllowDuplicates Gets whether this collection supports duplicates. Declaration bool AllowDuplicates { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetAllByKey(TKey) Gets an independant collection of the items that are associated to the given key value. Declaration IReadOnlyCollection<T> GetAllByKey(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description IReadOnlyCollection <T> An independant collection of T . | Improve this Doc View Source KeyCount(TKey) Gets the number of items in this keyed collection that are associated to the given key value. Declaration int KeyCount(TKey key) Parameters Type Name Description TKey key The key to find. Returns Type Description Int32 Number of items with the key ."
  },
  "api/CK.Core.ICKReadOnlyList`1.html": {
    "href": "api/CK.Core.ICKReadOnlyList`1.html",
    "title": "Interface ICKReadOnlyList<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ICKReadOnlyList<T> Represents a read only collection of objects that can be individually accessed by index. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ICKReadOnlyList<out T> : ICKReadOnlyCollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of elements in the list. Methods | Improve this Doc View Source IndexOf(Object) Determines the index of a specific item in the list. Remarks The fact that System.Int32.MinValue is used to indicate an \"impossible index\" enables this covariant list to gracefully handle the case where the item's type is more general that the actual type list. Similarly, if the implementation is associated to any kind of filters, returning System.Int32.MinValue instead of any other negative value indicates to the caller that the item does not appear in the list, but more than that, that it CAN NOT appear. Note that an implementation can perfectly ignore these guidelines and returns -1 (typically) for any unexisting items: it is not an obligation to challenge any possible filters or constraints inside this IndexOf method. On the other hand, if this method returns System.Int32.MinValue then it MUST mean that the item can NOT appear in this list. Declaration int IndexOf(object item) Parameters Type Name Description Object item The object to locate in the list. Returns Type Description Int32 A positive index of the item in this list, if found, a negative index otherwise. If this list is sorted, this must work exactly like System.Array.BinarySearch(System.Array,System.Object) : if the item is not found and could be added, the result is a negative number which is the bitwise complement of the index at which the new item should be inserted. To handle the case where the item can NOT be inserted and to be consistent with the positive/negative index semantics, the System.Int32.MinValue must be returned. See remarks."
  },
  "api/CK.Text.Tests.ExploringTests.html": {
    "href": "api/CK.Text.Tests.ExploringTests.html",
    "title": "Class ExploringTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ExploringTests Inheritance Object ExploringTests Namespace :CK.Text.Tests Assembly :CK.Text.Tests.dll Syntax [TestFixture] public class ExploringTests Methods | Improve this Doc View Source appending_multi_lines_to_empty_lines() Declaration [Test] public void appending_multi_lines_to_empty_lines() | Improve this Doc View Source appending_multi_lines_with_a_prefix() Declaration [Test] public void appending_multi_lines_with_a_prefix() | Improve this Doc View Source appending_multi_lines_with_a_prefix_with_null_or_empty_or_one_line() Declaration [Test] public void appending_multi_lines_with_a_prefix_with_null_or_empty_or_one_line() | Improve this Doc View Source our_appending_multi_lines_is_slower_than_naive_implementation_since_String_Replace_is_purely_native() Declaration [Test] public void our_appending_multi_lines_is_slower_than_naive_implementation_since_String_Replace_is_purely_native()"
  },
  "api/CK.Text.StringMatcherTextExtension.html": {
    "href": "api/CK.Text.StringMatcherTextExtension.html",
    "title": "Class StringMatcherTextExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringMatcherTextExtension Extends StringMatcher with useful (yet basic) methods. Inheritance Object StringMatcherTextExtension Namespace :CK.Text Assembly :CK.Text.dll Syntax public class StringMatcherTextExtension Fields | Improve this Doc View Source RegexDouble The System.Text.RegularExpressions.Regex that TryMatchDoubleValue(StringMatcher) uses to avoid calling System.Double.TryParse(System.String,System.Double@) when resolving the value is useless. Declaration public static readonly Regex RegexDouble Field Value Type Description Regex Methods | Improve this Doc View Source MatchInt32(StringMatcher, out Int32, Int32, Int32) Matches Int32 values that must not start with '0' ('0' is valid but '0d', where d is any digit, is not). A signed integer starts with a '-'. '-0' is valid but '-0d' (where d is any digit) is not. If the value is to big for an Int32, it fails. Declaration public static bool MatchInt32(StringMatcher this, out int i, int minValue = -2147483648, int maxValue = 2147483647) Parameters Type Name Description StringMatcher this This StringMatcher . Int32 i The result integer. 0 on failure. Int32 minValue Optional minimal value. Int32 maxValue Optional maximal value. Returns Type Description Boolean true when matched, false otherwise. | Improve this Doc View Source TryMatchDoubleValue(StringMatcher) Matches a double without getting its value nor setting an error if match fails. This uses RegexDouble . Declaration public static bool TryMatchDoubleValue(StringMatcher this) Parameters Type Name Description StringMatcher this This StringMatcher . Returns Type Description Boolean true when matched, false otherwise. | Improve this Doc View Source TryMatchDoubleValue(StringMatcher, out Double) Matches a double and gets its value. No error is set if match fails. Declaration public static bool TryMatchDoubleValue(StringMatcher this, out double value) Parameters Type Name Description StringMatcher this This StringMatcher . Double value The read value on success. Returns Type Description Boolean true when matched, false otherwise. | Improve this Doc View Source TryMatchJSONQuotedString(StringMatcher, Boolean) Matches a quoted string without extracting its content. Declaration public static bool TryMatchJSONQuotedString(StringMatcher this, bool allowNull = false) Parameters Type Name Description StringMatcher this This StringMatcher . Boolean allowNull True to allow 'null'. Returns Type Description Boolean true when matched, false otherwise. | Improve this Doc View Source TryMatchJSONQuotedString(StringMatcher, out String, Boolean) Matches a JSON quoted string without setting an error if match fails. Declaration public static bool TryMatchJSONQuotedString(StringMatcher this, out string content, bool allowNull = false) Parameters Type Name Description StringMatcher this This StringMatcher . String content Extracted content. Boolean allowNull True to allow 'null'. Returns Type Description Boolean true when matched, false otherwise. | Improve this Doc View Source TryMatchJSONTerminalValue(StringMatcher) Matches a JSON value: a \"string\", null, a number (double value), true or false. This method ignores the actual value and does not set any error if match fails. Declaration public static bool TryMatchJSONTerminalValue(StringMatcher this) Parameters Type Name Description StringMatcher this This StringMatcher . Returns Type Description Boolean True if a JSON value has been matched, false otherwise. | Improve this Doc View Source TryMatchJSONValue(StringMatcher, out Object) Matches a JSON value: a \"string\", null, a number (double value), true or false. Not error is set if match fails. Declaration public static bool TryMatchJSONValue(StringMatcher this, out object value) Parameters Type Name Description StringMatcher this This StringMatcher . Object value The parsed value. Can be null. Returns Type Description Boolean True if a JSON value has been matched, false otherwise."
  },
  "api/CK.Text.StringMatcher.html": {
    "href": "api/CK.Text.StringMatcher.html",
    "title": "Class StringMatcher | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringMatcher This class supports \"Match and Forward\" pattern. On a failed match, the SetError(Object, String) method sets the ErrorMessage . On a successful match, the StartIndex is updated by a call to Forward(Int32) so that the Head is positioned after the match (and any existing error is cleared). There are 2 main kind of methods: TryMatchXXX that when the match fails returns false but do not call SetError(Object, String) and MatchXXX that do set an error on failure. This class does not actually hide/encapsulate a lot of things: it is designed to be extended through extension methods. Inheritance Object StringMatcher Namespace :CK.Text Assembly :CK.Text.dll Syntax public sealed class StringMatcher Constructors | Improve this Doc View Source StringMatcher(String, Int32) Initializes a new instance of the StringMatcher class. Declaration public StringMatcher(string text, int startIndex = 0) Parameters Type Name Description String text The string to parse. Int32 startIndex Index where the match must start in text . | Improve this Doc View Source StringMatcher(String, Int32, Int32) Initializes a new instance of the StringMatcher class on a substring. Declaration public StringMatcher(string text, int startIndex, int length) Parameters Type Name Description String text The string to parse. Int32 startIndex Index where the match must start in text . Int32 length Number of characters to consider in the string. If startIndex + length is greater than the length of the string, an System.ArgumentException is thrown. Properties | Improve this Doc View Source ErrorMessage Gets the error message if any. You can call SetSuccess() to clear the error. Declaration public string ErrorMessage { get; } Property Value Type Description String The error message. Null when no error. | Improve this Doc View Source Head Gets the current head: this is the character in Text at index StartIndex . Declaration public char Head { get; } Property Value Type Description Char The head. | Improve this Doc View Source IsEnd Gets whether this matcher is at the end of the text to match. Declaration public bool IsEnd { get; } Property Value Type Description Boolean true on end; otherwise, false . | Improve this Doc View Source IsError Gets whether an error has been set. You can call SetSuccess() to clear the error. Declaration public bool IsError { get; } Property Value Type Description Boolean true on error; otherwise, false . | Improve this Doc View Source Length Gets the current length available. Declaration public int Length { get; } Property Value Type Description Int32 The length. | Improve this Doc View Source StartIndex Gets the current start index: this is incremented by Forward(Int32) or UncheckedMove(Int32) . Declaration public int StartIndex { get; } Property Value Type Description Int32 The current start index. | Improve this Doc View Source Text Gets the whole text. Declaration public string Text { get; } Property Value Type Description String The text. Methods | Improve this Doc View Source AddError(Object, Boolean, String) Adds an error (the message starts with the caller's method name) to the exisitng ones (if any). Declaration public bool AddError(object expectedMessage = null, bool beforeExisting = false, [CallerMemberName] string callerName = null) Parameters Type Name Description Object expectedMessage Optional object. Its System.Object.ToString will be used to generate an \"expected '...'\" message. Boolean beforeExisting True to add the error before the exisitng ones (as a consequence: [added] <-- [previous]), false to append it (as a cause: [previous] <-- [added]) String callerName Name of the caller (automatically injected by the compiler). Returns Type Description Boolean Always false to use it as the return statement in a match method. | Improve this Doc View Source BackwardAddError(Int32, Object, String) Moves back the head at a previously index and adds an error as a consequence of any previous errors. The message starts with the caller's method name. Declaration public bool BackwardAddError(int savedStartIndex, object expectedMessage = null, [CallerMemberName] string callerName = null) Parameters Type Name Description Int32 savedStartIndex Index to reset. Object expectedMessage Optional object. Its System.Object.ToString will be used to generate an \"expected '...'\" message. String callerName Name of the caller (automatically injected by the compiler). Returns Type Description Boolean Always false to use it as the return statement in a match method. | Improve this Doc View Source Forward(Int32) Increments the StartIndex (and decrements Length ) with the specified character count and clears any existing error. Declaration public bool Forward(int charCount) Parameters Type Name Description Int32 charCount The successfully matched character count. Must be positive and should not move head past the end of the substring. Returns Type Description Boolean Always true to use it as the return statement in a match method. | Improve this Doc View Source MatchChar(Char) Matches an exact single character. If match fails, SetError(Object, String) is called. Declaration public bool MatchChar(char c) Parameters Type Name Description Char c The character that must match. Returns Type Description Boolean True on success, false if the match failed. | Improve this Doc View Source MatchText(String, StringComparison) Matches a text. Declaration public bool MatchText(string text, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String text The string that must match. Can not be null nor empty. StringComparison comparisonType Specifies the culture, case, and sort rules. Returns Type Description Boolean True on success, false if the match failed. | Improve this Doc View Source MatchWhiteSpaces(Int32) Matches a sequence of white spaces. Declaration public bool MatchWhiteSpaces(int minCount = 1) Parameters Type Name Description Int32 minCount Minimal number of white spaces to match. Returns Type Description Boolean True on success, false if the match failed. | Improve this Doc View Source SetError(Object, String) Sets an error and always returns false. The message starts with the caller's method name. Use SetSuccess() to clear any existing error. Declaration public bool SetError(object expectedMessage = null, [CallerMemberName] string callerName = null) Parameters Type Name Description Object expectedMessage Optional object. Its System.Object.ToString will be used to generate an \"expected '...'\" message. String callerName Name of the caller (automatically injected by the compiler). Returns Type Description Boolean Always false to use it as the return statement in a match method. | Improve this Doc View Source SetSuccess() Clears any error and returns true. Declaration public bool SetSuccess() Returns Type Description Boolean Always true to use it as the return statement in a match method. | Improve this Doc View Source ToString() Overridden to return a detailed string with ErrorMessage (if any), the Head character, StartIndex position and whole Text . Declaration public override string ToString() Returns Type Description String Detailed string. | Improve this Doc View Source TryMatchChar(Char) Attempts to match an exact single character. Declaration public bool TryMatchChar(char c) Parameters Type Name Description Char c The character that must match. Returns Type Description Boolean True on success, false if the match failed. | Improve this Doc View Source TryMatchText(String, StringComparison) Matches a text without setting an error if match fails. Declaration public bool TryMatchText(string text, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String text The string that must match. Can not be null nor empty. StringComparison comparisonType Specifies the culture, case, and sort rules. Returns Type Description Boolean True on success, false if the match failed. | Improve this Doc View Source UncheckedMove(Int32) Moves the head without any check and returns always true: typically called by successful TryMatchXXX methods. Can be used to move the head at any position in the Text (or outside it since NO checks are made). Declaration public bool UncheckedMove(int delta) Parameters Type Name Description Int32 delta Number of characters. Returns Type Description Boolean Always true ."
  },
  "api/CK.Text.StringAndStringBuilderExtension.html": {
    "href": "api/CK.Text.StringAndStringBuilderExtension.html",
    "title": "Class StringAndStringBuilderExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringAndStringBuilderExtension Defines useful extension methods on string and StringBuilder. Inheritance Object StringAndStringBuilderExtension Namespace :CK.Text Assembly :CK.Text.dll Syntax public class StringAndStringBuilderExtension Properties | Improve this Doc View Source IsCRLF Gets wether the System.Environment.NewLine is \\r\\n. Otherwise it is \\n. Declaration public static bool IsCRLF { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Append(StringBuilder, String, Int32) Appends multiple time the same string. Declaration public static StringBuilder Append(StringBuilder this, string s, int repeatCount) Parameters Type Name Description StringBuilder this The System.Text.StringBuilder to append to. String s The string to repeat. Can be null. Int32 repeatCount The number of repetition. Returns Type Description StringBuilder The builder itself. | Improve this Doc View Source AppendStrings(StringBuilder, IEnumerable<String>, String) Appends a set of strings with an internal separator. (This should be named 'Append' but appropriate overload is not always detected by the compiler.) Declaration public static StringBuilder AppendStrings(StringBuilder this, IEnumerable<string> strings, string separator = \", \") Parameters Type Name Description StringBuilder this The System.Text.StringBuilder to append to. IEnumerable < String > strings Set of strings. Can be null. String separator The separator string. Returns Type Description StringBuilder The builder itself. | Improve this Doc View Source Concatenate(IEnumerable<String>, String) Concatenates multiple strings with an internal separator. Declaration public static string Concatenate(IEnumerable<string> this, string separator = \", \") Parameters Type Name Description IEnumerable < String > this Set of strings. String separator The separator string. Returns Type Description String The joined string. | Improve this Doc View Source NormalizeEOL(String) Returns a string where \\r\\n or \\n alone are normalized to System.Environment.NewLine . Declaration public static string NormalizeEOL(string this) Parameters Type Name Description String this This string. Returns Type Description String Normalized string. | Improve this Doc View Source NormalizeEOLToCRLF(String) Returns a string where \\n alone are normalized to \\r\\n. Declaration public static string NormalizeEOLToCRLF(string this) Parameters Type Name Description String this This string. Returns Type Description String Normalized string. | Improve this Doc View Source NormalizeEOLToLF(String) Returns a string where \\r\\n are normalized to \\n. Declaration public static string NormalizeEOLToLF(string this) Parameters Type Name Description String this This string. Returns Type Description String Normalized string."
  },
  "api/CK.Text.JSONVisitor.html": {
    "href": "api/CK.Text.JSONVisitor.html",
    "title": "Class JSONVisitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class JSONVisitor Small JSON visitor. Inheritance Object JSONVisitor Namespace :CK.Text Assembly :CK.Text.dll Syntax public class JSONVisitor Constructors | Improve this Doc View Source JSONVisitor(StringMatcher) Initializes a new JSONVisitor bound to a Matcher . Declaration public JSONVisitor(StringMatcher m) Parameters Type Name Description StringMatcher m The string matcher. | Improve this Doc View Source JSONVisitor(String) Initializes a new JSONVisitor on a string. A Matcher is automatically created. Declaration public JSONVisitor(string s) Parameters Type Name Description String s The string to parse. Properties | Improve this Doc View Source Matcher Get the StringMatcher to which this visitor is bound. Declaration public StringMatcher Matcher { get; } Property Value Type Description StringMatcher | Improve this Doc View Source Path Gets the current path of the visited item. Declaration protected IReadOnlyList<JSONVisitor.Parent> Path { get; } Property Value Type Description IReadOnlyList < JSONVisitor.Parent > Methods | Improve this Doc View Source SkipWhiteSpaces() Skips white spaces: simply calls MatchWhiteSpaces(Int32) with 0 minimal count of spaces. Declaration protected virtual void SkipWhiteSpaces() | Improve this Doc View Source Visit() Visits any json item: it is either a terminal ( VisitTerminalValue() ), {\"an\":\"object\"} (see VisitObjectContent() or \"an\",\"array\" . Declaration public virtual bool Visit() Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher . | Improve this Doc View Source VisitArrayCell(Int32) Visits a cell in a JSONVisitor.Parent array. Declaration protected virtual bool VisitArrayCell(int cellNumber) Parameters Type Name Description Int32 cellNumber Zero based cell nummber. Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher . | Improve this Doc View Source VisitArrayContent() Visits a comma seprarated list of json items until a closing ] is found. Declaration public virtual bool VisitArrayContent() Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher . | Improve this Doc View Source VisitObjectContent() Visits a comma seprarated list of \"property\" : ... fields until a closing } is found or Matcher . IsEnd becomes true. Declaration public virtual bool VisitObjectContent() Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher . | Improve this Doc View Source VisitObjectProperty(Int32, String, Int32) Visits a \"property\" : ... JSON property. Declaration protected virtual bool VisitObjectProperty(int startPropertyIndex, string propertyName, int propertyNumber) Parameters Type Name Description Int32 startPropertyIndex Starting index of the propertyName in Matcher : this is the index of the opening quote \". String propertyName Parsed property name. Int32 propertyNumber Zero based number of the property in the JSONVisitor.Parent object. Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher . | Improve this Doc View Source VisitTerminalValue() Visits a terminal value. This method simply calls MatchWhiteSpaces(Int32) to skip any whitespace and TryMatchJSONTerminalValue(StringMatcher) to skip the value itself. Declaration protected virtual bool VisitTerminalValue() Returns Type Description Boolean True on success. On error a message may be retrieved from the Matcher ."
  },
  "api/CK.Text.JSONVisitor.Parent.html": {
    "href": "api/CK.Text.JSONVisitor.Parent.html",
    "title": "Struct JSONVisitor.Parent | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct JSONVisitor.Parent Describes a parent object: it is the name of a property and its index or the index in a array. Namespace :CK.Text Assembly :CK.Text.dll Syntax public struct Parent Constructors | Improve this Doc View Source Parent(String, Int32) Initializes a new parent object. Declaration public Parent(string propertyName, int index) Parameters Type Name Description String propertyName Name of the property. Null for an array entry. Int32 index Index of the property or index in an array. Fields | Improve this Doc View Source Index The index in the array or the property number (the count of properties that appear before this one in the object definition). Declaration public readonly int Index Field Value Type Description Int32 | Improve this Doc View Source PropertyName The name of the property or null if this is an array entry. Declaration public readonly string PropertyName Field Value Type Description String Properties | Improve this Doc View Source IsArrayCell Gets whether this is an array cell (ie. PropertyName is null). Declaration public bool IsArrayCell { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ToString() Overridden to return either PropertyName or [ Index ]. Declaration public override string ToString() Returns Type Description String Representation of the accessor."
  },
  "api/CK.Text.Impl.html": {
    "href": "api/CK.Text.Impl.html",
    "title": "Namespace CK.Text.Impl | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Text.Impl Classes CoreResources Resource class, avoids magic strings and may ease multiligual support."
  },
  "api/CK.Text.Impl.CoreResources.html": {
    "href": "api/CK.Text.Impl.CoreResources.html",
    "title": "Class CoreResources | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CoreResources Resource class, avoids magic strings and may ease multiligual support. Inheritance Object CoreResources Namespace :CK.Text.Impl Assembly :CK.Text.dll Syntax public class CoreResources Fields | Improve this Doc View Source StringMatcherForwardPastEnd Declaration public static readonly string StringMatcherForwardPastEnd Field Value Type Description String"
  },
  "api/CK.Text.CKBinaryWriter.html": {
    "href": "api/CK.Text.CKBinaryWriter.html",
    "title": "Class CKBinaryWriter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKBinaryWriter Specializes System.IO.BinaryWriter to expose helpers. Inheritance Object BinaryWriter CKBinaryWriter Namespace :CK.Text Assembly :CK.Text.dll Syntax public class CKBinaryWriter : BinaryWriter, IDisposable Constructors | Improve this Doc View Source CKBinaryWriter(Stream) Initializes a new CKBinaryWriter based on the specified stream and using UTF-8 encoding. Declaration public CKBinaryWriter(Stream output) Parameters Type Name Description Stream output The output stream. | Improve this Doc View Source CKBinaryWriter(Stream, Encoding) Initializes a new CKBinaryWriter based on the specified stream and character encoding. Declaration public CKBinaryWriter(Stream output, Encoding encoding) Parameters Type Name Description Stream output The output stream. Encoding encoding The character encoding to use. | Improve this Doc View Source CKBinaryWriter(Stream, Encoding, Boolean) Initializes a new CKBinaryWriter based on the specified stream and character encoding. Declaration public CKBinaryWriter(Stream output, Encoding encoding, bool leaveOpen) Parameters Type Name Description Stream output The output stream. Encoding encoding The character encoding to use. Boolean leaveOpen true to leave the stream open after this writer object is disposed; otherwise, false. Methods | Improve this Doc View Source WriteNullableString(String) Writes a potentially null string. Declaration public void WriteNullableString(string s) Parameters Type Name Description String s String to write. | Improve this Doc View Source WriteSmallInt32(Int32) Writes a 32-bit integer in compressed format. Declaration public void WriteSmallInt32(int value) Parameters Type Name Description Int32 value"
  },
  "api/CK.Text.CKBinaryReader.html": {
    "href": "api/CK.Text.CKBinaryReader.html",
    "title": "Class CKBinaryReader | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKBinaryReader Specializes System.IO.BinaryReader to expose helpers. Inheritance Object BinaryReader CKBinaryReader Namespace :CK.Text Assembly :CK.Text.dll Syntax public class CKBinaryReader : BinaryReader, IDisposable Constructors | Improve this Doc View Source CKBinaryReader(Stream) Initializes a new CKBinaryReader based on the specified stream and using UTF-8 encoding. Declaration public CKBinaryReader(Stream input) Parameters Type Name Description Stream input The input stream. | Improve this Doc View Source CKBinaryReader(Stream, Encoding) Initializes a new CKBinaryReader based on the specified stream and character encoding. Declaration public CKBinaryReader(Stream input, Encoding encoding) Parameters Type Name Description Stream input The input stream. Encoding encoding The character encoding to use. | Improve this Doc View Source CKBinaryReader(Stream, Encoding, Boolean) Initializes a new CKBinaryReader based on the specified stream and character encoding. Declaration public CKBinaryReader(Stream input, Encoding encoding, bool leaveOpen) Parameters Type Name Description Stream input The input stream. Encoding encoding The character encoding to use. Boolean leaveOpen true to leave the stream open after this reader object is disposed; otherwise, false. Methods | Improve this Doc View Source ReadNullableString() Reads a potentially null string. Declaration public string ReadNullableString() Returns Type Description String The string or null. | Improve this Doc View Source ReadNullableString(Boolean) Reads a potentially null string. Declaration public string ReadNullableString(bool streamIsCRLF) Parameters Type Name Description Boolean streamIsCRLF True if the System.IO.BinaryReader.BaseStream contains strings with CRLF end-of-line, false if the end-of-line is LF only. Returns Type Description String The string or null. | Improve this Doc View Source ReadSmallInt32() Reads in a 32-bit integer in compressed format. Declaration public int ReadSmallInt32() Returns Type Description Int32 A 32-bit integer | Improve this Doc View Source ReadString(Boolean) Reads and normalizes a string according to System.Environment.NewLine . The fact that the data has actually be saved with LF or CRLF must be known. Declaration public string ReadString(bool streamIsCRLF) Parameters Type Name Description Boolean streamIsCRLF True if the System.IO.BinaryReader.BaseStream contains strings with CRLF end-of-line, false if the end-of-line is LF only. Returns Type Description String String with actual System.Environment.NewLine for end-of-line."
  },
  "api/CK.RouteConfig.html": {
    "href": "api/CK.RouteConfig.html",
    "title": "Namespace CK.RouteConfig | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.RouteConfig Classes ActionConfiguration Configuration for an action defines a Name . This name must be unique among its sequence. ActionConfigurationResolved Resolved action configurations belong to RouteConfigurationResolved and SubRouteConfigurationResolved . ActionParallelConfiguration Specialized composite for parallel configuration. ActionSequenceConfiguration Specialized composite for sequence configuration. ConfiguredRouteHost <TAction, TRoute> Thread-safe management of hierarchical routes configured (and reconfigured) by a RouteConfiguration . ConfiguredRouteHost.ConfigurationClosingEventArgs <> Event argument raised by ConfigurationClosing . ConfiguredRouteHost.ConfigurationReady <> Argument of the callback called when the configuration is ready to be applied. MetaAddActionConfiguration Declares one or more ActionConfiguration and inserts them with their names. MetaDeclareActionConfiguration Declares one or more ActionConfiguration but does not actually insert them. MetaDeclareRouteConfiguration Declares a new SubRouteConfiguration . MetaInsertActionConfiguration Enables inserting in the route an already declared action. MetaOverrideActionConfiguration Overrides, redefines, one or more ActionConfiguration : based on their names they will replace previously defined actions. MetaRemoveActionConfiguration Removes one or more actions that have been inserted before. RouteActionFactory <TAction, TRoute> Factory for actual actions from ActionConfiguration objects that enables the ConfiguredRouteHost<TAction, TRoute> to create new actions and new final routes whenever its configuration changed. RouteConfiguration Primary configuration object that contains multiple SubRouteConfiguration s and ActionConfiguration s. RouteConfigurationResolved Describes the configuration of a route once configuration is resolved (actions and subordinate routes are known). RouteConfigurationResult Encapsulates the resolution of routes configuration: the Resolve(IActivityMonitor) method computes it. SubRouteConfiguration Captures subordinated RouteConfiguration : a SubRouteConfiguration ImportParentActions and ImportParentDeclaredActionsAbove by default and defines a RoutePredicate . SubRouteConfigurationResolved Describes the configuration of a subordinated route once configuration is resolved. Interfaces IRouteConfigurationLock Enables routes configuration locking. Route obtained by ObtainRoute(String) are initally locked: they must be unlocked before a new configuration can be applied."
  },
  "api/CK.RouteConfig.SubRouteConfigurationResolved.html": {
    "href": "api/CK.RouteConfig.SubRouteConfigurationResolved.html",
    "title": "Class SubRouteConfigurationResolved | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SubRouteConfigurationResolved Describes the configuration of a subordinated route once configuration is resolved. Inheritance Object RouteConfigurationResolved SubRouteConfigurationResolved Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class SubRouteConfigurationResolved : RouteConfigurationResolved Properties | Improve this Doc View Source RoutePredicate Gets the filter that route must respect to enter this sub route. Declaration public Func<string, bool> RoutePredicate { get; } Property Value Type Description Func < String , Boolean >"
  },
  "api/CK.RouteConfig.SubRouteConfiguration.html": {
    "href": "api/CK.RouteConfig.SubRouteConfiguration.html",
    "title": "Class SubRouteConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SubRouteConfiguration Captures subordinated RouteConfiguration : a SubRouteConfiguration ImportParentActions and ImportParentDeclaredActionsAbove by default and defines a RoutePredicate . Inheritance Object RouteConfiguration SubRouteConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class SubRouteConfiguration : RouteConfiguration Constructors | Improve this Doc View Source SubRouteConfiguration(String, Func<String, Boolean>) Initializes a new SubRouteConfiguration . Declaration public SubRouteConfiguration(string name, Func<string, bool> routePredicate) Parameters Type Name Description String name The name of the route. Func < String , Boolean > routePredicate The predicate for this sub route. Properties | Improve this Doc View Source ImportParentActions Gets or sets whether actions inserted above at the parent level initially apply to this route. Defaults to true: by default, a route inherits the actions of its parent, setting this to false, makes this route initially empty. When ImportParentDeclaredActionsAbove is set to false, this is always false (one can not reuse actions for which declaration are not available). Declaration public bool ImportParentActions { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ImportParentDeclaredActionsAbove Gets or sets whether actions declared by parent routes before this one are available to this route: InsertAction(String, String) can reference any action declared before (and above). Defaults to true: by default a sub route can reuse action declared before and above. Setting this to false implies that ImportParentActions is also false. Declaration public bool ImportParentDeclaredActionsAbove { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RoutePredicate Gets or sets the filter for this route. Declaration public Func<string, bool> RoutePredicate { get; set; } Property Value Type Description Func < String , Boolean > Methods | Improve this Doc View Source AddAction(ActionConfiguration, ActionConfiguration[]) Adds one or more actions. Declaration public SubRouteConfiguration AddAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a Action to add. ActionConfiguration [] otherActions Optional other actions to add. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax. | Improve this Doc View Source DeclareAction(ActionConfiguration, ActionConfiguration[]) Declares one or more actions. Declaration public SubRouteConfiguration DeclareAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a Action to declare. ActionConfiguration [] otherActions Optional other actions to declare. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax. | Improve this Doc View Source DeclareRoute(SubRouteConfiguration) Declares a subordinated route. Declaration public SubRouteConfiguration DeclareRoute(SubRouteConfiguration channel) Parameters Type Name Description SubRouteConfiguration channel Configuration of the route. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax. | Improve this Doc View Source InsertAction(String, String) Inserts one action that have been previously DeclareAction(ActionConfiguration, ActionConfiguration[]) . Declaration public SubRouteConfiguration InsertAction(string name, string declarationName) Parameters Type Name Description String name Name of the action to insert. String declarationName Name of the declared action. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax. | Improve this Doc View Source OverrideAction(ActionConfiguration, ActionConfiguration[]) Overrides one or more existing actions. Name is the key. Declaration public SubRouteConfiguration OverrideAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a Action to to override. ActionConfiguration [] otherActions Optional other actions to override. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax. | Improve this Doc View Source RemoveAction(String, String[]) Removes one or more actions by name. Declaration public SubRouteConfiguration RemoveAction(string name, params string[] otherNames) Parameters Type Name Description String name Name of the action to remove. String [] otherNames Optional other actions' name to remove. Returns Type Description SubRouteConfiguration This SubRouteConfiguration to enable fluent syntax."
  },
  "api/CK.RouteConfig.RouteConfigurationResult.html": {
    "href": "api/CK.RouteConfig.RouteConfigurationResult.html",
    "title": "Class RouteConfigurationResult | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class RouteConfigurationResult Encapsulates the resolution of routes configuration: the Resolve(IActivityMonitor) method computes it. Inheritance Object RouteConfigurationResult Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class RouteConfigurationResult Properties | Improve this Doc View Source AllSubRoutes Gets all the subordinated routes. Declaration public IReadOnlyCollection<SubRouteConfigurationResolved> AllSubRoutes { get; } Property Value Type Description IReadOnlyCollection < SubRouteConfigurationResolved > | Improve this Doc View Source Root Gets the resolved root route. Declaration public RouteConfigurationResolved Root { get; } Property Value Type Description RouteConfigurationResolved Methods | Improve this Doc View Source FindSubRouteByName(String) Finds a subordinated route by its name. Declaration public SubRouteConfigurationResolved FindSubRouteByName(string name) Parameters Type Name Description String name Name of the route. Returns Type Description SubRouteConfigurationResolved The route or null if it does not exist."
  },
  "api/CK.RouteConfig.RouteConfigurationResolved.html": {
    "href": "api/CK.RouteConfig.RouteConfigurationResolved.html",
    "title": "Class RouteConfigurationResolved | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class RouteConfigurationResolved Describes the configuration of a route once configuration is resolved (actions and subordinate routes are known). Inheritance Object RouteConfigurationResolved Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class RouteConfigurationResolved Properties | Improve this Doc View Source ActionsResolved Gets the actions that apply to this route. Declaration public IReadOnlyList<ActionConfigurationResolved> ActionsResolved { get; } Property Value Type Description IReadOnlyList < ActionConfigurationResolved > | Improve this Doc View Source ConfigData Gets the configuration data object associated to this route. Declaration public object ConfigData { get; } Property Value Type Description Object | Improve this Doc View Source Name Gets the name of the route. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source SubRoutes Gets the subordinated routes that this route contains. Declaration public IReadOnlyList<SubRouteConfigurationResolved> SubRoutes { get; } Property Value Type Description IReadOnlyList < SubRouteConfigurationResolved >"
  },
  "api/CK.RouteConfig.RouteConfiguration.html": {
    "href": "api/CK.RouteConfig.RouteConfiguration.html",
    "title": "Class RouteConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class RouteConfiguration Primary configuration object that contains multiple SubRouteConfiguration s and ActionConfiguration s. Inheritance Object RouteConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class RouteConfiguration Constructors | Improve this Doc View Source RouteConfiguration() Initializes a new root RouteConfiguration . Declaration public RouteConfiguration() | Improve this Doc View Source RouteConfiguration(String) Initializes a specialized RouteConfiguration . Declaration protected RouteConfiguration(string name) Parameters Type Name Description String name Name of the route. Can not be null. Properties | Improve this Doc View Source ConfigData Gets or sets any configuration data for this route. Declaration public object ConfigData { get; set; } Property Value Type Description Object | Improve this Doc View Source Configurations Gets the content of this configuration: a list of MetaConfiguration that encapsulates ActionConfiguration and/or SubRouteConfiguration . Declaration public IReadOnlyList<MetaConfiguration> Configurations { get; } Property Value Type Description IReadOnlyList < MetaConfiguration > | Improve this Doc View Source Name Gets the name of this configuration. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Namespace Gets or sets an optional namespace for this route: declared SubRouteConfiguration are automatically prefixed with this namespace. Never null. This namespace has no effect on any Name . Declaration public string Namespace { get; set; } Property Value Type Description String Methods | Improve this Doc View Source AddAction(ActionConfiguration, ActionConfiguration[]) Adds one or more ActionConfiguration . Declaration public RouteConfiguration AddAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a The first configuration. ActionConfiguration [] otherActions Optional other configurations. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source AddMeta(MetaConfiguration) Protected method to actually add any MetaConfiguration object. Declaration protected void AddMeta(MetaConfiguration m) Parameters Type Name Description MetaConfiguration m A meta configuration to add. | Improve this Doc View Source DeclareAction(ActionConfiguration, ActionConfiguration[]) Declares one or more ActionConfiguration . It can be inserted later thanks to InsertAction(String, String) . Declaration public RouteConfiguration DeclareAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a The first configuration to declare. ActionConfiguration [] otherActions Optional other configurations to declare. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source DeclareRoute(SubRouteConfiguration) Declare a new subordinated route. Declaration public RouteConfiguration DeclareRoute(SubRouteConfiguration route) Parameters Type Name Description SubRouteConfiguration route The subordinated route configuration. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source InsertAction(String, String) Inserts a previously DeclareAction(ActionConfiguration, ActionConfiguration[]) action. Declaration public RouteConfiguration InsertAction(string name, string declarationName) Parameters Type Name Description String name The name of the inserted configuration. String declarationName The name of the previously declared action. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source OverrideAction(ActionConfiguration, ActionConfiguration[]) Overrides one or more existing ActionConfiguration (lookup is done by name). Declaration public RouteConfiguration OverrideAction(ActionConfiguration a, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration a The first configuration to override. ActionConfiguration [] otherActions Optional other configurations to override. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source RemoveAction(String, String[]) Removes one or more existing ActionConfiguration . Declaration public RouteConfiguration RemoveAction(string name, params string[] otherNames) Parameters Type Name Description String name The first configuration name to remove. String [] otherNames Optional other configurations' name to remove. Returns Type Description RouteConfiguration This object. | Improve this Doc View Source Resolve(IActivityMonitor) Attempts to resolve the configuration. Null if an error occurred. Declaration public RouteConfigurationResult Resolve(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor Monitor to use. Must not be null. Returns Type Description RouteConfigurationResult Null or a set of resolved route configuration."
  },
  "api/CK.RouteConfig.RouteActionFactory`2.html": {
    "href": "api/CK.RouteConfig.RouteActionFactory`2.html",
    "title": "Class RouteActionFactory<TAction, TRoute> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class RouteActionFactory<TAction, TRoute> Factory for actual actions from ActionConfiguration objects that enables the ConfiguredRouteHost<TAction, TRoute> to create new actions and new final routes whenever its configuration changed. Inheritance Object RouteActionFactory<TAction, TRoute> Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public abstract class RouteActionFactory<TAction, TRoute> where TAction : class where TRoute : class Type Parameters Name Description TAction Actual type of the actions. The only constraint is that it must be a reference type. TRoute Route class that encapsulates actions. Constructors | Improve this Doc View Source RouteActionFactory() Initializes a new factory. Declaration protected RouteActionFactory() Methods | Improve this Doc View Source DoCreate(IActivityMonitor, IRouteConfigurationLock, ActionConfiguration) Must be implemented to create a TAction from a ActionConfiguration object that is guaranteed to not be a composite (a parallel or a sequence). Declaration protected abstract TAction DoCreate(IActivityMonitor monitor, IRouteConfigurationLock configLock, ActionConfiguration c) Parameters Type Name Description IActivityMonitor monitor Monitor to use if needed. IRouteConfigurationLock configLock Configuration lock. It must not be solicited during the creation of the action: an action that delay its work can keep a reference to it and use it when needed. ActionConfiguration c Configuration of the action. Returns Type Description TAction The created action. | Improve this Doc View Source DoCreateEmptyFinalRoute() Must be implemented to return an empty final route. This empty final route is used when no configuration exists or if an error occurred while setting a new configuration. Declaration protected abstract TRoute DoCreateEmptyFinalRoute() Returns Type Description TRoute An empty route. Can be a static shared (immutable) object. | Improve this Doc View Source DoCreateFinalRoute(IActivityMonitor, IRouteConfigurationLock, TAction[], String, Object, IReadOnlyList<TRoute>) Must be implemented to create the final route class that encapsulates the array of actions of a route. Declaration protected abstract TRoute DoCreateFinalRoute(IActivityMonitor monitor, IRouteConfigurationLock configLock, TAction[] actions, string configurationName, object configData, IReadOnlyList<TRoute> routePath) Parameters Type Name Description IActivityMonitor monitor Monitor to use if needed to comment route creation. IRouteConfigurationLock configLock Configuration lock. It must not be solicited during the creation of the route: a route that delays its work can keep a reference to it and use it as needed. TAction[] actions Array of actions for the route. String configurationName The RouteConfiguration name. Object configData Configuration data of the route. IReadOnlyList <TRoute> routePath Path to this route: parent route objects are already created. Returns Type Description TRoute Final route actions encapsulation. | Improve this Doc View Source DoCreateParallel(IActivityMonitor, IRouteConfigurationLock, ActionParallelConfiguration, TAction[]) Must me implemented to create a parallel action. Declaration protected abstract TAction DoCreateParallel(IActivityMonitor monitor, IRouteConfigurationLock configLock, ActionParallelConfiguration c, TAction[] children) Parameters Type Name Description IActivityMonitor monitor Monitor to use if needed. IRouteConfigurationLock configLock Configuration lock. It must not be solicited during the creation of the parallel: if the parallel delays its work, it can keep a reference to it and use it as needed. ActionParallelConfiguration c Configuration of the parallel action. TAction[] children Array of already created children action. Returns Type Description TAction A parallel action. | Improve this Doc View Source DoCreateSequence(IActivityMonitor, IRouteConfigurationLock, ActionSequenceConfiguration, TAction[]) Must me implemented to create a sequence action. Declaration protected abstract TAction DoCreateSequence(IActivityMonitor monitor, IRouteConfigurationLock configLock, ActionSequenceConfiguration c, TAction[] children) Parameters Type Name Description IActivityMonitor monitor Monitor to use if needed. IRouteConfigurationLock configLock Configuration lock. It must not be solicited during the creation of the sequence: a sequence that delays its work can keep a reference to it and use it as needed. ActionSequenceConfiguration c Configuration of the sequence action. TAction[] children Array of already created children action. Returns Type Description TAction A sequence action. | Improve this Doc View Source DoInitialize() Must be implemented to initialize any required shared objects for building new actions and routes. This is called once prior to any call to other methods of this factory. Default implementation does nothing. Declaration protected virtual void DoInitialize() | Improve this Doc View Source DoUninitialize(Boolean) Must be implemented to cleanup any resources (if any) once new actions and routes have been created. This is always called (even if an error occurred). Default implementation does nothing. Declaration protected virtual void DoUninitialize(bool success) Parameters Type Name Description Boolean success True on success, false if creation of routes has failed."
  },
  "api/CK.RouteConfig.MetaRemoveActionConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaRemoveActionConfiguration.html",
    "title": "Class MetaRemoveActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaRemoveActionConfiguration Removes one or more actions that have been inserted before. Inheritance Object MetaConfiguration MetaMultiConfiguration < String > MetaRemoveActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaRemoveActionConfiguration : MetaMultiConfiguration<string> Constructors | Improve this Doc View Source MetaRemoveActionConfiguration(String, String[]) Initializes a MetaRemoveActionConfiguration with at least one action to remove. Declaration public MetaRemoveActionConfiguration(string nameToRemove, params string[] otherNames) Parameters Type Name Description String nameToRemove Name of the first action to remove. String [] otherNames Other names to remove. Properties | Improve this Doc View Source NamesToRemove Gets the names of the actions that must be removed. Declaration public IReadOnlyList<string> NamesToRemove { get; } Property Value Type Description IReadOnlyList < String > Methods | Improve this Doc View Source Apply(IRouteConfigurationContext) Applies this configuration by removing all actions in NamesToRemove from the context. Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context The context to modify. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Check the configuration validity: always true. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean Always true. | Improve this Doc View Source Remove(String) Adds a name to the NamesToRemove . Declaration public MetaRemoveActionConfiguration Remove(string nameToRemove) Parameters Type Name Description String nameToRemove New name to remove. Returns Type Description MetaRemoveActionConfiguration This object to enable fluent syntax."
  },
  "api/CK.RouteConfig.MetaOverrideActionConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaOverrideActionConfiguration.html",
    "title": "Class MetaOverrideActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaOverrideActionConfiguration Overrides, redefines, one or more ActionConfiguration : based on their names they will replace previously defined actions. Inheritance Object MetaConfiguration MetaMultiConfiguration < ActionConfiguration > MetaOverrideActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaOverrideActionConfiguration : MetaMultiConfiguration<ActionConfiguration> Constructors | Improve this Doc View Source MetaOverrideActionConfiguration(ActionConfiguration, ActionConfiguration[]) Initializes a new MetaOverrideActionConfiguration with at least one action to override. Declaration public MetaOverrideActionConfiguration(ActionConfiguration action, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration action First, required, action to override. ActionConfiguration [] otherActions Optional other actions to override. Properties | Improve this Doc View Source Actions Gets the ActionConfiguration s that must be overridden. Declaration public IReadOnlyList<ActionConfiguration> Actions { get; } Property Value Type Description IReadOnlyList < ActionConfiguration > Methods | Improve this Doc View Source Apply(IProtoRouteConfigurationContext) This method declares the Actions as being overridden by calling DeclareAction(ActionConfiguration, Boolean) with the overridden parameter sets to true. Declaration protected override void Apply(IProtoRouteConfigurationContext protoContext) Parameters Type Name Description IProtoRouteConfigurationContext protoContext The temporary context used to build the routes. | Improve this Doc View Source Apply(IRouteConfigurationContext) Never called: the first Apply(IProtoRouteConfigurationContext) does not register this object since we have nothing more to do than declaring overridden actions. Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks the validity: each action's name must be valid and each CheckValidity(String, IActivityMonitor) must return true. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if valid, false otherwise. | Improve this Doc View Source Override(ActionConfiguration) Adds an ActionConfiguration that must be overridden. Declaration public MetaOverrideActionConfiguration Override(ActionConfiguration action) Parameters Type Name Description ActionConfiguration action The action that will override an existing one with the same name. Returns Type Description MetaOverrideActionConfiguration This object to enable fluent syntax."
  },
  "api/CK.RouteConfig.MetaInsertActionConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaInsertActionConfiguration.html",
    "title": "Class MetaInsertActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaInsertActionConfiguration Enables inserting in the route an already declared action. Inheritance Object MetaConfiguration MetaInsertActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaInsertActionConfiguration : MetaConfiguration Constructors | Improve this Doc View Source MetaInsertActionConfiguration(String, String) Initializes a new MetaInsertActionConfiguration with the name of the action and the name of the previously declared action. Declaration public MetaInsertActionConfiguration(string name, string declarationName) Parameters Type Name Description String name Name of the action to insert. String declarationName Declared action's name. Properties | Improve this Doc View Source DeclaredName Gets or sets the name of the declared action. Never null: defaults to System.String.Empty . Declaration public string DeclaredName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Apply(IRouteConfigurationContext) Calls AddDeclaredAction(String, String, Boolean) to add the DeclaredName with this name. Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks the validity: name and DeclaredName must be valid. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if valid, false otherwise."
  },
  "api/CK.RouteConfig.MetaDeclareRouteConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaDeclareRouteConfiguration.html",
    "title": "Class MetaDeclareRouteConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaDeclareRouteConfiguration Declares a new SubRouteConfiguration . Inheritance Object MetaConfiguration MetaDeclareRouteConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaDeclareRouteConfiguration : MetaConfiguration Constructors | Improve this Doc View Source MetaDeclareRouteConfiguration(SubRouteConfiguration) Initializes a new MetaDeclareRouteConfiguration bound to a SubRouteConfiguration . Declaration public MetaDeclareRouteConfiguration(SubRouteConfiguration route) Parameters Type Name Description SubRouteConfiguration route Subordinated route configuration. Properties | Improve this Doc View Source RouteConfiguration Gets the subordinated route configuration. Declaration public SubRouteConfiguration RouteConfiguration { get; } Property Value Type Description SubRouteConfiguration Methods | Improve this Doc View Source Apply(IProtoRouteConfigurationContext) Applies the configuration (first step) by calling AddRoute(SubRouteConfiguration) . Declaration protected override void Apply(IProtoRouteConfigurationContext protoContext) Parameters Type Name Description IProtoRouteConfigurationContext protoContext Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source Apply(IRouteConfigurationContext) Never called: the first Apply(IProtoRouteConfigurationContext) does not register this object since we have nothing more to do than adding the route. Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Always true. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean Always true."
  },
  "api/CK.RouteConfig.MetaDeclareActionConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaDeclareActionConfiguration.html",
    "title": "Class MetaDeclareActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaDeclareActionConfiguration Declares one or more ActionConfiguration but does not actually insert them. Inheritance Object MetaConfiguration MetaMultiConfiguration < ActionConfiguration > MetaDeclareActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaDeclareActionConfiguration : MetaMultiConfiguration<ActionConfiguration> Constructors | Improve this Doc View Source MetaDeclareActionConfiguration(ActionConfiguration, ActionConfiguration[]) Initializes a MetaDeclareActionConfiguration with at least one action to declare. Declaration public MetaDeclareActionConfiguration(ActionConfiguration action, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration action First, required, action to declare. ActionConfiguration [] otherActions Optional other actions to declare. Properties | Improve this Doc View Source Actions Gets the ActionConfiguration s that must be declared. Declaration public IReadOnlyList<ActionConfiguration> Actions { get; } Property Value Type Description IReadOnlyList < ActionConfiguration > Methods | Improve this Doc View Source Apply(IProtoRouteConfigurationContext) Applies the configuration (first step) by DeclareAction(ActionConfiguration, Boolean) all the Actions . Declaration protected override void Apply(IProtoRouteConfigurationContext protoContext) Parameters Type Name Description IProtoRouteConfigurationContext protoContext Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source Apply(IRouteConfigurationContext) Never called: the first Apply(IProtoRouteConfigurationContext) does not register this object since we have nothing more to do than declaring actions. Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks the validity: each action's name must be valid and each CheckValidity(String, IActivityMonitor) must return true. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if valid, false otherwise. | Improve this Doc View Source Declare(ActionConfiguration) Declares an ActionConfiguration . Declaration public MetaDeclareActionConfiguration Declare(ActionConfiguration action) Parameters Type Name Description ActionConfiguration action The action to declare. Returns Type Description MetaDeclareActionConfiguration This object to enable fluent syntax."
  },
  "api/CK.RouteConfig.MetaAddActionConfiguration.html": {
    "href": "api/CK.RouteConfig.MetaAddActionConfiguration.html",
    "title": "Class MetaAddActionConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class MetaAddActionConfiguration Declares one or more ActionConfiguration and inserts them with their names. Inheritance Object MetaConfiguration MetaMultiConfiguration < ActionConfiguration > MetaAddActionConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class MetaAddActionConfiguration : MetaMultiConfiguration<ActionConfiguration> Constructors | Improve this Doc View Source MetaAddActionConfiguration(ActionConfiguration, ActionConfiguration[]) Initializes a MetaAddActionConfiguration with at least one action to add. Declaration public MetaAddActionConfiguration(ActionConfiguration action, params ActionConfiguration[] otherActions) Parameters Type Name Description ActionConfiguration action First, required, action to add. ActionConfiguration [] otherActions Optional other actions to add. Properties | Improve this Doc View Source Actions Gets the ActionConfiguration s that must be declared and inserted with their names. Declaration public IReadOnlyList<ActionConfiguration> Actions { get; } Property Value Type Description IReadOnlyList < ActionConfiguration > Methods | Improve this Doc View Source Add(ActionConfiguration) Adds an ActionConfiguration . Declaration public MetaAddActionConfiguration Add(ActionConfiguration action) Parameters Type Name Description ActionConfiguration action The action to add. Returns Type Description MetaAddActionConfiguration This object to enable fluent syntax. | Improve this Doc View Source Apply(IProtoRouteConfigurationContext) Applies the configuration (first step) by DeclareAction(ActionConfiguration, Boolean) all the actions and adding itself to the protoContext so that Apply(IRouteConfigurationContext) will be called. Declaration protected override void Apply(IProtoRouteConfigurationContext protoContext) Parameters Type Name Description IProtoRouteConfigurationContext protoContext Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source Apply(IRouteConfigurationContext) Applies the configuration (second step) by calling AddDeclaredAction(String, String, Boolean) for the Actions . Declaration protected override void Apply(IRouteConfigurationContext context) Parameters Type Name Description IRouteConfigurationContext context Enables context lookup and manipulation, exposes a IActivityMonitor to use. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks the validity: each action's name must be valid and each CheckValidity(String, IActivityMonitor) must return true. Declaration protected override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that contains this configuration. IActivityMonitor monitor Monitor to use to explain errors. Returns Type Description Boolean True if valid, false otherwise."
  },
  "api/CK.RouteConfig.IRouteConfigurationLock.html": {
    "href": "api/CK.RouteConfig.IRouteConfigurationLock.html",
    "title": "Interface IRouteConfigurationLock | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IRouteConfigurationLock Enables routes configuration locking. Route obtained by ObtainRoute(String) are initally locked: they must be unlocked before a new configuration can be applied. Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public interface IRouteConfigurationLock Methods | Improve this Doc View Source Lock() Locks the configuration. Declaration void Lock() | Improve this Doc View Source Unlock() Unlocks the configuration. Declaration void Unlock()"
  },
  "api/CK.Core.SetOperation.html": {
    "href": "api/CK.Core.SetOperation.html",
    "title": "Enum SetOperation | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum SetOperation Defines the six basic operations available between two sets. Namespace :CK.Core Assembly :CK.Core.dll Syntax public enum SetOperation Fields | Improve this Doc View Source Except Exclusion (keeps only items of the first that do not belong to the second one). Declaration Except = 3 Field Value Type Description SetOperation | Improve this Doc View Source Intersect Intersection of the sets (keeps only items that belong to both sets). Declaration Intersect = 2 Field Value Type Description SetOperation | Improve this Doc View Source None No operation. Declaration None = 0 Field Value Type Description SetOperation | Improve this Doc View Source Replace Replace the first set by the second one. Declaration Replace = 5 Field Value Type Description SetOperation | Improve this Doc View Source SymetricExcept Symetric exclusion (keeps items that belong to first or second set but not to both) - The XOR operation. Declaration SymetricExcept = 4 Field Value Type Description SetOperation | Improve this Doc View Source Union Union of the sets (keeps items of first or second set). Declaration Union = 1 Field Value Type Description SetOperation"
  },
  "api/CK.Core.ServiceContainerExtension.html": {
    "href": "api/CK.Core.ServiceContainerExtension.html",
    "title": "Class ServiceContainerExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ServiceContainerExtension Provides extension methods for system/component model interfaces. Inheritance Object ServiceContainerExtension Namespace :CK.Core Assembly :CK.Core.dll Syntax public class ServiceContainerExtension Methods | Improve this Doc View Source Add<T>(ISimpleServiceContainer, T) Type safe version to register a service implementation (type of the service is the type of the implementation). Declaration public static ISimpleServiceContainer Add<T>(ISimpleServiceContainer this, T serviceInstance) Parameters Type Name Description ISimpleServiceContainer this This ISimpleServiceContainer object. T serviceInstance Implementation of the service. Can not be null. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. Type Parameters Name Description T | Improve this Doc View Source Add<T>(ISimpleServiceContainer, T, Action<T>) Type safe version to register a service implementation (type of the service is the type of the implementation), and a callback that will be called when the service is eventually removed. Declaration public static ISimpleServiceContainer Add<T>(ISimpleServiceContainer this, T serviceInstance, Action<T> onRemove) Parameters Type Name Description ISimpleServiceContainer this This ISimpleServiceContainer object. T serviceInstance Implementation of the service. Can not be null. Action <T> onRemove Action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose . Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. Type Parameters Name Description T | Improve this Doc View Source Add<T>(ISimpleServiceContainer, Func<T>) Type safe version to register a service associated to a callback. The serviceInstance is called as long as no service has been obtained (serviceInstance returns null). Once the actual service has been obtained, it is kept and serviceInstance is not called anymore. Declaration public static ISimpleServiceContainer Add<T>(ISimpleServiceContainer this, Func<T> serviceInstance)where T : class Parameters Type Name Description ISimpleServiceContainer this This ISimpleServiceContainer object. Func <T> serviceInstance Delegate to call when needed. Can not be null. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. Type Parameters Name Description T | Improve this Doc View Source Add<T>(ISimpleServiceContainer, Func<T>, Action<T>) Type safe version to register a service associated to a callback (and a callback that will be called when the service is eventually removed). The serviceInstance is called as long as no service has been obtained (serviceInstance returns null). Once the actual service has been obtained, it is kept and serviceInstance is not called anymore. Declaration public static ISimpleServiceContainer Add<T>(ISimpleServiceContainer this, Func<T> serviceInstance, Action<T> onRemove)where T : class Parameters Type Name Description ISimpleServiceContainer this This ISimpleServiceContainer object. Func <T> serviceInstance Delegate to call when needed. Can not be null. Action <T> onRemove Action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose is called and a service as been successfuly obtained. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. Type Parameters Name Description T | Improve this Doc View Source GetService<T>(IServiceProvider) Strongly typed version of System.IServiceProvider.GetService(System.Type) that returns null if service is not found. (Same behavior as System.IServiceProvider.GetService(System.Type) .) Declaration public static T GetService<T>(IServiceProvider this) Parameters Type Name Description IServiceProvider this This service provider. Returns Type Description T A service object of the required type or null if not found. Type Parameters Name Description T | Improve this Doc View Source GetService<T>(IServiceProvider, Boolean) Strongly typed version of System.IServiceProvider.GetService(System.Type) . Declaration public static T GetService<T>(IServiceProvider this, bool throwOnNull) Parameters Type Name Description IServiceProvider this This service provider. Boolean throwOnNull True to throw an exception if the service can not be provided (otherwise null is returned). Returns Type Description T A service object of the required type or null if not found and throwOnNull is false. Type Parameters Name Description T | Improve this Doc View Source Remove<T>(ISimpleServiceContainer) Type safe version to remove a registered type. Declaration public static ISimpleServiceContainer Remove<T>(ISimpleServiceContainer this) Parameters Type Name Description ISimpleServiceContainer this This ISimpleServiceContainer object. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. Type Parameters Name Description T"
  },
  "api/CK.Core.LogLevelFilter.html": {
    "href": "api/CK.Core.LogLevelFilter.html",
    "title": "Enum LogLevelFilter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum LogLevelFilter Defines filters for LogLevel . Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public enum LogLevelFilter : short Remarks LogFilter capture two levels: one for lines and one for groups. Fields | Improve this Doc View Source Error Only Error and above is logged. Declaration Error = 8 Field Value Type Description LogLevelFilter | Improve this Doc View Source Fatal Only Fatal is logged. Declaration Fatal = 16 Field Value Type Description LogLevelFilter | Improve this Doc View Source Info Only Info and above is logged. Declaration Info = 2 Field Value Type Description LogLevelFilter | Improve this Doc View Source Invalid Invalid filter can be use to designate an unknown filter. Since its value is -1, in the worst case it will not filter anything. Declaration Invalid = -1 Field Value Type Description LogLevelFilter | Improve this Doc View Source None No filter: can have the same effect as Trace but SHOULD indicate an unknown or undefined filter that, when combined with other level filters to compute the final (minimal) filter level to take into account, must be ignored. Declaration None = 0 Field Value Type Description LogLevelFilter | Improve this Doc View Source Off Do not log anything. Declaration Off = 64 Field Value Type Description LogLevelFilter | Improve this Doc View Source Trace Everything is logged ( Trace ). Declaration Trace = 1 Field Value Type Description LogLevelFilter | Improve this Doc View Source Warn Only Warn and above is logged. Declaration Warn = 4 Field Value Type Description LogLevelFilter"
  },
  "api/CK.Core.LogLevel.html": {
    "href": "api/CK.Core.LogLevel.html",
    "title": "Enum LogLevel | CK.Core documentation",
    "keywords": "Improve this Doc View Source Enum LogLevel Five standard log levels in increasing order used by IActivityMonitor . Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax [Flags] public enum LogLevel Fields | Improve this Doc View Source Error An error logging level: denotes an error for the current activity. This error does not necessarily abort the activity. Declaration Error = 8 Field Value Type Description LogLevel | Improve this Doc View Source Fatal A fatal error logging level: denotes an error that breaks (aborts) the current activity. This kind of error may have important side effects on the system. Declaration Fatal = 16 Field Value Type Description LogLevel | Improve this Doc View Source Info An info logging level. Declaration Info = 2 Field Value Type Description LogLevel | Improve this Doc View Source IsFiltered Flag that denotes a log level that has been filtered. When this flag is not set, the UnfilteredOpenGroup(ActivityMonitorGroupData) or UnfilteredLog(ActivityMonitorLogData) has been called directly. When set, the log has typically been emitted through the extension methods that challenge the monitor's ActualFilter and DefaultFilter static configuration. Declaration IsFiltered = 32 Field Value Type Description LogLevel | Improve this Doc View Source Mask Mask that covers actual levels to easily ignore IsFiltered bit. Declaration Mask = 31 Field Value Type Description LogLevel | Improve this Doc View Source None No logging level. Declaration None = 0 Field Value Type Description LogLevel | Improve this Doc View Source NumberOfBits Number of bits actually covered by this bit flag. Declaration NumberOfBits = 6 Field Value Type Description LogLevel | Improve this Doc View Source Trace A trace logging level (the most verbose level). Declaration Trace = 1 Field Value Type Description LogLevel | Improve this Doc View Source Warn A warn logging level. Declaration Warn = 4 Field Value Type Description LogLevel"
  },
  "api/CK.Core.LogFilterMatcherExtension.html": {
    "href": "api/CK.Core.LogFilterMatcherExtension.html",
    "title": "Class LogFilterMatcherExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class LogFilterMatcherExtension Supports LogFilter and LogLevelFilter extension methods. Inheritance Object LogFilterMatcherExtension Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class LogFilterMatcherExtension Methods | Improve this Doc View Source MatchLogFilter(StringMatcher, out LogFilter) Matches a LogFilter : it can be a predefined filter as (\"Undefined\", \"Debug\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Trace}\". Declaration public static bool MatchLogFilter(StringMatcher m, out LogFilter f) Parameters Type Name Description StringMatcher m This StringMatcher . LogFilter f Resulting filter. Returns Type Description Boolean True on success, false on error. | Improve this Doc View Source MatchLogLevelFilter(StringMatcher, out LogLevelFilter) Matches a LogLevelFilter . Declaration public static bool MatchLogLevelFilter(StringMatcher this, out LogLevelFilter level) Parameters Type Name Description StringMatcher this This StringMatcher . LogLevelFilter level Resulting level. Returns Type Description Boolean True on success, false on error."
  },
  "api/CK.Core.LogFilter.html": {
    "href": "api/CK.Core.LogFilter.html",
    "title": "Struct LogFilter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct LogFilter Immutable capture of a double LogLevelFilter . One for Line and one for Group . This value type exposes predefined configured couples: Debug (full trace), Verbose , Monitor , Terse , Release and Off (no log at all). Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax [Serializable] public struct LogFilter Constructors | Improve this Doc View Source LogFilter(LogLevelFilter, LogLevelFilter) Initializes a new LogFilter with a level for Group s and Line logs. Declaration public LogFilter(LogLevelFilter group, LogLevelFilter line) Parameters Type Name Description LogLevelFilter group Filter for groups. LogLevelFilter line Filter for lines. Fields | Improve this Doc View Source Debug Debug filter enables full Trace for both Line and Group . Declaration public static readonly LogFilter Debug Field Value Type Description LogFilter | Improve this Doc View Source Group The filter that applies to groups. Declaration public readonly LogLevelFilter Group Field Value Type Description LogLevelFilter | Improve this Doc View Source Invalid Invalid must be used as a special value. It is Invalid for both Line and Group . Declaration public static readonly LogFilter Invalid Field Value Type Description LogFilter | Improve this Doc View Source Line The filter that applies to log lines (Trace, Info, Warn, Error and Fatal). Declaration public readonly LogLevelFilter Line Field Value Type Description LogLevelFilter | Improve this Doc View Source Monitor While monitoring, only errors and warnings are captured, whereas all Group s appear to get the detailed structure of the activity. Declaration public static readonly LogFilter Monitor Field Value Type Description LogFilter | Improve this Doc View Source Off Off filter does not capture anything. Declaration public static readonly LogFilter Off Field Value Type Description LogFilter | Improve this Doc View Source Release Release filter captures only Error s for both Line and Group . Declaration public static readonly LogFilter Release Field Value Type Description LogFilter | Improve this Doc View Source Terse Terse filter captures only errors for Line and limits Group s to Info level. Declaration public static readonly LogFilter Terse Field Value Type Description LogFilter | Improve this Doc View Source Undefined Undefined filter is None for both Line and Group . This is the same as using the default constructor for this structure (it is exposed here for clarity). Declaration public static readonly LogFilter Undefined Field Value Type Description LogFilter | Improve this Doc View Source Verbose Verbose Trace all Group s but limits Line to Info level. Declaration public static readonly LogFilter Verbose Field Value Type Description LogFilter Methods | Improve this Doc View Source Combine(LogFilter) Combines this filter with another one. Line and Group level filters are combined with Combine(LogLevelFilter, LogLevelFilter) . Declaration public LogFilter Combine(LogFilter other) Parameters Type Name Description LogFilter other The other filter to combine with this one. Returns Type Description LogFilter The resulting filter. | Improve this Doc View Source Combine(LogLevelFilter, LogLevelFilter) Combines two enums LogLevelFilter into one. The resulting filter is the more verbose one (the smallest level). Invalid is considered as None (it has no impact). This operation is commutative and associative: different order of combination always give the same result. Declaration public static LogLevelFilter Combine(LogLevelFilter x, LogLevelFilter y) Parameters Type Name Description LogLevelFilter x First filter level. LogLevelFilter y Second filter level. Returns Type Description LogLevelFilter The resulting level. | Improve this Doc View Source CombineNoneOnly(LogFilter) Combines this filter with another one only if Line or Group is None . Declaration public LogFilter CombineNoneOnly(LogFilter other) Parameters Type Name Description LogFilter other The other filter to combine with this one. Returns Type Description LogFilter The resulting filter. | Improve this Doc View Source Equals(Object) Overridden to compare Line and Group . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Other object. Returns Type Description Boolean True if Line and Group are equal. | Improve this Doc View Source GetHashCode() Overridden to compute hash based on Line and Group values. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code. | Improve this Doc View Source HasImpactOn(LogFilter) Tests if Combine(LogFilter) this and x will result in a different filter than x. Declaration public bool HasImpactOn(LogFilter x) Parameters Type Name Description LogFilter x The other filter. Returns Type Description Boolean True if combining this filter and x will change x. | Improve this Doc View Source Parse(String) Parses the filter: it can be a predefined filter as (\"Undefined\", \"Debug\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Trace}\". Declaration public static LogFilter Parse(string filter) Parameters Type Name Description String filter Predefined filter as (Undefined, Debug, Verbose, etc.) or as {LineLogLevelFilter,GroupLogLevelFilter} like {None,None}, {Error,Trace}. Returns Type Description LogFilter The filter. | Improve this Doc View Source SetGroup(LogLevelFilter) Returns a LogFilter with a given LogLevelFilter for the Group . Declaration public LogFilter SetGroup(LogLevelFilter group) Parameters Type Name Description LogLevelFilter group Filter for the group. Returns Type Description LogFilter The filter with the group level. | Improve this Doc View Source SetLine(LogLevelFilter) Returns a LogFilter with a given LogLevelFilter for the Line . Declaration public LogFilter SetLine(LogLevelFilter line) Parameters Type Name Description LogLevelFilter line Filter for the line. Returns Type Description LogFilter The filter with the line level. | Improve this Doc View Source ToString() Overridden to show the group and the line level. Declaration public override string ToString() Returns Type Description String A {group,line} string. | Improve this Doc View Source TryParse(String, out LogFilter) Tries to parse a LogFilter : it can be a predefined filter as (\"Undefined\", \"Debug\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Trace}\". Declaration public static bool TryParse(string s, out LogFilter f) Parameters Type Name Description String s Filter to parse. LogFilter f Resulting filter. Returns Type Description Boolean True on success, false on error. Operators | Improve this Doc View Source Equality(LogFilter, LogFilter) Equality operator. Declaration public static bool operator ==(LogFilter x, LogFilter y) Parameters Type Name Description LogFilter x First filter. LogFilter y Second filter. Returns Type Description Boolean True if Line and Group are the same for the two filters. | Improve this Doc View Source Inequality(LogFilter, LogFilter) Inequality operator. Declaration public static bool operator !=(LogFilter x, LogFilter y) Parameters Type Name Description LogFilter x First filter. LogFilter y Second filter. Returns Type Description Boolean True if Line and Group are the same for the two filters."
  },
  "api/CK.Core.IUniqueId.html": {
    "href": "api/CK.Core.IUniqueId.html",
    "title": "Interface IUniqueId | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IUniqueId Minimal interface that enables any type (specially reference type) to expose a System.Guid . Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface IUniqueId Properties | Improve this Doc View Source UniqueId Gets the unique identifier associated to this object. Declaration Guid UniqueId { get; } Property Value Type Description Guid"
  },
  "api/CK.Core.ISimpleServiceContainer.html": {
    "href": "api/CK.Core.ISimpleServiceContainer.html",
    "title": "Interface ISimpleServiceContainer | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface ISimpleServiceContainer Defines a container for services. Namespace :CK.Core Assembly :CK.Core.dll Syntax public interface ISimpleServiceContainer : IServiceProvider Methods | Improve this Doc View Source Add(Type, Func<Object>, Action<Object>) Registers a service associated to a callback (and an optional callback that will be called when the service will be removed). The serviceInstance is called as long as no service has been obtained (serviceInstance returns null). Once the actual service has been obtained, it is kept and serviceInstance is not called anymore. Declaration ISimpleServiceContainer Add(Type serviceType, Func<object> serviceInstance, Action<object> onRemove = null) Parameters Type Name Description Type serviceType Service type to register. It must not already exist in this container otherwise an exception is thrown. Func < Object > serviceInstance Delegate to call when needed. Can not be null. Action < Object > onRemove Optional action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose is called and a service as been successfuly obtained. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Add(Type, Object, Action<Object>) Registers a service with its implementation (and an optional callback that will be called when the service will be removed). Declaration ISimpleServiceContainer Add(Type serviceType, object serviceInstance, Action<object> onRemove = null) Parameters Type Name Description Type serviceType Service type to register. It must not already exist in this container otherwise an exception is thrown. Object serviceInstance Implementation of the service. Can not be null. Action < Object > onRemove Optional action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose . Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source AddDisabled(Type) Disables a service: null will always be returned by this System.IServiceProvider.GetService(System.Type) regardless of any fallbacks that may exist for this container. Remarks This is not the same as calling Add(Type, Func<Object>, Action<Object>) with a null instance. A null instance for a service (a callback that always returns null) is nearly the same as calling Remove(Type) : any fallbacks (to a base System.IServiceProvider for example) can occur. This one is stronger since this must prevent fallbacks. Declaration ISimpleServiceContainer AddDisabled(Type serviceType) Parameters Type Name Description Type serviceType Service type to disable. It must not already exist in this container otherwise an exception is thrown. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Clear() Unregisters all the services. Any \"on remove\" actions are executed. Declaration ISimpleServiceContainer Clear() Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Remove(Type) Unregisters a service. Can be called even if the service does not exist. The service is first removed and then the OnRemove associated action is called if it exists: this enables OnRemove action to be bound to a method that safely calls back this Remove method. Declaration ISimpleServiceContainer Remove(Type serviceType) Parameters Type Name Description Type serviceType Service type to unregister. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax."
  },
  "api/CK.Core.Impl.html": {
    "href": "api/CK.Core.Impl.html",
    "title": "Namespace CK.Core.Impl | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Core.Impl Classes ActivityMonitorOutput Implementation of IActivityMonitorOutput for Output . ActivityMonitorResources String values for errors and messages. CoreResources Resource class, for looking up strings. DisposableActivityMonitor Trivial implementation of IDisposableActivityMonitor that respects the disposable pattern (to support potential unmanaged resources). Dispose() simply closes all opened groups. Interfaces IActivityMonitorImpl Defines required aspects that an actual monitor implementation must support."
  },
  "api/CK.Core.Impl.IActivityMonitorImpl.html": {
    "href": "api/CK.Core.Impl.IActivityMonitorImpl.html",
    "title": "Interface IActivityMonitorImpl | CK.Core documentation",
    "keywords": "Improve this Doc View Source Interface IActivityMonitorImpl Defines required aspects that an actual monitor implementation must support. Namespace :CK.Core.Impl Assembly :CK.ActivityMonitor.dll Syntax public interface IActivityMonitorImpl : IActivityMonitor, IUniqueId Properties | Improve this Doc View Source CurrentGroup Gets the currently opened group. Null when no group is currently opened. Declaration IActivityLogGroup CurrentGroup { get; } Property Value Type Description IActivityLogGroup Methods | Improve this Doc View Source InitializeTopicAndAutoTags(String, CKTrait, String, Int32) Enables IActivityMonitorBoundClient clients to initialize Topic and AutoTag typically from inside their SetMonitor(IActivityMonitorImpl, Boolean) method or any other methods provided that a reentrant and concurrent lock has been obtained (otherwise an System.InvalidOperationException is thrown). Declaration void InitializeTopicAndAutoTags(string newTopic, CKTrait newTags, [CallerFilePath] string fileName = null, [CallerLineNumber] int lineNumber = 0) Parameters Type Name Description String newTopic New topic to set. When null, it is ignored. CKTrait newTags new tags to set. When null, it is ignored. String fileName Source file name of the caller. Do not set it: the attribute will do the job. Int32 lineNumber Line number in the source file. Do not set it: the attribute will do the job. | Improve this Doc View Source OnClientMinimalFilterChanged(LogFilter, LogFilter) Enables a IActivityMonitorBoundClient to warn its Monitor whenever its MinimalFilter changed. This can be called from any IActivityMonitorBoundClient methods (when a ReentrancyAndConcurrencyLock() has been acquired) or not, but NOT concurrently: SetClientMinimalFilterDirty() must be used to signal a change on any thread at any time. Declaration void OnClientMinimalFilterChanged(LogFilter oldLevel, LogFilter newLevel) Parameters Type Name Description LogFilter oldLevel The previous minimal level that the client expected. LogFilter newLevel The new minimal level that the client expects. | Improve this Doc View Source ReentrancyAndConcurrencyLock() Gets a disposable object that checks for reentrant and concurrent calls. Declaration IDisposable ReentrancyAndConcurrencyLock() Returns Type Description IDisposable A disposable object (that must be disposed). | Improve this Doc View Source SetClientMinimalFilterDirty() Signals the monitor that one of the MinimalFilter has changed: the ActualFilter is marked as needing a re computation in a thread-safe manner. This can be called by bound clients on any thread at any time as opposed to OnClientMinimalFilterChanged(LogFilter, LogFilter) that can only be called non-concurrently (typically from inside client methods). Declaration void SetClientMinimalFilterDirty()"
  },
  "api/CK.Core.Impl.DisposableActivityMonitor.html": {
    "href": "api/CK.Core.Impl.DisposableActivityMonitor.html",
    "title": "Class DisposableActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class DisposableActivityMonitor Trivial implementation of IDisposableActivityMonitor that respects the disposable pattern (to support potential unmanaged resources). Dispose() simply closes all opened groups. Inheritance Object ActivityMonitor DisposableActivityMonitor Namespace :CK.Core.Impl Assembly :CK.ActivityMonitor.dll Syntax public class DisposableActivityMonitor : ActivityMonitor, IActivityMonitorImpl, IUniqueId, IDisposableActivityMonitor, IActivityMonitor, IDisposable Methods | Improve this Doc View Source Dispose() Automatically close any opened groups. Can be called multiple times. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Automatically close any opened groups. Can be called multiple times. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Whether Dispose() is called. | Improve this Doc View Source Finalize() Ensures that potential unmanaged resources are correctly released by calling Dispose(Boolean) with false. Declaration protected void Finalize()"
  },
  "api/CK.Core.Impl.CoreResources.html": {
    "href": "api/CK.Core.Impl.CoreResources.html",
    "title": "Class CoreResources | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CoreResources Resource class, for looking up strings. Inheritance Object CoreResources Namespace :CK.Core.Impl Assembly :CK.Core.dll Syntax public class CoreResources Fields | Improve this Doc View Source AggregatedExceptionsMustContainAtLeastOne Declaration public static readonly string AggregatedExceptionsMustContainAtLeastOne Field Value Type Description String | Improve this Doc View Source AppSettingsAlreadyInitialized Declaration public static readonly string AppSettingsAlreadyInitialized Field Value Type Description String | Improve this Doc View Source AppSettingsDefaultInitializationFailed Declaration public static readonly string AppSettingsDefaultInitializationFailed Field Value Type Description String | Improve this Doc View Source AppSettingsNoDefaultInitializationOnNetCore Declaration public static readonly string AppSettingsNoDefaultInitializationOnNetCore Field Value Type Description String | Improve this Doc View Source AppSettingsRequiredConfigurationBadType Declaration public static readonly string AppSettingsRequiredConfigurationBadType Field Value Type Description String | Improve this Doc View Source AppSettingsRequiredConfigurationMissing Declaration public static readonly string AppSettingsRequiredConfigurationMissing Field Value Type Description String | Improve this Doc View Source ArgumentCountNegative Declaration public static readonly string ArgumentCountNegative Field Value Type Description String | Improve this Doc View Source ArgumentMustNotBeNullOrWhiteSpace Declaration public static readonly string ArgumentMustNotBeNullOrWhiteSpace Field Value Type Description String | Improve this Doc View Source CapacityMustBeGreaterThanOrEqualToZero Declaration public static readonly string CapacityMustBeGreaterThanOrEqualToZero Field Value Type Description String | Improve this Doc View Source DateTimeMustBeUtc Declaration public static readonly string DateTimeMustBeUtc Field Value Type Description String | Improve this Doc View Source DirectServicesCanNotBeDisabled Declaration public static readonly string DirectServicesCanNotBeDisabled Field Value Type Description String | Improve this Doc View Source ErrorWhileCollectorRaiseError Declaration public static readonly string ErrorWhileCollectorRaiseError Field Value Type Description String | Improve this Doc View Source ExceptionWhileResolvingType Declaration public static readonly string ExceptionWhileResolvingType Field Value Type Description String | Improve this Doc View Source ExpectedXmlAttribute Declaration public static readonly string ExpectedXmlAttribute Field Value Type Description String | Improve this Doc View Source FactoryTesterMismatch Declaration public static readonly string FactoryTesterMismatch Field Value Type Description String | Improve this Doc View Source FIFOBufferEmpty Declaration public static readonly string FIFOBufferEmpty Field Value Type Description String | Improve this Doc View Source FileMustExist Declaration public static readonly string FileMustExist Field Value Type Description String | Improve this Doc View Source FileUtilNoReadOnlyWhenCreateFile Declaration public static readonly string FileUtilNoReadOnlyWhenCreateFile Field Value Type Description String | Improve this Doc View Source FileUtilUnableToCreateUniqueTimedFile Declaration public static readonly string FileUtilUnableToCreateUniqueTimedFile Field Value Type Description String | Improve this Doc View Source InnerExceptionMustBeTheFirstAggregatedException Declaration public static readonly string InnerExceptionMustBeTheFirstAggregatedException Field Value Type Description String | Improve this Doc View Source InvalidAssemblyQualifiedName Declaration public static readonly string InvalidAssemblyQualifiedName Field Value Type Description String | Improve this Doc View Source ServiceAlreadyDirectlySupported Declaration public static readonly string ServiceAlreadyDirectlySupported Field Value Type Description String | Improve this Doc View Source ServiceAlreadyRegistered Declaration public static readonly string ServiceAlreadyRegistered Field Value Type Description String | Improve this Doc View Source ServiceImplCallbackTypeMismatch Declaration public static readonly string ServiceImplCallbackTypeMismatch Field Value Type Description String | Improve this Doc View Source ServiceImplTypeMismatch Declaration public static readonly string ServiceImplTypeMismatch Field Value Type Description String | Improve this Doc View Source StringMatcherForwardPastEnd Declaration public static readonly string StringMatcherForwardPastEnd Field Value Type Description String | Improve this Doc View Source TraitsMustBelongToTheSameContext Declaration public static readonly string TraitsMustBelongToTheSameContext Field Value Type Description String | Improve this Doc View Source TraitsMustNotBeMultiLineString Declaration public static readonly string TraitsMustNotBeMultiLineString Field Value Type Description String | Improve this Doc View Source UnregisteredServiceInServiceProvider Declaration public static readonly string UnregisteredServiceInServiceProvider Field Value Type Description String"
  },
  "api/CK.Core.Impl.ActivityMonitorResources.html": {
    "href": "api/CK.Core.Impl.ActivityMonitorResources.html",
    "title": "Class ActivityMonitorResources | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorResources String values for errors and messages. Inheritance Object ActivityMonitorResources Namespace :CK.Core.Impl Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorResources Fields | Improve this Doc View Source ActivityMonitorBoundClientMultipleRegister Declaration public static readonly string ActivityMonitorBoundClientMultipleRegister Field Value Type Description String | Improve this Doc View Source ActivityMonitorConcurrentThreadAccess Declaration public static readonly string ActivityMonitorConcurrentThreadAccess Field Value Type Description String | Improve this Doc View Source ActivityMonitorDependentTokenMustBeDelayedLaunch Declaration public static readonly string ActivityMonitorDependentTokenMustBeDelayedLaunch Field Value Type Description String | Improve this Doc View Source ActivityMonitorErrorWhileGetConclusionText Declaration public static readonly string ActivityMonitorErrorWhileGetConclusionText Field Value Type Description String | Improve this Doc View Source ActivityMonitorInvalidLogLevel Declaration public static readonly string ActivityMonitorInvalidLogLevel Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyCallOnly Declaration public static readonly string ActivityMonitorReentrancyCallOnly Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyError Declaration public static readonly string ActivityMonitorReentrancyError Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyReleaseError Declaration public static readonly string ActivityMonitorReentrancyReleaseError Field Value Type Description String | Improve this Doc View Source ActivityMonitorTagMustBeRegistered Declaration public static readonly string ActivityMonitorTagMustBeRegistered Field Value Type Description String | Improve this Doc View Source ClosedByBridgeRemoved Declaration public static readonly string ClosedByBridgeRemoved Field Value Type Description String | Improve this Doc View Source InvalidRootLogPath Declaration public static readonly string InvalidRootLogPath Field Value Type Description String | Improve this Doc View Source PossibleWrongOverloadUseWithException Declaration public static readonly string PossibleWrongOverloadUseWithException Field Value Type Description String | Improve this Doc View Source RootLogPathMustBeSet Declaration public static readonly string RootLogPathMustBeSet Field Value Type Description String | Improve this Doc View Source SystemActivityMonitorRootLogPathSetOnlyOnce Declaration public static readonly string SystemActivityMonitorRootLogPathSetOnlyOnce Field Value Type Description String"
  },
  "api/CK.Core.Impl.ActivityMonitorOutput.html": {
    "href": "api/CK.Core.Impl.ActivityMonitorOutput.html",
    "title": "Class ActivityMonitorOutput | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorOutput Implementation of IActivityMonitorOutput for Output . Inheritance Object ActivityMonitorOutput Namespace :CK.Core.Impl Assembly :CK.ActivityMonitor.dll Syntax public class ActivityMonitorOutput : IActivityMonitorOutput Constructors | Improve this Doc View Source ActivityMonitorOutput(IActivityMonitorImpl) Initializes a new ActivityMonitorOutput bound to a IActivityMonitor . Declaration public ActivityMonitorOutput(IActivityMonitorImpl monitor) Parameters Type Name Description IActivityMonitorImpl monitor Properties | Improve this Doc View Source BridgeTarget Gets an entry point for other monitors: by registering ActivityMonitorBridge in other Output bound to this ActivityMonitorBridgeTarget , log streams can easily be merged. Declaration public ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget | Improve this Doc View Source Clients Gets the list of registered IActivityMonitorClient . Declaration public IReadOnlyList<IActivityMonitorClient> Clients { get; } Property Value Type Description IReadOnlyList < IActivityMonitorClient > | Improve this Doc View Source Monitor Gets the associated IActivityMonitor . Declaration protected IActivityMonitorImpl Monitor { get; } Property Value Type Description IActivityMonitorImpl Methods | Improve this Doc View Source RegisterClient(IActivityMonitorClient, out Boolean) Registers an IActivityMonitorClient to the Clients list. Duplicate IActivityMonitorClient are silently ignored. Declaration public IActivityMonitorClient RegisterClient(IActivityMonitorClient client, out bool added) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Boolean added True if the client has been added, false if it was already registered. Returns Type Description IActivityMonitorClient The registered client. | Improve this Doc View Source RegisterClient<T>(T, out Boolean) Registers a typed IActivityMonitorClient . Declaration public T RegisterClient<T>(T client, out bool added)where T : IActivityMonitorClient Parameters Type Name Description T client Clients to register. Boolean added True if the client has been added, false if it was already registered. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . | Improve this Doc View Source RegisterUniqueClient<T>(Func<T, Boolean>, Func<T>) Registers a IActivityMonitorClient that must be unique in a sense. Remarks The factory function MUST return a client that satisfies the tester function otherwise a System.InvalidOperationException is thrown. The factory is called only when the no client satisfies the tester function: this makes the 'added' out parameter useless. Declaration public T RegisterUniqueClient<T>(Func<T, bool> tester, Func<T> factory)where T : IActivityMonitorClient Parameters Type Name Description Func <T, Boolean > tester Predicate that must be satisfied for at least one registered client. Func <T> factory Factory that will be called if no existing client satisfies tester . Returns Type Description T The existing or newly created client. Type Parameters Name Description T | Improve this Doc View Source UnregisterClient(IActivityMonitorClient) Unregisters the given IActivityMonitorClient from the Clients list. Silently ignores unregistered client. Declaration public IActivityMonitorClient UnregisterClient(IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The unregistered client or null if it has not been found."
  },
  "api/CK.RouteConfig.Impl.ActionCompositeConfiguration.html": {
    "href": "api/CK.RouteConfig.Impl.ActionCompositeConfiguration.html",
    "title": "Class ActionCompositeConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActionCompositeConfiguration Defines a composite action that can be a ActionParallelConfiguration or a ActionSequenceConfiguration . Inheritance Object ActionConfiguration ActionCompositeConfiguration Namespace :CK.RouteConfig.Impl Assembly :CK.Monitoring.dll Syntax public class ActionCompositeConfiguration : ActionConfiguration Constructors | Improve this Doc View Source ActionCompositeConfiguration(String, Boolean) Protected constructor. Declaration protected ActionCompositeConfiguration(string name, bool isParallel) Parameters Type Name Description String name Action's name. Boolean isParallel Whether this composite is a parallel. Properties | Improve this Doc View Source Children Gets children (items of this composite) actions. Declaration public IReadOnlyList<ActionConfiguration> Children { get; } Property Value Type Description IReadOnlyList < ActionConfiguration > | Improve this Doc View Source IsCloneable Always true since one can always clone a composite. Declaration public override bool IsCloneable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsParallel Gets whether this is a parallel composite. Declaration public bool IsParallel { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Add(ActionConfiguration) Adds an ActionConfiguration to this composite. Declaration protected void Add(ActionConfiguration action) Parameters Type Name Description ActionConfiguration action The action to add. | Improve this Doc View Source CheckValidity(String, IActivityMonitor) Checks that children are valid (action's name must be unique). Declaration public override bool CheckValidity(string routeName, IActivityMonitor monitor) Parameters Type Name Description String routeName Name of the route that references this action. IActivityMonitor monitor Monitor to report errors. Returns Type Description Boolean True if valid, false otherwise. | Improve this Doc View Source Clone() Clones this composite. Declaration public override ActionConfiguration Clone() Returns Type Description ActionConfiguration A clone of this composite."
  },
  "api/CK.RouteConfig.ConfiguredRouteHost`2.html": {
    "href": "api/CK.RouteConfig.ConfiguredRouteHost`2.html",
    "title": "Class ConfiguredRouteHost<TAction, TRoute> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ConfiguredRouteHost<TAction, TRoute> Thread-safe management of hierarchical routes configured (and reconfigured) by a RouteConfiguration . Inheritance Object ConfiguredRouteHost<TAction, TRoute> Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ConfiguredRouteHost<TAction, TRoute> : IDisposable where TAction : class where TRoute : class Type Parameters Name Description TAction Actual type of the actions. Can be any reference type. TRoute Route class that encapsulates actions. Constructors | Improve this Doc View Source ConfiguredRouteHost(RouteActionFactory<TAction, TRoute>, Action<ConfiguredRouteHost<TAction, TRoute>.ConfigurationReady>, Action<IActivityMonitor, TAction>, Action<IActivityMonitor, TAction>) Initializes a new ConfiguredRouteHost<TAction, TRoute> initially IsEmpty . Declaration public ConfiguredRouteHost(RouteActionFactory<TAction, TRoute> actionFactory, Action<ConfiguredRouteHost<TAction, TRoute>.ConfigurationReady> readyCallback = null, Action<IActivityMonitor, TAction> starter = null, Action<IActivityMonitor, TAction> closer = null) Parameters Type Name Description RouteActionFactory <TAction, TRoute> actionFactory Factory for TAction based on an ActionConfiguration for final TRoute . Action < ConfiguredRouteHost.ConfigurationReady <>> readyCallback Optional callback that will be called right before applying a new configuration. Action < IActivityMonitor , TAction> starter Optional starter function for a TAction . Action < IActivityMonitor , TAction> closer Optional closer function. Properties | Improve this Doc View Source ConfigurationAttemptCount Gets the total number of calls to SetConfiguration(IActivityMonitor, RouteConfiguration, Int32) (and to Dispose() method). This can be used to call WaitForNextConfiguration(Int32, Int32) . Declaration public int ConfigurationAttemptCount { get; } Property Value Type Description Int32 | Improve this Doc View Source IsDisposed Gets whether this host has been disposed. When disposed, ObtainRoute(String) always returns null. Declaration public bool IsDisposed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsEmpty Gets whether this host is closed. When closed, all routes are empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source SuccessfulConfigurationCount Gets the total number of successful calls to SetConfiguration(IActivityMonitor, RouteConfiguration, Int32) . Declaration public int SuccessfulConfigurationCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Dispose() Calls Dispose(IActivityMonitor, Int32) with a SystemActivityMonitor and no closing time limit. Declaration public void Dispose() | Improve this Doc View Source Dispose(IActivityMonitor, Int32) Closes the current configuration. Current actions are closed. IsDisposed is set to true. Declaration public bool Dispose(IActivityMonitor monitor, int millisecondsBeforeForceClose = -1) Parameters Type Name Description IActivityMonitor monitor Monitor that will be used. Must not be null. Int32 millisecondsBeforeForceClose Maximal time to wait for current routes to be unlocked (see IRouteConfigurationLock ). Returns Type Description Boolean Returns true if this host has actually been disposed, false if it has already been disposed. | Improve this Doc View Source Dispose(Boolean) Calls Dispose(IActivityMonitor, Int32) with a SystemActivityMonitor and no closing time limit. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing True when called from code (managed and unmanaged resources must be disposed), false when called from the Garbage collector (only unmanaged resources should be closed in such case). | Improve this Doc View Source Finalize() Standard Dispose/Finalizer pattern (calls Dispose(Boolean) . Here to support release of unmanaged resources by specialization. Declaration protected void Finalize() | Improve this Doc View Source ObtainRoute(String) Returns the TRoute for a full name. Obtaining a route locks the configuration: it must be unlocked when not used anymore. When null, it means that a configuration is waiting to be applied (a route that buffers its work should be substituted) or that this host IsDisposed . Declaration public TRoute ObtainRoute(string route) Parameters Type Name Description String route The full route that will be matched. Returns Type Description TRoute The final route to apply or null if a configuration is applying or if IsDisposed is true. | Improve this Doc View Source SetConfiguration(IActivityMonitor, RouteConfiguration, Int32) Sets a new RouteConfiguration . If an error occurs while starting the new routes, false is returned and routes are empty. Declaration public bool SetConfiguration(IActivityMonitor monitor, RouteConfiguration configuration, int millisecondsBeforeForceClose = -1) Parameters Type Name Description IActivityMonitor monitor Monitor that will receive explanations and errors. RouteConfiguration configuration The configuration to achieve. Int32 millisecondsBeforeForceClose Maximal time to wait for current routes to be unlocked (see IRouteConfigurationLock ). Returns Type Description Boolean True if the new configuration has been successfully applied, false if an error occurred. | Improve this Doc View Source WaitForAppliedPendingConfiguration(Int32) Blocks the caller if a new configuration is waiting to be applied until it has effectively be applied. Declaration public bool WaitForAppliedPendingConfiguration(int millisecondsTimeout = -1) Parameters Type Name Description Int32 millisecondsTimeout Maximum number of milliseconds to wait. Returns Type Description Boolean False if specified timeout expired. | Improve this Doc View Source WaitForNextConfiguration(Int32, Int32) Blocks the caller until the current ConfigurationAttemptCount is greater or equal to the given number and the last configuration has been applied (or this object is disposed). Declaration public bool WaitForNextConfiguration(int configurationAttemptCount, int millisecondsTimeout) Parameters Type Name Description Int32 configurationAttemptCount The number of configuration attempt count to wait for. Int32 millisecondsTimeout Maximum number of milliseconds to wait. Use System.Threading.Timeout.Infinite or -1 for no limit. Returns Type Description Boolean False if specified timeout expired. Events | Improve this Doc View Source ConfigurationClosing Event raised by SetConfiguration(IActivityMonitor, RouteConfiguration, Int32) when current configured routes must be released. Declaration public event EventHandler<ConfiguredRouteHost<TAction, TRoute>.ConfigurationClosingEventArgs> ConfigurationClosing Event Type Type Description EventHandler < ConfiguredRouteHost.ConfigurationClosingEventArgs <>>"
  },
  "api/CK.RouteConfig.ConfiguredRouteHost`2.ConfigurationReady.html": {
    "href": "api/CK.RouteConfig.ConfiguredRouteHost`2.ConfigurationReady.html",
    "title": "Class ConfiguredRouteHost<TAction, TRoute>.ConfigurationReady | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ConfiguredRouteHost<TAction, TRoute>.ConfigurationReady Argument of the callback called when the configuration is ready to be applied. Inheritance Object ConfiguredRouteHost<TAction, TRoute>.ConfigurationReady Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ConfigurationReady Fields | Improve this Doc View Source Monitor The IActivityMonitor that monitors the change of the configuration. Declaration public readonly IActivityMonitor Monitor Field Value Type Description IActivityMonitor Properties | Improve this Doc View Source IsEmptyConfiguration Gets whether the new configuration is empty. Declaration public bool IsEmptyConfiguration { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyConfiguration() Applies pending configuration: new routes are set on the host, ObtainRoute(String) now returns the new ones. If this method is not called during the call back, it is automatically called before leaving SetConfiguration(IActivityMonitor, RouteConfiguration, Int32) . Declaration public void ApplyConfiguration() | Improve this Doc View Source GetAllRoutes() Gets all future routes. This must be used before calling ApplyConfiguration() otherwise an System.InvalidOperationException is thrown. Ordering corresponds to a depth-first traversal. Declaration public List<TRoute> GetAllRoutes() Returns Type Description List <TRoute> | Improve this Doc View Source ObtainRoute(String) Returns the TRoute for a full name based on the new configuration. This obtention locks the configuration: it must be unlocked when not used anymore. Declaration public TRoute ObtainRoute(string route) Parameters Type Name Description String route The full route that will be matched. Returns Type Description TRoute The final route to use."
  },
  "api/CK.RouteConfig.ConfiguredRouteHost`2.ConfigurationClosingEventArgs.html": {
    "href": "api/CK.RouteConfig.ConfiguredRouteHost`2.ConfigurationClosingEventArgs.html",
    "title": "Class ConfiguredRouteHost<TAction, TRoute>.ConfigurationClosingEventArgs | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ConfiguredRouteHost<TAction, TRoute>.ConfigurationClosingEventArgs Event argument raised by ConfigurationClosing . Inheritance Object EventArgs ConfiguredRouteHost<TAction, TRoute>.ConfigurationClosingEventArgs Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ConfigurationClosingEventArgs : EventArgs Fields | Improve this Doc View Source Monitor The IActivityMonitor that monitors the change of the configuration. Declaration public readonly IActivityMonitor Monitor Field Value Type Description IActivityMonitor | Improve this Doc View Source NewConfiguration The configuration waiting to be applied. Null when the host is disposed. Declaration public readonly RouteConfigurationResult NewConfiguration Field Value Type Description RouteConfigurationResult Properties | Improve this Doc View Source IsDisposed Gets whether the host is disposed. Declaration public bool IsDisposed { get; } Property Value Type Description Boolean"
  },
  "api/CK.RouteConfig.ActionSequenceConfiguration.html": {
    "href": "api/CK.RouteConfig.ActionSequenceConfiguration.html",
    "title": "Class ActionSequenceConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActionSequenceConfiguration Specialized composite for sequence configuration. Inheritance Object ActionConfiguration ActionCompositeConfiguration ActionSequenceConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ActionSequenceConfiguration : ActionCompositeConfiguration Constructors | Improve this Doc View Source ActionSequenceConfiguration(String) Initializes a new sequence. Declaration public ActionSequenceConfiguration(string name) Parameters Type Name Description String name Name of the configuration. Methods | Improve this Doc View Source AddAction(ActionConfiguration) Overridden to return a this as a ActionSequenceConfiguration for fluent syntax. Declaration public ActionSequenceConfiguration AddAction(ActionConfiguration a) Parameters Type Name Description ActionConfiguration a The action to add. Returns Type Description ActionSequenceConfiguration This sequence."
  },
  "api/CK.RouteConfig.ActionParallelConfiguration.html": {
    "href": "api/CK.RouteConfig.ActionParallelConfiguration.html",
    "title": "Class ActionParallelConfiguration | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActionParallelConfiguration Specialized composite for parallel configuration. Inheritance Object ActionConfiguration ActionCompositeConfiguration ActionParallelConfiguration Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ActionParallelConfiguration : ActionCompositeConfiguration Constructors | Improve this Doc View Source ActionParallelConfiguration(String) Initializes a new parallel. Declaration public ActionParallelConfiguration(string name) Parameters Type Name Description String name Name of the configuration. Methods | Improve this Doc View Source AddAction(ActionConfiguration) Overridden to return a this as a ActionParallelConfiguration for fluent syntax. Declaration public ActionParallelConfiguration AddAction(ActionConfiguration a) Parameters Type Name Description ActionConfiguration a The action to add. Returns Type Description ActionParallelConfiguration This parallel."
  },
  "api/CK.RouteConfig.ActionConfigurationResolved.html": {
    "href": "api/CK.RouteConfig.ActionConfigurationResolved.html",
    "title": "Class ActionConfigurationResolved | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActionConfigurationResolved Resolved action configurations belong to RouteConfigurationResolved and SubRouteConfigurationResolved . Inheritance Object ActionConfigurationResolved Namespace :CK.RouteConfig Assembly :CK.Monitoring.dll Syntax public class ActionConfigurationResolved Properties | Improve this Doc View Source ActionConfiguration Gets the action configuration instance (possibly shared by multiple routes if the ActionConfiguration . ActionConfiguration.IsCloneable is false). Declaration public ActionConfiguration ActionConfiguration { get; } Property Value Type Description ActionConfiguration | Improve this Doc View Source FullName Gets the full name of the action (this Path / Name ). Declaration public string FullName { get; } Property Value Type Description String | Improve this Doc View Source Index Gets the index of this action in its route or in its composite. Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Gets the name of the action. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Path of this action. Declaration public IReadOnlyList<string> Path { get; } Property Value Type Description IReadOnlyList < String >"
  },
  "api/CK.Core.Tests.Collection.TestCollectionThatImplementsICollection`1.html": {
    "href": "api/CK.Core.Tests.Collection.TestCollectionThatImplementsICollection`1.html",
    "title": "Class TestCollectionThatImplementsICollection<T> | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TestCollectionThatImplementsICollection<T> Inheritance Object TestCollectionThatImplementsICollection<T> Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax public class TestCollectionThatImplementsICollection<T> : ICKReadOnlyCollection<T>, IReadOnlyCollection<T>, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source TestCollectionThatImplementsICollection() Declaration public TestCollectionThatImplementsICollection() Fields | Improve this Doc View Source Content Declaration public List<T> Content Field Value Type Description List <T> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source ICollection<T>.IsReadOnly Declaration bool ICollection<T>.IsReadOnly { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Contains(Object) Declaration public bool Contains(object item) Parameters Type Name Description Object item Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source ICollection<T>.Add(T) Declaration void ICollection<T>.Add(T item) Parameters Type Name Description T item | Improve this Doc View Source ICollection<T>.Clear() Declaration void ICollection<T>.Clear() | Improve this Doc View Source ICollection<T>.Contains(T) Declaration bool ICollection<T>.Contains(T item) Parameters Type Name Description T item Returns Type Description Boolean | Improve this Doc View Source ICollection<T>.CopyTo(T[], Int32) Declaration void ICollection<T>.CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array Int32 arrayIndex | Improve this Doc View Source ICollection<T>.Remove(T) Declaration bool ICollection<T>.Remove(T item) Parameters Type Name Description T item Returns Type Description Boolean | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Events | Improve this Doc View Source ContainsCalled Declaration public event EventHandler ContainsCalled Event Type Type Description EventHandler | Improve this Doc View Source CountCalled Declaration public event EventHandler CountCalled Event Type Type Description EventHandler"
  },
  "api/CK.Core.Tests.Collection.SortedArrayListTests.html": {
    "href": "api/CK.Core.Tests.Collection.SortedArrayListTests.html",
    "title": "Class SortedArrayListTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SortedArrayListTests Inheritance Object SortedArrayListTests Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"SortedArrayList\")] public class SortedArrayListTests Methods | Improve this Doc View Source CheckPosition_locally_reorders_the_items() Declaration [Test] public void CheckPosition_locally_reorders_the_items() | Improve this Doc View Source Covariance_support_via_ICKReadOnlyList_and_ICKWritableCollection() Declaration [Test] public void Covariance_support_via_ICKReadOnlyList_and_ICKWritableCollection() | Improve this Doc View Source SortedArrayList_can_be_cast_into_IList_or_ICollection() Declaration [Test] public void SortedArrayList_can_be_cast_into_IList_or_ICollection() | Improve this Doc View Source SortedArrayListAllowDuplicatesTest() Declaration [Test] public void SortedArrayListAllowDuplicatesTest() | Improve this Doc View Source SortedArrayListSimpleTest() Declaration [Test] public void SortedArrayListSimpleTest() | Improve this Doc View Source testing_add_and_remove_items() Declaration [Test] public void testing_add_and_remove_items() | Improve this Doc View Source testing_capacity_changes() Declaration [Test] public void testing_capacity_changes() | Improve this Doc View Source testing_expected_Argument_InvalidOperation_and_IndexOutOfRangeException() Declaration [Test] public void testing_expected_Argument_InvalidOperation_and_IndexOutOfRangeException() | Improve this Doc View Source using_binary_search_algorithms_on_SortedArrayList() Declaration [Test] public void using_binary_search_algorithms_on_SortedArrayList()"
  },
  "api/CK.Core.Tests.Collection.SortedArrayKeyListTests.html": {
    "href": "api/CK.Core.Tests.Collection.SortedArrayKeyListTests.html",
    "title": "Class SortedArrayKeyListTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SortedArrayKeyListTests Inheritance Object SortedArrayKeyListTests Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"SortedArrayList\")] public class SortedArrayKeyListTests Methods | Improve this Doc View Source another_test_with_duplicates_in_SortedArrayKeyList() Declaration [Test] public void another_test_with_duplicates_in_SortedArrayKeyList() | Improve this Doc View Source SortedArrayKeyList_can_allow_duplicates() Declaration [Test] public void SortedArrayKeyList_can_allow_duplicates() | Improve this Doc View Source SortedArrayKeyList_does_not_accept_null_entries() Declaration [Test] public void SortedArrayKeyList_does_not_accept_null_entries() | Improve this Doc View Source SortedArrayKeyList_without_duplicates() Declaration [Test] public void SortedArrayKeyList_without_duplicates() | Improve this Doc View Source sorting_Lexicographic_integers() Declaration [Test] public void sorting_Lexicographic_integers()"
  },
  "api/CK.Core.Tests.Collection.ReadOnlyTests.html": {
    "href": "api/CK.Core.Tests.Collection.ReadOnlyTests.html",
    "title": "Class ReadOnlyTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ReadOnlyTests Inheritance Object ReadOnlyTests Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class ReadOnlyTests Methods | Improve this Doc View Source BinarySearch_on_IComparable_TValue_items(String, Int32, Int32) Declaration [TestCase(\"\", 5, -1)] [TestCase(\"1\", 5, -2)] [TestCase(\"1\", -5, -1)] [TestCase(\"1,2,5\", 5, 2)] [TestCase(\"1,2,5\", 4, -3)] [TestCase(\"1,2,5\", 2, 1)] [TestCase(\"1,2,5\", 1, 0)] [TestCase(\"1,2,5\", 0, -1)] public void BinarySearch_on_IComparable_TValue_items(string values, int search, int resultIndex) Parameters Type Name Description String values Int32 search Int32 resultIndex | Improve this Doc View Source covariant_Contains_accepts_any_types() Declaration [Test] public void covariant_Contains_accepts_any_types() | Improve this Doc View Source IndexOf_on_IReadOnlyList() Declaration [Test] public void IndexOf_on_IReadOnlyList() | Improve this Doc View Source linq_on_ICollection_implementation_uses_Count_property() Declaration [Test] public void linq_on_ICollection_implementation_uses_Count_property() | Improve this Doc View Source linq_with_mere_IReadOnlyCollection_implementation_is_not_optimal_for_Count() Declaration [Test] public void linq_with_mere_IReadOnlyCollection_implementation_is_not_optimal_for_Count()"
  },
  "api/CK.Core.Tests.Collection.FIFOTests.html": {
    "href": "api/CK.Core.Tests.Collection.FIFOTests.html",
    "title": "Class FIFOTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class FIFOTests Inheritance Object FIFOTests Namespace :CK.Core.Tests.Collection Assembly :CK.Core.Tests.dll Syntax [TestFixture] [Category(\"FIFOBuffer\")] public class FIFOTests Methods | Improve this Doc View Source FIFO_change_capacity_preserves_items() Declaration [Test] public void FIFO_change_capacity_preserves_items() | Improve this Doc View Source FIFO_supports_Null_entries() Declaration [Test] public void FIFO_supports_Null_entries() | Improve this Doc View Source FIFO_supports_Peek_and_PeekLast() Declaration [Test] public void FIFO_supports_Peek_and_PeekLast() | Improve this Doc View Source FIFO_supports_removeAt() Declaration [Test] public void FIFO_supports_removeAt() | Improve this Doc View Source FIFO_ToArray_method() Declaration [Test] public void FIFO_ToArray_method() | Improve this Doc View Source FIFO_with_one_and_only_one_Value_Type() Declaration [Test] public void FIFO_with_one_and_only_one_Value_Type()"
  },
  "api/CK.Core.Tests.CKExceptionTests.html": {
    "href": "api/CK.Core.Tests.CKExceptionTests.html",
    "title": "Class CKExceptionTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class CKExceptionTests Inheritance Object CKExceptionTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class CKExceptionTests Methods | Improve this Doc View Source AggregatedExceptions() Declaration [Test] public void AggregatedExceptions() | Improve this Doc View Source FromSimplestException() Declaration [Test] public void FromSimplestException() | Improve this Doc View Source reading_and_writing_CKExceptionData_with_BinaryWriter_and_BinaryReader() Declaration [Test] public void reading_and_writing_CKExceptionData_with_BinaryWriter_and_BinaryReader() | Improve this Doc View Source reading_and_writing_CKExceptionData_with_Standard_Serialization() Declaration [Test] public void reading_and_writing_CKExceptionData_with_Standard_Serialization() | Improve this Doc View Source WithInnerExceptions() Declaration [Test] public void WithInnerExceptions()"
  },
  "api/CK.Core.Tests.Canidae.html": {
    "href": "api/CK.Core.Tests.Canidae.html",
    "title": "Class Canidae | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Canidae Inheritance Object Animal Mammal Canidae Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class Canidae : Mammal Constructors | Improve this Doc View Source Canidae(String, Int32, Boolean) Declaration public Canidae(string name, int gestationPeriod = 9, bool isRetriever = false) Parameters Type Name Description String name Int32 gestationPeriod Boolean isRetriever Properties | Improve this Doc View Source IsRetriever Declaration public bool IsRetriever { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Core.Tests.AppSettingsTests.html": {
    "href": "api/CK.Core.Tests.AppSettingsTests.html",
    "title": "Class AppSettingsTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AppSettingsTests Inheritance Object AppSettingsTests Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax [TestFixture] public class AppSettingsTests Methods | Improve this Doc View Source ClearAppSettingsSection() Declaration [SetUp] public void ClearAppSettingsSection() | Improve this Doc View Source DefaultInitializationOnConfigurationMananger() Declaration [Test] public void DefaultInitializationOnConfigurationMananger() | Improve this Doc View Source DefaultInitializationOnConfigurationManangerIsDynamic() Declaration [Test] public void DefaultInitializationOnConfigurationManangerIsDynamic() | Improve this Doc View Source DoubleInitialization() Declaration [Test] public void DoubleInitialization() | Improve this Doc View Source OverideDefaultInitialization() Declaration [Test] public void OverideDefaultInitialization() | Improve this Doc View Source OverrideAndRevert() Declaration [Test] public void OverrideAndRevert() | Improve this Doc View Source StandardObjectInitialization() Declaration [Test] public void StandardObjectInitialization() | Improve this Doc View Source StandardStringInitialization() Declaration [Test] public void StandardStringInitialization()"
  },
  "api/CK.Core.Tests.Animal.html": {
    "href": "api/CK.Core.Tests.Animal.html",
    "title": "Class Animal | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Animal Inheritance Object Animal Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class Animal Constructors | Improve this Doc View Source Animal(String) Declaration public Animal(string name) Parameters Type Name Description String name Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/CK.Core.Tests.AddServiceImpl.html": {
    "href": "api/CK.Core.Tests.AddServiceImpl.html",
    "title": "Class AddServiceImpl | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AddServiceImpl Inheritance Object AddServiceImpl Namespace :CK.Core.Tests Assembly :CK.Core.Tests.dll Syntax public class AddServiceImpl : IAddService, IAddServiceBase Methods | Improve this Doc View Source Add(Int32, Int32) Declaration public int Add(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32"
  },
  "api/CK.Core.TemporaryFile.html": {
    "href": "api/CK.Core.TemporaryFile.html",
    "title": "Class TemporaryFile | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class TemporaryFile Small helper to automatically delete a temporary file. It is mainly a secure wrapper around System.IO.Path.GetTempFileName that creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file: the Path property exposes it. This file is flagged by default with System.IO.FileAttributes.Temporary (short-lived): it will automatically be deleted by the Operating System during if it is still here on reboot. Inheritance Object TemporaryFile Namespace :CK.Core Assembly :CK.Core.dll Syntax public sealed class TemporaryFile : IDisposable Constructors | Improve this Doc View Source TemporaryFile() Initializes a new short lived TemporaryFile . Declaration public TemporaryFile() | Improve this Doc View Source TemporaryFile(Boolean) Initializes a new TemporaryFile . When shortLived is true, the System.IO.FileAttributes.Temporary is set on the file. Declaration public TemporaryFile(bool shortLived) Parameters Type Name Description Boolean shortLived True to set the System.IO.FileAttributes.Temporary on the file. | Improve this Doc View Source TemporaryFile(Boolean, String) Initializes a new TemporaryFile with an extension. When shortLived is true, the System.IO.FileAttributes.Temporary is set on the file. The file will have a name looking like : xxxx.tmp.extension Remarks When extension is \".\", the final path will end with a \".\". Declaration public TemporaryFile(bool shortLived, string extension) Parameters Type Name Description Boolean shortLived True to set the System.IO.FileAttributes.Temporary on the file. String extension Optional extension of the file (example : '.png' and 'png' would both work). | Improve this Doc View Source TemporaryFile(String) Initializes a new short lived TemporaryFile with an extension - the file will have a name looking like : xxxx.tmp.extension Declaration public TemporaryFile(string extension) Parameters Type Name Description String extension The extension of the file (example : '.png' and 'png' would both work) Properties | Improve this Doc View Source IsDetached Gets whether the temporary file is detached (its Path is System.String.Empty ). Declaration public bool IsDetached { get; } Property Value Type Description Boolean | Improve this Doc View Source Path Gets the complete file path of the temporary file. It is System.String.Empty when the file has been Detach() ed. The file is not opened but exists, initially empty. Declaration public string Path { get; } Property Value Type Description String Methods | Improve this Doc View Source Detach() Detaches the temporary file: it will no more be automatically destroyed. When created short-lived (see System.IO.FileAttributes.Temporary ), this flag is not reset: the file will be destroyed by the Operating System on the bext reboot. Declaration public void Detach() | Improve this Doc View Source Dispose() Attempts to delete the temporary file. Declaration public void Dispose() | Improve this Doc View Source Finalize() Finalizer attempts to delete the file. Declaration protected void Finalize()"
  },
  "api/CK.Core.SystemActivityMonitor.html": {
    "href": "api/CK.Core.SystemActivityMonitor.html",
    "title": "Class SystemActivityMonitor | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SystemActivityMonitor This ActivityMonitor logs errors in a directory (if the static RootLogPath property is not null) and raises OnError events. Its main goal is to be internally used by the Monitor framework but can be used as a \"normal\" monitor (if you believe it is a good idea). The easiest way to configure it is to set an application settings with the key \"CK.Core.SystemActivityMonitor.RootLogPath\" and the root path for logs as the value. Inheritance Object ActivityMonitor SystemActivityMonitor Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class SystemActivityMonitor : ActivityMonitor, IActivityMonitorImpl, IActivityMonitor, IUniqueId Remarks The RootLogPath uses the Application configuration (if it exists): If the setting is not there, the Critical errors will NOT be logged except if it is explicitly set: SystemActivityMonitor.RootLogPath = \"...\"; Constructors | Improve this Doc View Source SystemActivityMonitor(Boolean, String) Initializes a new SystemActivityMonitor that can behave as a standard monitor (when automatic configurations applies). Declaration public SystemActivityMonitor(bool applyAutoConfigurations, string topic) Parameters Type Name Description Boolean applyAutoConfigurations True to apply automatic configurations and, hence, behave like any other ActivityMonitor . String topic Optional initial topic (can be null). Fields | Improve this Doc View Source AppSettingsKey The key in the application settings used to initialize the RootLogPath if it exists in Default . Declaration public static readonly string AppSettingsKey Field Value Type Description String | Improve this Doc View Source SubDirectoryName The directory in RootLogPath into which errors file will be created is \"CriticalErrors/\". Declaration public static readonly string SubDirectoryName Field Value Type Description String Properties | Improve this Doc View Source AppSettingsRootLogPath Gets the RootLogPath that is configured in application settings (null otherwise). Getting this property ensures that this type's static information is initialized. Declaration public static string AppSettingsRootLogPath { get; } Property Value Type Description String | Improve this Doc View Source RootLogPath Gets or sets (it can be set only once) the log folder to use (setting multiple time the same path is accepted). Once set, the path is NormalizePathSeparator(String, Boolean) . See remarks. Remarks When setting it, the path must be valid (when it is not an absolute path, it is combined with the AppDomain.CurrentDomain.BaseDirectory or the application base path). The subordinate directory \"CriticalErrors\" is created (if not already here) and a test file is created (and deleted) inside it to ensure that (at least at configuration time), no security configuration prevents us to create log files: all errors files will be created in this sub directory. It is recommended to use this directory to store all other logs and/or files related to activity tracking. When not null, it necessarily ends with a System.IO.Path.DirectorySeparatorChar . When not sets, the first get initializes it with the value of AppSettingsKey in Default if it exists. Declaration public static string RootLogPath { get; set; } Property Value Type Description String | Improve this Doc View Source TrackActivityMonitorLoggingError Gets or sets whether CriticalErrorCollector are tracked (this is thread safe). When true, LoggingError events are tracked, written to a file (if RootLogPath is available) and ultimately published again as a OnError events. Defaults to true. Declaration public static bool TrackActivityMonitorLoggingError { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source AssertRootLogPathIsSet() Checks that RootLogPath is correctly configured by throwing a detailed exception if not. Declaration public static void AssertRootLogPathIsSet() | Improve this Doc View Source EnsureStaticInitialization() Touches this type to ensure that its static information is initialized. This does nothing except that, since the Type is solicited, the type constructor is called if needed. Declaration public static bool EnsureStaticInitialization() Returns Type Description Boolean Always true. | Improve this Doc View Source EnsureSystemClient(IActivityMonitor) Registers the internal system client that routes errors and fatals as ActivityMonitor errors. Declaration public static IDisposable EnsureSystemClient(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor The monitor that can be temporary works as a SystemActivityMonitor . Returns Type Description IDisposable A disposable object that will unregister the system client (if it has been actually added). Events | Improve this Doc View Source OnError Event that enables subsequent handling of errors. Raising this event is protected: a registered handler that raises an exception will be automatically removed and the exception will be added to the CriticalErrorCollector collector to give other participants a chance to handle it and track the culprit. Declaration public static event EventHandler<SystemActivityMonitor.LowLevelErrorEventArgs> OnError Event Type Type Description EventHandler < SystemActivityMonitor.LowLevelErrorEventArgs >"
  },
  "api/CK.Core.SystemActivityMonitor.LowLevelErrorEventArgs.html": {
    "href": "api/CK.Core.SystemActivityMonitor.LowLevelErrorEventArgs.html",
    "title": "Class SystemActivityMonitor.LowLevelErrorEventArgs | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SystemActivityMonitor.LowLevelErrorEventArgs Defines the event argument of OnError . Inheritance Object EventArgs SystemActivityMonitor.LowLevelErrorEventArgs Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class LowLevelErrorEventArgs : EventArgs Fields | Improve this Doc View Source ErrorMessage The error message. Never null nor empty. Declaration public readonly string ErrorMessage Field Value Type Description String | Improve this Doc View Source ErrorWhileWritingLogFile Exception raised while attempting to create the error file. This could be used to handle configuration error: an exception here means that something is going really wrong. Declaration public readonly Exception ErrorWhileWritingLogFile Field Value Type Description Exception | Improve this Doc View Source FullLogFilePath Not null if the ErrorMessage has been successfully written (if RootLogPath is set). Contains the full path of the log file. Declaration public readonly string FullLogFilePath Field Value Type Description String"
  },
  "api/CK.Core.SourceLogFilter.html": {
    "href": "api/CK.Core.SourceLogFilter.html",
    "title": "Struct SourceLogFilter | CK.Core documentation",
    "keywords": "Improve this Doc View Source Struct SourceLogFilter Immutable encapsulation of the two source filters: this enables overriding or per source file filtering. Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public struct SourceLogFilter Constructors | Improve this Doc View Source SourceLogFilter(LogFilter, LogFilter) Initializes a new SourceLogFilter with a given filter for Override s and Minimal . Declaration public SourceLogFilter(LogFilter overrideFilter, LogFilter minimalFilter) Parameters Type Name Description LogFilter overrideFilter Overridden filter. LogFilter minimalFilter Minimal filter. Fields | Improve this Doc View Source Minimal The filter that when defined is combined with the ActualFilter . Declaration public readonly LogFilter Minimal Field Value Type Description LogFilter | Improve this Doc View Source Override The filter to be applied before challenging the ActualFilter . When not Undefined , the ActualFilter is ignored (as well as this Minimal ). Declaration public readonly LogFilter Override Field Value Type Description LogFilter | Improve this Doc View Source Undefined Undefined filter is Undefined for both Override and Minimal . This is the same as using the default constructor for this structure (it is exposed here for clarity). Declaration public static readonly SourceLogFilter Undefined Field Value Type Description SourceLogFilter Properties | Improve this Doc View Source IsUndefined Gets whether this is equal to Undefined . Declaration public bool IsUndefined { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Combine(SourceLogFilter) Combines this filter with another one. Override and Minimal level filters are combined with Combine(LogFilter) . Declaration public SourceLogFilter Combine(SourceLogFilter other) Parameters Type Name Description SourceLogFilter other The other filter to combine with this one. Returns Type Description SourceLogFilter The resulting filter."
  },
  "api/CK.Core.SimpleTypeFinder.html": {
    "href": "api/CK.Core.SimpleTypeFinder.html",
    "title": "Class SimpleTypeFinder | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SimpleTypeFinder Offers a global Resolver function that replaces System.Type.GetType(System.String,System.Boolean) . Default implementation is set to WeakResolver(String, Boolean) . Inheritance Object SimpleTypeFinder Namespace :CK.Core Assembly :CK.Core.dll Syntax public class SimpleTypeFinder Properties | Improve this Doc View Source RawGetType The System.Type.GetType(System.String,System.Boolean) function that StandardResolver(String, Boolean) and WeakResolver(String, Boolean) use. Another function may be injected in advanced scenario if needed. Declaration public static Func<string, bool, Type> RawGetType { get; set; } Property Value Type Description Func < String , Boolean , Type > | Improve this Doc View Source Resolver Gets or sets a global resolver. This resolver MUST always throw a System.TypeLoadException when the boolean parameter is true: this is what StandardResolver(String, Boolean) do. Defaults to WeakResolver(String, Boolean) . Declaration public static Func<string, bool, Type> Resolver { get; set; } Property Value Type Description Func < String , Boolean , Type > Methods | Improve this Doc View Source SplitAssemblyFullName(String, out String, out String) Helper method to split an assembly full name in two parts: \"CK.Core, version=1.0.0, culture='fr-FR'\" gives \"CK.Core\" and \"version=1.0.0, culture='fr-FR'\". Declaration public static bool SplitAssemblyFullName(string assemblyFullName, out string assemblyName, out string versionCultureAndPublicKeyToken) Parameters Type Name Description String assemblyFullName The assembly full name. String assemblyName Set to assembly name only. String versionCultureAndPublicKeyToken Set to extra information. Returns Type Description Boolean True if the split worked. False otherwise. | Improve this Doc View Source SplitAssemblyQualifiedName(String, out String, out String) Helper method to split the assembly qualified name into its assembly name and full type name. \"CK.Core.SimpleTypeFinder, CK.Core, version=1.0.0, culture='fr-FR'\" gives \"CK.Core.SimpleTypeFinder\" and \"CK.Core, version=1.0.0, culture='fr-FR'\". Declaration public static bool SplitAssemblyQualifiedName(string assemblyQualifiedName, out string fullTypeName, out string assemblyFullName) Parameters Type Name Description String assemblyQualifiedName The assembly qualified name to split. String fullTypeName Full type name on output or an empty string. String assemblyFullName Weaken type name on output or an empty string. Returns Type Description Boolean True if the weakening has been successfully done. False otherwise. | Improve this Doc View Source StandardResolver(String, Boolean) Direct implementation that checks that the assembly qualified name set as parameter is valid, then calls System.Type.GetType(System.String,System.Boolean) and converts any exception that may be raised to System.TypeLoadException . Declaration public static Type StandardResolver(string assemblyQualifiedName, bool throwOnError) Parameters Type Name Description String assemblyQualifiedName The assembly qualified name of a type. Boolean throwOnError True to ALWAYS throw a System.TypeLoadException if the type is not found. It may also throw System.ArgumentNullException and System.ArgumentException when the assembly qualified name is not valid False prevents any exception from being thrown and simply returns null. Returns Type Description Type The type or null if not found and throwOnError is false. Exceptions Type Condition System.TypeLoadException When throwOnError is true, always throws a type load exception. The original error (not a System.TypeLoadException ) is available in the System.Exception.InnerException . | Improve this Doc View Source WeakenAssemblyQualifiedName(String, out String) Helper method to remove version, architecture, publicTokenKey and culture from the assembly qualified name into its assembly name passed as parameter. \"CK.Core.SimpleTypeFinder, CK.Core, version=1.0.0, culture='fr-FR'\" gives \"CK.Core.SimpleTypeFinder, CK.Core\". Used to remove strong name from an strongly-named assembly qualified name Declaration public static bool WeakenAssemblyQualifiedName(string assemblyQualifiedName, out string weakTypeName) Parameters Type Name Description String assemblyQualifiedName The assembly qualified name to weaken. String weakTypeName The weakened assembly qualified name on output or an empty string. Returns Type Description Boolean True if the split has been successfully done. False otherwise. | Improve this Doc View Source WeakResolver(String, Boolean) An implementation of Resolver that can be used to load types regardless of the version, culture, architecture and public key token (strongly-named assemblies) of the type names. (See WeakenAssemblyQualifiedName(String, out String) .) Remarks The type name used is: \"NamespaceOfTheType.TypeName, AssemblyName\". Declaration public static Type WeakResolver(string assemblyQualifiedName, bool throwOnError) Parameters Type Name Description String assemblyQualifiedName Boolean throwOnError Returns Type Description Type The type or null if not found and throwOnError is false. Exceptions Type Condition System.TypeLoadException When throwOnError is true, always throws a type load exception. The original error (not a System.TypeLoadException ) is available in the System.Exception.InnerException ."
  },
  "api/CK.Core.SimpleServiceContainer.html": {
    "href": "api/CK.Core.SimpleServiceContainer.html",
    "title": "Class SimpleServiceContainer | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SimpleServiceContainer Service container (that is a System.IServiceProvider ) subordinated to an optional base IServiceProvider that acts as a fallback if the service is not found at this level. Service creation may be deferred thanks to callback registration and an optional remove callback can be registered with each entry. Inheritance Object SimpleServiceContainer Namespace :CK.Core Assembly :CK.Core.dll Syntax public class SimpleServiceContainer : ISimpleServiceContainer, IServiceProvider, IDisposable Remarks This container is registered as the service associated to System.IServiceProvider and ISimpleServiceContainer thanks to the overridable GetDirectService(Type) . This method may be overridden to return other built-in services: these services take precedence over the registered services. Constructors | Improve this Doc View Source SimpleServiceContainer() Initializes a new SimpleServiceContainer . Declaration public SimpleServiceContainer() | Improve this Doc View Source SimpleServiceContainer(IServiceProvider) Initializes a new SimpleServiceContainer with a BaseProvider . Declaration public SimpleServiceContainer(IServiceProvider baseProvider) Parameters Type Name Description IServiceProvider baseProvider Base System.IServiceProvider provider. Properties | Improve this Doc View Source BaseProvider Gets or sets the System.IServiceProvider that is queried whenever a service is not found in this container. Declaration public IServiceProvider BaseProvider { get; set; } Property Value Type Description IServiceProvider Methods | Improve this Doc View Source Add(Type, Func<Object>, Action<Object>) Registers a service associated to a callback (and an optional callback that will be called when the service will be removed). The serviceInstance is called as long as no service has been obtained (serviceInstance returns null). Once the actual service has been obtained, it is kept and serviceInstance is not called anymore. Declaration public ISimpleServiceContainer Add(Type serviceType, Func<object> serviceInstance, Action<object> onRemove) Parameters Type Name Description Type serviceType Service type to register. It must not already exist in this container otherwise an exception is thrown. Func < Object > serviceInstance Delegate to call when needed. Can not be null. Action < Object > onRemove Optional action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose is called and a service as been successfully obtained. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Add(Type, Object, Action<Object>) Registers a service with its implementation (and an optional callback that will be called when the service will be removed). Declaration public ISimpleServiceContainer Add(Type serviceType, object serviceInstance, Action<object> onRemove) Parameters Type Name Description Type serviceType Service type to register. It must not already exist in this container otherwise an exception is thrown. Object serviceInstance Implementation of the service. Can not be null. Action < Object > onRemove Optional action that will be called whenever Remove(Type) , Clear() or System.IDisposable.Dispose . Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source AddDisabled(Type) Disables a service: null will always be returned by this System.IServiceProvider.GetService(System.Type) regardless of any fallbacks from BaseProvider . Direct services returned by GetDirectService(Type) can not be disabled. Remarks This is not the same as calling Add(Type, Func<Object>, Action<Object>) with a null instance. A null instance for a service (a callback that always returns null) is nearly the same as calling Remove(Type) : any fallbacks (to a base System.IServiceProvider for example) can occur. This is stronger since this must prevent fallbacks. Declaration public ISimpleServiceContainer AddDisabled(Type serviceType) Parameters Type Name Description Type serviceType Service type to disable. It must not already exist in this container otherwise an exception is thrown. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Clear() Unregisters all the services. Any \"on remove\" actions are executed. Declaration public ISimpleServiceContainer Clear() Returns Type Description ISimpleServiceContainer This object to enable fluent syntax. | Improve this Doc View Source Dispose() Disposing calls Clear() to unregister all services. Any \"on remove\" actions are executed. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) When disposing is true, calls Clear() to unregister all services. Any \"on remove\" actions are executed. Whether Dispose() has been called. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Ensures that potential unmanaged resources are correctly released by calling Dispose(Boolean) with false. Declaration protected void Finalize() | Improve this Doc View Source GetDirectService(Type) Must return built-in services if any. These services take precedence over any registered services. This base implementation returns this object for System.IServiceProvider and ISimpleServiceContainer . Declaration protected virtual object GetDirectService(Type serviceType) Parameters Type Name Description Type serviceType Type of the service to obtain. Returns Type Description Object A built-in service or null. | Improve this Doc View Source GetService(Type) Implements System.IServiceProvider.GetService(System.Type) . Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType Type of the service to obtain. Returns Type Description Object Built-in service, registered service, service from BaseProvider or null. | Improve this Doc View Source Remove(Type) Unregisters a service. Can be called even if the service does not exist. The service is first removed and then the OnRemove associated action is called if it exists. Declaration public ISimpleServiceContainer Remove(Type serviceType) Parameters Type Name Description Type serviceType Service type to unregister. Returns Type Description ISimpleServiceContainer This object to enable fluent syntax."
  },
  "api/CK.Core.ActivityMonitorTextHelperClient.html": {
    "href": "api/CK.Core.ActivityMonitorTextHelperClient.html",
    "title": "Class ActivityMonitorTextHelperClient | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorTextHelperClient Base class for IActivityMonitorClient that tracks groups and level changes in order to ease text-based renderer. Inheritance Object ActivityMonitorTextHelperClient Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public abstract class ActivityMonitorTextHelperClient : IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorTextHelperClient() Initialize a new ActivityMonitorTextHelperClient . Declaration protected ActivityMonitorTextHelperClient() | Improve this Doc View Source ActivityMonitorTextHelperClient(LogFilter) Initialize a new ActivityMonitorTextHelperClient with a filter. Declaration protected ActivityMonitorTextHelperClient(LogFilter filter) Parameters Type Name Description LogFilter filter Properties | Improve this Doc View Source IActivityMonitorBoundClient.MinimalFilter Declaration LogFilter IActivityMonitorBoundClient.MinimalFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source Filter Gets or sets the filter for this client. Declaration public LogFilter Filter { get; set; } Property Value Type Description LogFilter Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Called for text with the same LogLevel as the previous ones. Declaration protected abstract void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Called for the first text of a LogLevel . Declaration protected abstract void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Declaration protected abstract void OnGroupClose(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that concludes the group. Never null but can be empty. | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Called whenever a group is opened. Declaration protected abstract void OnGroupOpen(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened group. | Improve this Doc View Source OnLeaveLevel(LogLevel) Called when current log level changes. Declaration protected abstract void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level The previous log level (without IsFiltered )."
  },
  "api/CK.Core.ActivityMonitorSimpleCollector.html": {
    "href": "api/CK.Core.ActivityMonitorSimpleCollector.html",
    "title": "Class ActivityMonitorSimpleCollector | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorSimpleCollector Simple collector of log entries which level is greater or equal to MinimalFilter . Its Capacity defaults to 50 (no more than Capacity entries are kept). Used by the CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) extension method. Inheritance Object ActivityMonitorSimpleCollector Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorSimpleCollector : IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorSimpleCollector() Initializes a new collector with an initial capacity of 50 errors ( MinimalFilter is set to Error ). Declaration public ActivityMonitorSimpleCollector() Properties | Improve this Doc View Source Capacity Gets or sets the maximum numbers of ActivityMonitorSimpleCollector.Entry that must be kept in Entries . Defaults to 50. Declaration public int Capacity { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Entries Gets a read only list of (at most) Capacity entries that occurred since last call to Clear() . Declaration public IReadOnlyList<ActivityMonitorSimpleCollector.Entry> Entries { get; } Property Value Type Description IReadOnlyList < ActivityMonitorSimpleCollector.Entry > | Improve this Doc View Source MinimalFilter Gets or sets the filter level. Declaration public LogLevelFilter MinimalFilter { get; set; } Property Value Type Description LogLevelFilter Methods | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CKTrait newTrait | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Appends any group with level equal or above MinimalFilter to Entries . Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group Log group description. | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Appends any log with level equal or above MinimalFilter to Entries . Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null. | Improve this Doc View Source Clear() Clears the current Entries list. Declaration public void Clear()"
  },
  "api/CK.Core.ActivityMonitorSimpleCollector.Entry.html": {
    "href": "api/CK.Core.ActivityMonitorSimpleCollector.Entry.html",
    "title": "Class ActivityMonitorSimpleCollector.Entry | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorSimpleCollector.Entry Element of the Entries . Inheritance Object ActivityMonitorSimpleCollector.Entry Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class Entry Fields | Improve this Doc View Source Exception The exception of the log entry if any. Declaration public readonly Exception Exception Field Value Type Description Exception | Improve this Doc View Source LogTime Time of the log entry. Declaration public readonly DateTimeStamp LogTime Field Value Type Description DateTimeStamp | Improve this Doc View Source MaskedLevel The log level of the log entry. Declaration public readonly LogLevel MaskedLevel Field Value Type Description LogLevel | Improve this Doc View Source Tags The tags of the log entry. Declaration public readonly CKTrait Tags Field Value Type Description CKTrait | Improve this Doc View Source Text The text of the log entry. Declaration public readonly string Text Field Value Type Description String Methods | Improve this Doc View Source ToString() Overridden to return the Text of this element. Declaration public override string ToString() Returns Type Description String This Text property."
  },
  "api/CK.Core.ActivityMonitorSendExtension.html": {
    "href": "api/CK.Core.ActivityMonitorSendExtension.html",
    "title": "Class ActivityMonitorSendExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorSendExtension Provides Send extension methods for IActivityMonitorGroupSender . Inheritance Object ActivityMonitorSendExtension Namespace :CK.Core Assembly :CK.ActivityMonitor.StandardSender.dll Syntax public class ActivityMonitorSendExtension Methods | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, Func<String>) Sends a text obtained through a delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String) Sends a text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object[]) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception) Sends a log with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait) Sends a log with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, Func<String>) Sends a text obtained through a delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String) Sends a text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object[]) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, Func<String>) Sends a text obtained through a delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String) Sends a text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object[]) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Exception ex, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Func<String>) Sends a text obtained through a delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String) Sends a text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object[]) Sends a formatted text. Declaration public static IDisposableGroup Send(IActivityMonitorGroupSender this, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, Func<String>) Sends a text obtained through a delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String) Sends a text with associated tags. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object) Sends a formatted text with associated tags. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object, Object) Sends a formatted text with associated tags. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object[]) Sends a formatted text with associated tags. Declaration public static void Send(IActivityMonitorLineSender this, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception) Sends a log with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait) Sends a log with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, Func<String>) Sends a text obtained through a delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String) Sends a text with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object[]) Sends a formatted text with an exception and associated tags. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, Func<String>) Sends a text obtained through a delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String) Sends a text with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object) Sends a formatted text with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object, Object) Sends a formatted text with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object, Object, Object) Sends a formatted text with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object[]) Sends a formatted text with an exception. Declaration public static void Send(IActivityMonitorLineSender this, Exception ex, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Func<String>) Sends a text obtained through a delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send(IActivityMonitorLineSender this, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, String) Sends a text. Declaration public static void Send(IActivityMonitorLineSender this, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object) Sends a formatted text. Declaration public static void Send(IActivityMonitorLineSender this, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object, Object) Sends a formatted text. Declaration public static void Send(IActivityMonitorLineSender this, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object, Object, Object) Sends a formatted text. Declaration public static void Send(IActivityMonitorLineSender this, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object[]) Sends a formatted text. Declaration public static void Send(IActivityMonitorLineSender this, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(IActivityMonitorGroupSender this, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Exception, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(IActivityMonitorGroupSender this, Exception ex, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Func<T, String>, T) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(IActivityMonitorGroupSender this, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(IActivityMonitorLineSender this, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Exception, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Exception, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(IActivityMonitorLineSender this, Exception ex, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Func<T, String>, T) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(IActivityMonitorLineSender this, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(IActivityMonitorGroupSender this, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Exception, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(IActivityMonitorGroupSender this, Exception ex, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(IActivityMonitorGroupSender this, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(IActivityMonitorLineSender this, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Exception, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(IActivityMonitorLineSender this, Exception ex, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(IActivityMonitorLineSender this, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(IActivityMonitorGroupSender this, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(IActivityMonitorGroupSender this, Exception ex, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(IActivityMonitorGroupSender this, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(IActivityMonitorLineSender this, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(IActivityMonitorLineSender this, Exception ex, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(IActivityMonitorLineSender this, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts."
  },
  "api/CK.Core.ActivityMonitorSenderExtension.html": {
    "href": "api/CK.Core.ActivityMonitorSenderExtension.html",
    "title": "Class ActivityMonitorSenderExtension | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorSenderExtension Provides OpenXXX and XXX (Trace, Info,...Fatal) extension methods for IActivityMonitor . Inheritance Object ActivityMonitorSenderExtension Namespace :CK.Core Assembly :CK.ActivityMonitor.StandardSender.dll Syntax public class ActivityMonitorSenderExtension Methods | Improve this Doc View Source Error(IActivityMonitor, Int32, String) Filters Error logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Error(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Fatal(IActivityMonitor, Int32, String) Filters Fatal logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Fatal(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Info(IActivityMonitor, Int32, String) Filters Info logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Info(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source OpenError(IActivityMonitor, Int32, String) Filtered Error group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenError(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenFatal(IActivityMonitor, Int32, String) Filtered Fatal group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenFatal(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenInfo(IActivityMonitor, Int32, String) Filtered Info group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenInfo(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenTrace(IActivityMonitor, Int32, String) Filtered Trace group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenTrace(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenWarn(IActivityMonitor, Int32, String) Filtered Warn group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenWarn(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source Trace(IActivityMonitor, Int32, String) Filters Trace logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Trace(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Warn(IActivityMonitor, Int32, String) Filters Warn logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Warn(IActivityMonitor this, [CallerLineNumber] int lineNumber = 0, [CallerFilePath] string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted."
  },
  "api/CK.Core.ActivityMonitorPathCatcher.html": {
    "href": "api/CK.Core.ActivityMonitorPathCatcher.html",
    "title": "Class ActivityMonitorPathCatcher | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorPathCatcher The \"Path Catcher\" captures the current path of the opened groups and the last, current, line and exposes it thanks to a read only list of ActivityMonitorPathCatcher.PathElement (the DynamicPath property), plus two other specific paths, the LastErrorPath and the LastWarnOrErrorPath . Inheritance Object ActivityMonitorClient ActivityMonitorPathCatcher Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorPathCatcher : ActivityMonitorClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorPathCatcher() Initializes a new ActivityMonitorPathCatcher . Declaration public ActivityMonitorPathCatcher() Properties | Improve this Doc View Source DynamicPath Gets the current (mutable) path. You may use ToArray or ToList methods to take a snapshot of this list. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> DynamicPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > | Improve this Doc View Source IsLocked Gets or sets whether this ActivityMonitorPathCatcher can be removed from its monitor. Defaults to false. When setting this to true, UnregisterClient(IActivityMonitorClient) does not remove it. Declaration public bool IsLocked { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LastErrorPath Gets the last DynamicPath where an Error or a Fatal occurred. Null if no error nor fatal occurred. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> LastErrorPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > | Improve this Doc View Source LastWarnOrErrorPath Gets the last path with a Fatal , Error or a Warn . Null if no error, fatal nor warn occurred. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> LastWarnOrErrorPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > Methods | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove | Improve this Doc View Source ClearLastErrorPath() Clears current LastErrorPath (sets it to null). Declaration public void ClearLastErrorPath() | Improve this Doc View Source ClearLastWarnPath(Boolean) Clears current LastWarnOrErrorPath (sets it to null), and optionally clears LastErrorPath . Declaration public void ClearLastWarnPath(bool clearLastErrorPath = false) Parameters Type Name Description Boolean clearLastErrorPath | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Removes one or two last ActivityMonitorPathCatcher.PathElement of DynamicPath . Declaration protected override void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. Never null but can be empty. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Appends or updates the last ActivityMonitorPathCatcher.PathElement of DynamicPath and handles errors or warning. Declaration protected override void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Appends or updates the last ActivityMonitorPathCatcher.PathElement of DynamicPath and handles errors or warning. Declaration protected override void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null."
  },
  "api/CK.Core.ActivityMonitorPathCatcher.PathElement.html": {
    "href": "api/CK.Core.ActivityMonitorPathCatcher.PathElement.html",
    "title": "Class ActivityMonitorPathCatcher.PathElement | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class ActivityMonitorPathCatcher.PathElement Element of the DynamicPath , LastErrorPath , or LastWarnOrErrorPath . Inheritance Object ActivityMonitorPathCatcher.PathElement Namespace :CK.Core Assembly :CK.ActivityMonitor.dll Syntax public class PathElement Properties | Improve this Doc View Source GroupConclusion Gets the conclusions associated to a group. Null if this element does not correspond to a group. Declaration public IReadOnlyList<ActivityLogGroupConclusion> GroupConclusion { get; } Property Value Type Description IReadOnlyList < ActivityLogGroupConclusion > | Improve this Doc View Source MaskedLevel Gets the log level of the log entry. Declaration public LogLevel MaskedLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Tags Gets the tags of the log entry. Declaration public CKTrait Tags { get; } Property Value Type Description CKTrait | Improve this Doc View Source Text Gets the text of the log entry. Declaration public string Text { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Overridden to return the Text of this element. Declaration public override string ToString() Returns Type Description String This Text property."
  },
  "api/CodeCakeBuilder.html": {
    "href": "api/CodeCakeBuilder.html",
    "title": "Namespace CodeCakeBuilder | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CodeCakeBuilder Classes Program"
  },
  "api/CodeCakeBuilder.Program.html": {
    "href": "api/CodeCakeBuilder.Program.html",
    "title": "Class Program | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Program Inheritance Object Program Namespace :CodeCakeBuilder Assembly :CodeCakeBuilder.dll Syntax public class Program Methods | Improve this Doc View Source Main(String[]) Declaration public static int Main(string[] args) Parameters Type Name Description String [] args Returns Type Description Int32"
  },
  "api/CodeCake.html": {
    "href": "api/CodeCake.html",
    "title": "Namespace CodeCake | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CodeCake Classes Build Sample build \"script\". It can be decorated with AddPath attributes that inject paths into the PATH environment variable."
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.E.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.E.html",
    "title": "Class AutoImplementorTests.E | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.E Inheritance Object AutoImplementorTests.E Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class E Methods | Improve this Doc View Source M(ref Int32) Declaration public abstract byte M(ref int i) Parameters Type Name Description Int32 i Returns Type Description Byte"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.D.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.D.html",
    "title": "Class AutoImplementorTests.D | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.D Inheritance Object AutoImplementorTests.D Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class D Methods | Improve this Doc View Source M(Int32) Declaration public abstract Guid M(int i) Parameters Type Name Description Int32 i Returns Type Description Guid"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.CVirtualProperty.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.CVirtualProperty.html",
    "title": "Class AutoImplementorTests.CVirtualProperty | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.CVirtualProperty Inheritance Object AutoImplementorTests.CVirtualProperty Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class CVirtualProperty Constructors | Improve this Doc View Source CVirtualProperty() Declaration public CVirtualProperty() Properties | Improve this Doc View Source PublicProperty Declaration public virtual int PublicProperty { get; set; } Property Value Type Description Int32"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.CustAttr.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.CustAttr.html",
    "title": "Class AutoImplementorTests.CustAttr | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.CustAttr Inheritance Object Attribute AutoImplementorTests.CustAttr Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax [AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Parameter, AllowMultiple = true)] public class CustAttr : Attribute, _Attribute Constructors | Improve this Doc View Source CustAttr() Declaration public CustAttr() | Improve this Doc View Source CustAttr(String) Declaration public CustAttr(string name) Parameters Type Name Description String name Fields | Improve this Doc View Source FieldName Declaration public string FieldName Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.CNonVirtualProperty.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.CNonVirtualProperty.html",
    "title": "Class AutoImplementorTests.CNonVirtualProperty | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.CNonVirtualProperty Inheritance Object AutoImplementorTests.CNonVirtualProperty Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class CNonVirtualProperty Constructors | Improve this Doc View Source CNonVirtualProperty() Declaration public CNonVirtualProperty() Properties | Improve this Doc View Source PublicProperty Declaration public int PublicProperty { get; set; } Property Value Type Description Int32"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.C.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.C.html",
    "title": "Class AutoImplementorTests.C | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.C Inheritance Object AutoImplementorTests.C Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public abstract class C Methods | Improve this Doc View Source M(Int32) Declaration public abstract short M(int i) Parameters Type Name Description Int32 i Returns Type Description Int16"
  },
  "api/CK.Reflection.Tests.AutoImplementorTests.BaseTwo.html": {
    "href": "api/CK.Reflection.Tests.AutoImplementorTests.BaseTwo.html",
    "title": "Class AutoImplementorTests.BaseTwo | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class AutoImplementorTests.BaseTwo Inheritance Object AutoImplementorTests.BaseTwo Namespace :CK.Reflection.Tests Assembly :CK.Reflection.Tests.dll Syntax public class BaseTwo Constructors | Improve this Doc View Source BaseTwo(Int32[]) Declaration public BaseTwo(params int[] multi) Parameters Type Name Description Int32 [] multi Fields | Improve this Doc View Source CtorMessage Declaration public readonly string CtorMessage Field Value Type Description String"
  },
  "api/CodeCake.Build.html": {
    "href": "api/CodeCake.Build.html",
    "title": "Class Build | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class Build Sample build \"script\". It can be decorated with AddPath attributes that inject paths into the PATH environment variable. Inheritance Object CodeCake.CodeCakeHost Build Namespace :CodeCake Assembly :CodeCakeBuilder.dll Syntax [AddPath(\"CodeCakeBuilder/Tools\", true)] [AddPath(\"packages/**/tools*\", true)] public class Build : CodeCakeHost, ICodeCakeHost Constructors | Improve this Doc View Source Build() Declaration public Build()"
  },
  "api/CK.Text.html": {
    "href": "api/CK.Text.html",
    "title": "Namespace CK.Text | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Text Classes CKBinaryReader Specializes System.IO.BinaryReader to expose helpers. CKBinaryWriter Specializes System.IO.BinaryWriter to expose helpers. JSONVisitor Small JSON visitor. StringAndStringBuilderExtension Defines useful extension methods on string and StringBuilder. StringMatcher This class supports \"Match and Forward\" pattern. On a failed match, the SetError(Object, String) method sets the ErrorMessage . On a successful match, the StartIndex is updated by a call to Forward(Int32) so that the Head is positioned after the match (and any existing error is cleared). There are 2 main kind of methods: TryMatchXXX that when the match fails returns false but do not call SetError(Object, String) and MatchXXX that do set an error on failure. This class does not actually hide/encapsulate a lot of things: it is designed to be extended through extension methods. StringMatcherTextExtension Extends StringMatcher with useful (yet basic) methods. Structs JSONVisitor.Parent Describes a parent object: it is the name of a property and its index or the index in a array."
  },
  "api/CK.Text.Tests.html": {
    "href": "api/CK.Text.Tests.html",
    "title": "Namespace CK.Text.Tests | CK.Core documentation",
    "keywords": "Improve this Doc Namespace CK.Text.Tests Classes ExploringTests JSONVisitorTests SlowMethods StringAndStringBuilderExtensionTests StringMatcherTests"
  },
  "api/CK.Text.Tests.StringMatcherTests.html": {
    "href": "api/CK.Text.Tests.StringMatcherTests.html",
    "title": "Class StringMatcherTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringMatcherTests Inheritance Object StringMatcherTests Namespace :CK.Text.Tests Assembly :CK.Text.Tests.dll Syntax [TestFixture] public class StringMatcherTests Methods | Improve this Doc View Source match_methods_must_set_an_error() Declaration public void match_methods_must_set_an_error() | Improve this Doc View Source matching_double_values(String, Double) Declaration [TestCase(\"0\", 0)] [TestCase(\"9876978\", 9876978)] [TestCase(\"-9876978\", -9876978)] [TestCase(\"0.0\", 0)] [TestCase(\"0.00\", 0)] [TestCase(\"0.34\", 0.34)] [TestCase(\"4e5\", 400000)] [TestCase(\"4E5\", 400000)] [TestCase(\"29380.34e98\", 2.938034E+102)] [TestCase(\"29380.34E98\", 2.938034E+102)] [TestCase(\"-80.34e-98\", -8.034E-97)] [TestCase(\"-80.34E-98\", -8.034E-97)] public void matching_double_values(string s, double d) Parameters Type Name Description String s Double d | Improve this Doc View Source matching_integers() Declaration [Test] public void matching_integers() | Improve this Doc View Source matching_integers_with_min_max_values() Declaration [Test] public void matching_integers_with_min_max_values() | Improve this Doc View Source matching_JSONQuotedString(String, String, String) Declaration [TestCase(\"null, true\", null, \", true\")] [TestCase(\"\\\"\\\"X\", \"\", \"X\")] [TestCase(\"\\\"a\\\"X\", \"a\", \"X\")] [TestCase(\"\\\"\\\\\\\\\\\"X\", \"\\\\\", \"X\")] [TestCase(\"\\\"A\\\\\\\\B\\\"X\", \"A\\\\B\", \"X\")] [TestCase(\"\\\"A\\\\\\\\B\\\\r\\\"X\", \"A\\\\B\\r\", \"X\")] [TestCase(\"\\\"A\\\\\\\\B\\\\r\\\\\\\"\\\"X\", \"A\\\\B\\r\\\"\", \"X\")] [TestCase(\"\\\"\\\\u8976\\\"X\", \"襶\", \"X\")] [TestCase(\"\\\"\\\\uABCD\\\\u07FC\\\"X\", \"ꯍ\\u07fc\", \"X\")] [TestCase(\"\\\"\\\\uabCd\\\\u07fC\\\"X\", \"ꯍ\\u07fc\", \"X\")] public void matching_JSONQuotedString(string s, string parsed, string textAfter) Parameters Type Name Description String s String parsed String textAfter | Improve this Doc View Source matching_texts_and_whitespaces() Declaration [Test] public void matching_texts_and_whitespaces() | Improve this Doc View Source simple_char_matching() Declaration [Test] public void simple_char_matching() | Improve this Doc View Source simple_json_test() Declaration [Test] public void simple_json_test() | Improve this Doc View Source ToString_constains_the_text_and_the_error() Declaration [Test] public void ToString_constains_the_text_and_the_error()"
  },
  "api/CK.Text.Tests.StringAndStringBuilderExtensionTests.html": {
    "href": "api/CK.Text.Tests.StringAndStringBuilderExtensionTests.html",
    "title": "Class StringAndStringBuilderExtensionTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class StringAndStringBuilderExtensionTests Inheritance Object StringAndStringBuilderExtensionTests Namespace :CK.Text.Tests Assembly :CK.Text.Tests.dll Syntax [TestFixture] public class StringAndStringBuilderExtensionTests Methods | Improve this Doc View Source appending_multiple_strings_with_a_repeat_count() Declaration [Test] public void appending_multiple_strings_with_a_repeat_count() | Improve this Doc View Source appends_multiple_strings_silently_ignores_0_or_negative_RepeatCount() Declaration [Test] public void appends_multiple_strings_silently_ignores_0_or_negative_RepeatCount() | Improve this Doc View Source appends_multiple_strings_silently_ignores_null_or_empty_string_to_repeat() Declaration [Test] public void appends_multiple_strings_silently_ignores_null_or_empty_string_to_repeat() | Improve this Doc View Source concat_method_uses_StringBuilder_AppendStrings_inside() Declaration [Test] public void concat_method_uses_StringBuilder_AppendStrings_inside() | Improve this Doc View Source StringBuilder_AppendStrings_method_does_not_skip_null_entries() Declaration [Test] public void StringBuilder_AppendStrings_method_does_not_skip_null_entries()"
  },
  "api/CK.Text.Tests.SlowMethods.html": {
    "href": "api/CK.Text.Tests.SlowMethods.html",
    "title": "Class SlowMethods | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class SlowMethods Inheritance Object SlowMethods Namespace :CK.Text.Tests Assembly :CK.Text.Tests.dll Syntax public class SlowMethods Methods | Improve this Doc View Source AppendMultiLine(StringBuilder, String, String, Boolean, Boolean) Declaration public static StringBuilder AppendMultiLine(StringBuilder this, string prefix, string text, bool prefixOnFirstLine, bool prefixLastEmptyLine = false) Parameters Type Name Description StringBuilder this String prefix String text Boolean prefixOnFirstLine Boolean prefixLastEmptyLine Returns Type Description StringBuilder"
  },
  "api/CK.Text.Tests.JSONVisitorTests.html": {
    "href": "api/CK.Text.Tests.JSONVisitorTests.html",
    "title": "Class JSONVisitorTests | CK.Core documentation",
    "keywords": "Improve this Doc View Source Class JSONVisitorTests Inheritance Object JSONVisitorTests Namespace :CK.Text.Tests Assembly :CK.Text.Tests.dll Syntax [TestFixture] public class JSONVisitorTests Methods | Improve this Doc View Source extracting_properties_from_a_JSON() Declaration [Test] public void extracting_properties_from_a_JSON() | Improve this Doc View Source minifying_JSON() Declaration [Test] public void minifying_JSON() | Improve this Doc View Source summing_all_doubles_in_a_json() Declaration [Test] public void summing_all_doubles_in_a_json() | Improve this Doc View Source using_JSONVisitor_to_transform_all_doubles_in_it() Declaration [Test] public void using_JSONVisitor_to_transform_all_doubles_in_it()"
  }
}